{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1","program":"C:\\Users\\Administrator\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","lebe","--edition=2018","C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=06c47ac183dedf34","-C","extra-filename=-06c47ac183dedf34","--out-dir","d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","-L","dependency=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Administrator\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\liblebe-06c47ac183dedf34.rmeta"},"prelude":{"crate_id":{"name":"lebe","disambiguator":[9115292761846110253,0]},"crate_root":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src","external_crates":[{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14055050308901652574,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5406660558723523310,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6038961408070452265,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6202505720861038248,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289845166519128743,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[39020721113303181,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12376455831296353094,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11449565758146872379,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14009155214127162348,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14302345610359121259,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[443988361779617849,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1060626961105550716,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10057676532539598168,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[10097761641719977187,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15541071652604932095,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[8355012413122137596,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16122166454175645634,0]}}],"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":0,"byte_end":20758,"line_start":1,"line_end":580,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1593,"byte_end":1599,"line_start":64,"line_end":64,"column_start":20,"column_end":26},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1626,"byte_end":1637,"line_start":65,"line_end":65,"column_start":26,"column_end":37},"alias_span":null,"name":"WriteEndian","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1639,"byte_end":1649,"line_start":65,"line_end":65,"column_start":39,"column_end":49},"alias_span":null,"name":"ReadEndian","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1651,"byte_end":1664,"line_start":65,"line_end":65,"column_start":51,"column_end":64},"alias_span":null,"name":"ReadPrimitive","value":"","parent":{"krate":0,"index":3}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":0,"byte_end":20758,"line_start":1,"line_end":580,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":17},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":38},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":39}],"decl_id":null,"docs":" Dead simple endianness conversions.\n The following operations are implemented on\n `u8`, `i8`, `u16`, `i16`, `u32`, `i32`, `u64`, `i64`, `u128`, `i128`, `f32`, `f64`:","sig":null,"attributes":[{"value":"warn(missing_docs, unused, trivial_numeric_casts, future_incompatible,\n       rust_2018_compatibility, rust_2018_idioms, clippy :: all)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":0,"byte_end":156,"line_start":1,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Dead simple endianness conversions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":213,"byte_end":252,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ The following operations are implemented on","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":253,"byte_end":300,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/ `u8`, `i8`, `u16`, `i16`, `u32`, `i32`, `u64`, `i64`, `u128`, `i128`, `f32`, `f64`:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":301,"byte_end":388,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":389,"byte_end":392,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":393,"byte_end":396,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Read Numbers","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":397,"byte_end":417,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":418,"byte_end":429,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ use lebe::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":430,"byte_end":455,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/ let mut reader: &[u8] = &[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":456,"byte_end":525,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":526,"byte_end":529,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let number : u64 = reader.read_from_little_endian()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":530,"byte_end":587,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/ let number = u64::read_from_big_endian(&mut reader)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":588,"byte_end":645,"line_start":23,"line_end":23,"column_start":1,"column_end":58}},{"value":"/ # Ok::<(), std::io::Error>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":646,"byte_end":680,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":681,"byte_end":688,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":689,"byte_end":692,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ### Read Slices","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":693,"byte_end":712,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":713,"byte_end":724,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":725,"byte_end":747,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ use lebe::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":748,"byte_end":773,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ let mut reader: &[u8] = &[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":774,"byte_end":843,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":844,"byte_end":847,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut numbers: &mut [u64] = &mut [0, 0];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":848,"byte_end":894,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ reader.read_from_little_endian_into(numbers)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":895,"byte_end":945,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/ # Ok::<(), std::io::Error>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":946,"byte_end":980,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":981,"byte_end":988,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":989,"byte_end":992,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ### Write Numbers","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":993,"byte_end":1014,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1015,"byte_end":1026,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1027,"byte_end":1049,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ use lebe::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1050,"byte_end":1075,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ let mut writer: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1076,"byte_end":1117,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1118,"byte_end":1121,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let number: u64 = 1237691;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1122,"byte_end":1152,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ writer.write_as_big_endian(&number)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1153,"byte_end":1194,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ # Ok::<(), std::io::Error>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1195,"byte_end":1229,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1230,"byte_end":1237,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1238,"byte_end":1241,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Write Slices","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1242,"byte_end":1262,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1263,"byte_end":1274,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1275,"byte_end":1298,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ use lebe::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1299,"byte_end":1324,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ let mut writer: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1325,"byte_end":1366,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1367,"byte_end":1370,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let numbers: &[u64] = &[1_u64, 234545_u64];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1371,"byte_end":1418,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/ writer.write_as_little_endian(numbers)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1419,"byte_end":1463,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ # Ok::<(), std::io::Error>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1464,"byte_end":1498,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1499,"byte_end":1506,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1507,"byte_end":1510,"line_start":59,"line_end":59,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1564,"byte_end":1571,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14}],"decl_id":null,"docs":" Exports some of the most common types.\n","sig":null,"attributes":[{"value":"/ Exports some of the most common types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1513,"byte_end":1555,"line_start":62,"line_end":62,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2155,"byte_end":2161,"line_start":77,"line_end":77,"column_start":11,"column_end":17},"name":"Endian","qualname":"::Endian","value":"Endian","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Represents values that can swap their bytes to reverse their endianness.","sig":null,"attributes":[{"value":"/ Represents values that can swap their bytes to reverse their endianness.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1671,"byte_end":1747,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1748,"byte_end":1751,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Supports converting values in-place using [`swap_bytes`] or [`convert_current_to_little_endian`]:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1752,"byte_end":1853,"line_start":70,"line_end":70,"column_start":1,"column_end":102}},{"value":"/ Supports converting while transferring ownership using","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1854,"byte_end":1912,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/ [`from_little_endian_into_current`] or [`from_current_into_little_endian`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1913,"byte_end":1992,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1993,"byte_end":1996,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":1997,"byte_end":2000,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ For the types `u8`, `i8`, `&[u8]` and `&[i8]`, this trait will never transform any data,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2001,"byte_end":2093,"line_start":75,"line_end":75,"column_start":1,"column_end":93}},{"value":"/ as they are just implemented for completeness.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2094,"byte_end":2144,"line_start":76,"line_end":76,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2237,"byte_end":2247,"line_start":80,"line_end":80,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::Endian::swap_bytes","value":"pub fn swap_bytes(&mut Self)","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Swaps all bytes in this value, inverting its endianness.\n","sig":null,"attributes":[{"value":"/ Swaps all bytes in this value, inverting its endianness.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2169,"byte_end":2229,"line_start":79,"line_end":79,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2404,"byte_end":2436,"line_start":84,"line_end":84,"column_start":18,"column_end":50},"name":"convert_current_to_little_endian","qualname":"::Endian::convert_current_to_little_endian","value":"pub fn convert_current_to_little_endian(&mut Self)","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a little endian machine, this does nothing.\n On a big endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a little endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2265,"byte_end":2315,"line_start":82,"line_end":82,"column_start":5,"column_end":55}},{"value":"/ On a big endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2320,"byte_end":2386,"line_start":83,"line_end":83,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2391,"byte_end":2400,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2681,"byte_end":2710,"line_start":92,"line_end":92,"column_start":18,"column_end":47},"name":"convert_current_to_big_endian","qualname":"::Endian::convert_current_to_big_endian","value":"pub fn convert_current_to_big_endian(&mut Self)","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a big endian machine, this does nothing.\n On a little endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a big endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2542,"byte_end":2589,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/ On a little endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2594,"byte_end":2663,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2668,"byte_end":2677,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2958,"byte_end":2990,"line_start":100,"line_end":100,"column_start":18,"column_end":50},"name":"convert_little_endian_to_current","qualname":"::Endian::convert_little_endian_to_current","value":"pub fn convert_little_endian_to_current(&mut Self)","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a little endian machine, this does nothing.\n On a big endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a little endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2819,"byte_end":2869,"line_start":98,"line_end":98,"column_start":5,"column_end":55}},{"value":"/ On a big endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2874,"byte_end":2940,"line_start":99,"line_end":99,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":2945,"byte_end":2954,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3235,"byte_end":3264,"line_start":108,"line_end":108,"column_start":18,"column_end":47},"name":"convert_big_endian_to_current","qualname":"::Endian::convert_big_endian_to_current","value":"pub fn convert_big_endian_to_current(&mut Self)","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a big endian machine, this does nothing.\n On a little endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a big endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3096,"byte_end":3143,"line_start":106,"line_end":106,"column_start":5,"column_end":52}},{"value":"/ On a little endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3148,"byte_end":3217,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3222,"byte_end":3231,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3512,"byte_end":3543,"line_start":116,"line_end":116,"column_start":18,"column_end":49},"name":"from_current_into_little_endian","qualname":"::Endian::from_current_into_little_endian","value":"pub fn from_current_into_little_endian(Self) -> Self where Self: Sized","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a little endian machine, this does nothing.\n On a big endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a little endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3373,"byte_end":3423,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/ On a big endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3428,"byte_end":3494,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3499,"byte_end":3508,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3794,"byte_end":3822,"line_start":123,"line_end":123,"column_start":18,"column_end":46},"name":"from_current_into_big_endian","qualname":"::Endian::from_current_into_big_endian","value":"pub fn from_current_into_big_endian(Self) -> Self where Self: Sized","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a big endian machine, this does nothing.\n On a little endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a big endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3655,"byte_end":3702,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ On a little endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3707,"byte_end":3776,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3781,"byte_end":3790,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":4070,"byte_end":4101,"line_start":130,"line_end":130,"column_start":18,"column_end":49},"name":"from_little_endian_into_current","qualname":"::Endian::from_little_endian_into_current","value":"pub fn from_little_endian_into_current(Self) -> Self where Self: Sized","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a little endian machine, this does nothing.\n On a big endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a little endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3931,"byte_end":3981,"line_start":128,"line_end":128,"column_start":5,"column_end":55}},{"value":"/ On a big endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":3986,"byte_end":4052,"line_start":129,"line_end":129,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":4057,"byte_end":4066,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":4352,"byte_end":4380,"line_start":137,"line_end":137,"column_start":18,"column_end":46},"name":"from_big_endian_into_current","qualname":"::Endian::from_big_endian_into_current","value":"pub fn from_big_endian_into_current(Self) -> Self where Self: Sized","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" On a big endian machine, this does nothing.\n On a little endian machine, the bytes of this value are reversed.\n","sig":null,"attributes":[{"value":"/ On a big endian machine, this does nothing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":4213,"byte_end":4260,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ On a little endian machine, the bytes of this value are reversed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":4265,"byte_end":4334,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":4339,"byte_end":4348,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6576,"byte_end":6578,"line_start":215,"line_end":215,"column_start":9,"column_end":11},"name":"io","qualname":"::io","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":84},{"krate":0,"index":89},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":106},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":335}],"decl_id":null,"docs":" Easily write primitives and slices of primitives to\n binary `std::io::Write` streams and easily read from binary `std::io::Read` streams.","sig":null,"attributes":[{"value":"/ Easily write primitives and slices of primitives to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6318,"byte_end":6373,"line_start":211,"line_end":211,"column_start":1,"column_end":56}},{"value":"/ binary `std::io::Write` streams and easily read from binary `std::io::Read` streams.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6374,"byte_end":6462,"line_start":212,"line_end":212,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6463,"byte_end":6466,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Also contains the unsafe `bytes` module for reinterpreting values as byte slices and vice versa.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6467,"byte_end":6567,"line_start":214,"line_end":214,"column_start":1,"column_end":101}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6735,"byte_end":6740,"line_start":220,"line_end":220,"column_start":13,"column_end":18},"name":"bytes","qualname":"::io::bytes","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81}],"decl_id":null,"docs":" Reinterpret values as byte slices and byte slices as values unsafely.\n","sig":null,"attributes":[{"value":"/ Reinterpret values as byte slices and byte slices as values unsafely.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6649,"byte_end":6722,"line_start":219,"line_end":219,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6887,"byte_end":6901,"line_start":225,"line_end":225,"column_start":23,"column_end":37},"name":"slice_as_bytes","qualname":"::io::bytes::slice_as_bytes","value":"pub unsafe fn slice_as_bytes<T>(&[T]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" View this slice of values as a slice of bytes.\n","sig":null,"attributes":[{"value":"/ View this slice of values as a slice of bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6796,"byte_end":6846,"line_start":223,"line_end":223,"column_start":9,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":6855,"byte_end":6864,"line_start":224,"line_end":224,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7201,"byte_end":7219,"line_start":234,"line_end":234,"column_start":23,"column_end":41},"name":"slice_as_bytes_mut","qualname":"::io::bytes::slice_as_bytes_mut","value":"pub unsafe fn slice_as_bytes_mut<T>(&mut [T]) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" View this slice of values as a mutable slice of bytes.\n","sig":null,"attributes":[{"value":"/ View this slice of values as a mutable slice of bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7102,"byte_end":7160,"line_start":232,"line_end":232,"column_start":9,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7169,"byte_end":7178,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7519,"byte_end":7533,"line_start":243,"line_end":243,"column_start":23,"column_end":37},"name":"value_as_bytes","qualname":"::io::bytes::value_as_bytes","value":"pub unsafe fn value_as_bytes<T: Sized>(&T) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" View this reference as a slice of bytes.\n","sig":null,"attributes":[{"value":"/ View this reference as a slice of bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7434,"byte_end":7478,"line_start":241,"line_end":241,"column_start":9,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7487,"byte_end":7496,"line_start":242,"line_end":242,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7821,"byte_end":7839,"line_start":252,"line_end":252,"column_start":23,"column_end":41},"name":"value_as_bytes_mut","qualname":"::io::bytes::value_as_bytes_mut","value":"pub unsafe fn value_as_bytes_mut<T: Sized>(&mut T) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" View this reference as a mutable slice of bytes.\n","sig":null,"attributes":[{"value":"/ View this reference as a mutable slice of bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7728,"byte_end":7780,"line_start":250,"line_end":250,"column_start":9,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":7789,"byte_end":7798,"line_start":251,"line_end":251,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8143,"byte_end":8154,"line_start":261,"line_end":261,"column_start":23,"column_end":34},"name":"write_slice","qualname":"::io::bytes::write_slice","value":"pub unsafe fn write_slice<T, impl Write: Write>(&mut impl Write, &[T])\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" View this slice as a mutable slice of bytes and write it.\n","sig":null,"attributes":[{"value":"/ View this slice as a mutable slice of bytes and write it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8041,"byte_end":8102,"line_start":259,"line_end":259,"column_start":9,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8111,"byte_end":8120,"line_start":260,"line_end":260,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8373,"byte_end":8383,"line_start":267,"line_end":267,"column_start":23,"column_end":33},"name":"read_slice","qualname":"::io::bytes::read_slice","value":"pub unsafe fn read_slice<T, impl Read: Read>(&mut impl Read, &mut [T])\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Read a slice of bytes into the specified slice.\n","sig":null,"attributes":[{"value":"/ Read a slice of bytes into the specified slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8281,"byte_end":8332,"line_start":265,"line_end":265,"column_start":9,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8341,"byte_end":8350,"line_start":266,"line_end":266,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8622,"byte_end":8633,"line_start":273,"line_end":273,"column_start":23,"column_end":34},"name":"write_value","qualname":"::io::bytes::write_value","value":"pub unsafe fn write_value<T: Sized, impl Write: Write>(&mut impl Write, &T)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" View this reference as a mutable slice of bytes and write it.\n","sig":null,"attributes":[{"value":"/ View this reference as a mutable slice of bytes and write it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8516,"byte_end":8581,"line_start":271,"line_end":271,"column_start":9,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8590,"byte_end":8599,"line_start":272,"line_end":272,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8861,"byte_end":8871,"line_start":279,"line_end":279,"column_start":23,"column_end":33},"name":"read_value","qualname":"::io::bytes::read_value","value":"pub unsafe fn read_value<T: Sized, impl Read: Read>(&mut impl Read, &mut T)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Read a slice of bytes into the specified reference.\n","sig":null,"attributes":[{"value":"/ Read a slice of bytes into the specified reference.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8765,"byte_end":8820,"line_start":277,"line_end":277,"column_start":9,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":8829,"byte_end":8838,"line_start":278,"line_end":278,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9419,"byte_end":9430,"line_start":290,"line_end":290,"column_start":15,"column_end":26},"name":"WriteEndian","qualname":"::io::WriteEndian","value":"WriteEndian<T: ?Sized>","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" A `std::io::Write` output stream which supports writing any primitive values as bytes.\n Will encode the values to be either little endian or big endian, as desired.","sig":null,"attributes":[{"value":"/ A `std::io::Write` output stream which supports writing any primitive values as bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9011,"byte_end":9101,"line_start":284,"line_end":284,"column_start":5,"column_end":95}},{"value":"/ Will encode the values to be either little endian or big endian, as desired.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9106,"byte_end":9186,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9191,"byte_end":9194,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This extension trait is implemented for all `Write` types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9199,"byte_end":9261,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ Add `use lebe::io::WriteEndian;` to your code","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9266,"byte_end":9315,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ to automatically unlock this functionality for all types that implement `Write`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9320,"byte_end":9404,"line_start":289,"line_end":289,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9552,"byte_end":9574,"line_start":293,"line_end":293,"column_start":12,"column_end":34},"name":"write_as_little_endian","qualname":"::io::WriteEndian::write_as_little_endian","value":"pub fn write_as_little_endian(&mut Self, &T) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Write the byte value of the specified reference, converting it to little endianness\n","sig":null,"attributes":[{"value":"/ Write the byte value of the specified reference, converting it to little endianness","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9453,"byte_end":9540,"line_start":292,"line_end":292,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9717,"byte_end":9736,"line_start":296,"line_end":296,"column_start":12,"column_end":31},"name":"write_as_big_endian","qualname":"::io::WriteEndian::write_as_big_endian","value":"pub fn write_as_big_endian(&mut Self, &T) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Write the byte value of the specified reference, converting it to big endianness\n","sig":null,"attributes":[{"value":"/ Write the byte value of the specified reference, converting it to big endianness","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9621,"byte_end":9705,"line_start":295,"line_end":295,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9865,"byte_end":9887,"line_start":299,"line_end":299,"column_start":12,"column_end":34},"name":"write_as_native_endian","qualname":"::io::WriteEndian::write_as_native_endian","value":"pub fn write_as_native_endian(&mut Self, &T) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Write the byte value of the specified reference, not converting it\n","sig":null,"attributes":[{"value":"/ Write the byte value of the specified reference, not converting it","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":9783,"byte_end":9853,"line_start":298,"line_end":298,"column_start":9,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10513,"byte_end":10523,"line_start":311,"line_end":311,"column_start":15,"column_end":25},"name":"ReadEndian","qualname":"::io::ReadEndian","value":"ReadEndian<T: ?Sized>","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" A `std::io::Read` input stream which supports reading any primitive values from bytes.\n Will decode the values from either little endian or big endian, as desired.","sig":null,"attributes":[{"value":"/ A `std::io::Read` input stream which supports reading any primitive values from bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10109,"byte_end":10199,"line_start":305,"line_end":305,"column_start":5,"column_end":95}},{"value":"/ Will decode the values from either little endian or big endian, as desired.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10204,"byte_end":10283,"line_start":306,"line_end":306,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10288,"byte_end":10291,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This extension trait is implemented for all `Read` types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10296,"byte_end":10357,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/ Add `use lebe::io::ReadEndian;` to your code","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10362,"byte_end":10410,"line_start":309,"line_end":309,"column_start":5,"column_end":53}},{"value":"/ to automatically unlock this functionality for all types that implement `Read`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10415,"byte_end":10498,"line_start":310,"line_end":310,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10641,"byte_end":10669,"line_start":314,"line_end":314,"column_start":12,"column_end":40},"name":"read_from_little_endian_into","qualname":"::io::ReadEndian::read_from_little_endian_into","value":"pub fn read_from_little_endian_into(&mut Self, &mut T) -> Result<()>","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" Read into the supplied reference. Acts the same as `std::io::Read::read_exact`.\n","sig":null,"attributes":[{"value":"/ Read into the supplied reference. Acts the same as `std::io::Read::read_exact`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10546,"byte_end":10629,"line_start":313,"line_end":313,"column_start":9,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10815,"byte_end":10840,"line_start":317,"line_end":317,"column_start":12,"column_end":37},"name":"read_from_big_endian_into","qualname":"::io::ReadEndian::read_from_big_endian_into","value":"pub fn read_from_big_endian_into(&mut Self, &mut T) -> Result<()>","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" Read into the supplied reference. Acts the same as `std::io::Read::read_exact`.\n","sig":null,"attributes":[{"value":"/ Read into the supplied reference. Acts the same as `std::io::Read::read_exact`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10720,"byte_end":10803,"line_start":316,"line_end":316,"column_start":9,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10986,"byte_end":11014,"line_start":320,"line_end":320,"column_start":12,"column_end":40},"name":"read_from_native_endian_into","qualname":"::io::ReadEndian::read_from_native_endian_into","value":"pub fn read_from_native_endian_into(&mut Self, &mut T) -> Result<()>","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" Read into the supplied reference. Acts the same as `std::io::Read::read_exact`.\n","sig":null,"attributes":[{"value":"/ Read into the supplied reference. Acts the same as `std::io::Read::read_exact`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":10891,"byte_end":10974,"line_start":319,"line_end":319,"column_start":9,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11324,"byte_end":11347,"line_start":327,"line_end":327,"column_start":12,"column_end":35},"name":"read_from_little_endian","qualname":"::io::ReadEndian::read_from_little_endian","value":"pub fn read_from_little_endian(&mut Self) -> Result<T> where T: Sized +\nDefault","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" Read the byte value of the inferred type\n","sig":null,"attributes":[{"value":"/ Read the byte value of the inferred type","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11250,"byte_end":11294,"line_start":325,"line_end":325,"column_start":9,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11303,"byte_end":11312,"line_start":326,"line_end":326,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11616,"byte_end":11636,"line_start":335,"line_end":335,"column_start":12,"column_end":32},"name":"read_from_big_endian","qualname":"::io::ReadEndian::read_from_big_endian","value":"pub fn read_from_big_endian(&mut Self) -> Result<T> where T: Sized + Default","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" Read the byte value of the inferred type\n","sig":null,"attributes":[{"value":"/ Read the byte value of the inferred type","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11542,"byte_end":11586,"line_start":333,"line_end":333,"column_start":9,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11595,"byte_end":11604,"line_start":334,"line_end":334,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11902,"byte_end":11925,"line_start":343,"line_end":343,"column_start":12,"column_end":35},"name":"read_from_native_endian","qualname":"::io::ReadEndian::read_from_native_endian","value":"pub fn read_from_native_endian(&mut Self) -> Result<T> where T: Sized +\nDefault","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":" Read the byte value of the inferred type\n","sig":null,"attributes":[{"value":"/ Read the byte value of the inferred type","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11828,"byte_end":11872,"line_start":341,"line_end":341,"column_start":9,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":11881,"byte_end":11890,"line_start":342,"line_end":342,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13035,"byte_end":13048,"line_start":378,"line_end":378,"column_start":15,"column_end":28},"name":"ReadPrimitive","qualname":"::io::ReadPrimitive","value":"ReadPrimitive<R: Read + ReadEndian<Self>>: Sized + Default","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" Offers a prettier versions of reading a primitive number.","sig":null,"attributes":[{"value":"/ Offers a prettier versions of reading a primitive number.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12298,"byte_end":12359,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12364,"byte_end":12367,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The default way of reading a value is:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12372,"byte_end":12414,"line_start":355,"line_end":355,"column_start":5,"column_end":47}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12419,"byte_end":12430,"line_start":356,"line_end":356,"column_start":5,"column_end":16}},{"value":"/ # use std::io::Read;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12435,"byte_end":12459,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/ # use lebe::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12464,"byte_end":12491,"line_start":358,"line_end":358,"column_start":5,"column_end":32}},{"value":"/ # let mut reader : &[u8] = &[2, 1];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12496,"byte_end":12535,"line_start":359,"line_end":359,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12540,"byte_end":12543,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let number: u16 = reader.read_from_little_endian()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12548,"byte_end":12604,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/ println!(\"{}\", number);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12609,"byte_end":12636,"line_start":362,"line_end":362,"column_start":5,"column_end":32}},{"value":"/ # Ok::<(), std::io::Error>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12641,"byte_end":12675,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12680,"byte_end":12683,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12688,"byte_end":12695,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12700,"byte_end":12703,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This trait enables you to use expressions:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12708,"byte_end":12754,"line_start":367,"line_end":367,"column_start":5,"column_end":51}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12759,"byte_end":12770,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ # use std::io::Read;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12775,"byte_end":12799,"line_start":369,"line_end":369,"column_start":5,"column_end":29}},{"value":"/ # use lebe::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12804,"byte_end":12831,"line_start":370,"line_end":370,"column_start":5,"column_end":32}},{"value":"/ # let mut reader : &[u8] = &[2, 1];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12836,"byte_end":12875,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12880,"byte_end":12883,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", u16::read_from_little_endian(&mut reader)?);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12888,"byte_end":12951,"line_start":373,"line_end":373,"column_start":5,"column_end":68}},{"value":"/ # Ok::<(), std::io::Error>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12956,"byte_end":12990,"line_start":374,"line_end":374,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12995,"byte_end":13002,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ .","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13007,"byte_end":13012,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13017,"byte_end":13020,"line_start":377,"line_end":377,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13211,"byte_end":13234,"line_start":380,"line_end":380,"column_start":12,"column_end":35},"name":"read_from_little_endian","qualname":"::io::ReadPrimitive::read_from_little_endian","value":"pub fn read_from_little_endian(&mut R) -> Result<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Read this value from the supplied reader. Same as `ReadEndian::read_from_little_endian()`.\n","sig":null,"attributes":[{"value":"/ Read this value from the supplied reader. Same as `ReadEndian::read_from_little_endian()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13105,"byte_end":13199,"line_start":379,"line_end":379,"column_start":9,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13432,"byte_end":13452,"line_start":385,"line_end":385,"column_start":12,"column_end":32},"name":"read_from_big_endian","qualname":"::io::ReadPrimitive::read_from_big_endian","value":"pub fn read_from_big_endian(&mut R) -> Result<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Read this value from the supplied reader. Same as `ReadEndian::read_from_big_endian()`.\n","sig":null,"attributes":[{"value":"/ Read this value from the supplied reader. Same as `ReadEndian::read_from_big_endian()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13329,"byte_end":13420,"line_start":384,"line_end":384,"column_start":9,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13650,"byte_end":13673,"line_start":390,"line_end":390,"column_start":12,"column_end":35},"name":"read_from_native_endian","qualname":"::io::ReadPrimitive::read_from_native_endian","value":"pub fn read_from_native_endian(&mut R) -> Result<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Read this value from the supplied reader. Same as `ReadEndian::read_from_native_endian()`.\n","sig":null,"attributes":[{"value":"/ Read this value from the supplied reader. Same as `ReadEndian::read_from_native_endian()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13544,"byte_end":13638,"line_start":389,"line_end":389,"column_start":9,"column_end":103}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12287,"byte_end":12288,"line_start":350,"line_end":350,"column_start":68,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":12287,"byte_end":12288,"line_start":350,"line_end":350,"column_start":68,"column_end":69},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":99},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13079,"byte_end":13084,"line_start":378,"line_end":378,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lebe-0.5.1\\src/lib.rs","byte_start":13087,"byte_end":13094,"line_start":378,"line_end":378,"column_start":67,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":2982},"to":{"krate":0,"index":100}}]}