{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1","program":"C:\\Users\\Administrator\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","miniz_oxide","--edition=2018","C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=23866f9ee181be67","-C","extra-filename=-23866f9ee181be67","--out-dir","d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","-L","dependency=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","--extern","adler=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libadler-a5adb37e286e0ce5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Administrator\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libminiz_oxide-23866f9ee181be67.rmeta"},"prelude":{"crate_id":{"name":"miniz_oxide","disambiguator":[17411890250125992976,0]},"crate_root":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src","external_crates":[{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[5406660558723523310,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6038961408070452265,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6202505720861038248,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8289845166519128743,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\shared.rs","num":5,"id":{"name":"adler","disambiguator":[2136645346904313700,0]}}],"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":0,"byte_end":6282,"line_start":1,"line_end":209,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":916,"byte_end":930,"line_start":34,"line_end":34,"column_start":24,"column_end":38},"alias_span":null,"name":"mz_adler32_oxide","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":976,"byte_end":991,"line_start":35,"line_end":35,"column_start":25,"column_end":40},"alias_span":null,"name":"MZ_ADLER32_INIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":993,"byte_end":1015,"line_start":35,"line_end":35,"column_start":42,"column_end":64},"alias_span":null,"name":"MZ_DEFAULT_WINDOW_BITS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":0,"byte_end":6282,"line_start":1,"line_end":209,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":400},{"krate":0,"index":666},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":985},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":682},{"krate":0,"index":1018},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":1099},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692}],"decl_id":null,"docs":" A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)\n DEFLATE/zlib encoder/decoder.\n The plan for this crate is to be used as a back-end for the\n [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the\n need to depend on a C library.","sig":null,"attributes":[{"value":"/ A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ DEFLATE/zlib encoder/decoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":81,"byte_end":114,"line_start":2,"line_end":2,"column_start":1,"column_end":34}},{"value":"/ The plan for this crate is to be used as a back-end for the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":115,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/ [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":179,"byte_end":266,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"/ need to depend on a C library.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":267,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":302,"byte_end":305,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":306,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ ## Simple compression/decompression:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":318,"byte_end":358,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ ``` rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":359,"byte_end":371,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":372,"byte_end":375,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ use miniz_oxide::inflate::decompress_to_vec;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":376,"byte_end":424,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ use miniz_oxide::deflate::compress_to_vec;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":425,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn roundtrip(data: &[u8]) {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":476,"byte_end":507,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/     let compressed = compress_to_vec(data, 6);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":508,"byte_end":558,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/     let decompressed = decompress_to_vec(compressed.as_slice()).expect(\"Failed to decompress!\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":559,"byte_end":659,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/ #   let _ = decompressed;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":660,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":690,"byte_end":695,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":696,"byte_end":699,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # roundtrip(b\"Test_data test data lalalal blabla\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":700,"byte_end":755,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":756,"byte_end":759,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":760,"byte_end":767,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"allow(warnings)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":769,"byte_end":788,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":789,"byte_end":812,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"no_std","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":813,"byte_end":823,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deflate","qualname":"::deflate","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":47},{"krate":0,"index":361},{"krate":0,"index":396},{"krate":0,"index":798},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":" This module contains functionality for compression.\n","sig":null,"attributes":[{"value":"/ This module contains functionality for compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6284,"byte_end":6339,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::deflate::core","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":113},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":115},{"krate":0,"index":714},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":771},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":217},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":265},{"krate":0,"index":286},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":306},{"krate":0,"index":324},{"krate":0,"index":329},{"krate":0,"index":336},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360}],"decl_id":null,"docs":" Streaming compression functionality.\n","sig":null,"attributes":[{"value":"/ Streaming compression functionality.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":14962,"byte_end":15002,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":23824,"byte_end":23837,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"name":"deflate_flags","qualname":"::deflate::core::deflate_flags","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":23893,"byte_end":23916,"line_start":170,"line_end":170,"column_start":15,"column_end":38},"name":"TDEFL_WRITE_ZLIB_HEADER","qualname":"::deflate::core::deflate_flags::TDEFL_WRITE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Whether to use a zlib wrapper.\n","sig":null,"attributes":[{"value":"/ Whether to use a zlib wrapper.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":23844,"byte_end":23878,"line_start":169,"line_end":169,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":23999,"byte_end":24020,"line_start":172,"line_end":172,"column_start":15,"column_end":36},"name":"TDEFL_COMPUTE_ADLER32","qualname":"::deflate::core::deflate_flags::TDEFL_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we compute the adler32 checksum.\n","sig":null,"attributes":[{"value":"/ Should we compute the adler32 checksum.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":23941,"byte_end":23984,"line_start":171,"line_end":171,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24193,"byte_end":24218,"line_start":175,"line_end":175,"column_start":15,"column_end":40},"name":"TDEFL_GREEDY_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_GREEDY_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more\n bytes to check for better matches.)\n","sig":null,"attributes":[{"value":"/ Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24045,"byte_end":24134,"line_start":173,"line_end":173,"column_start":5,"column_end":94}},{"value":"/ bytes to check for better matches.)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24139,"byte_end":24178,"line_start":174,"line_end":174,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24372,"byte_end":24407,"line_start":178,"line_end":178,"column_start":15,"column_end":50},"name":"TDEFL_NONDETERMINISTIC_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_NONDETERMINISTIC_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Used in miniz to skip zero-initializing hash and dict. We don't do this here, so\n this flag is ignored.\n","sig":null,"attributes":[{"value":"/ Used in miniz to skip zero-initializing hash and dict. We don't do this here, so","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24243,"byte_end":24327,"line_start":176,"line_end":176,"column_start":5,"column_end":89}},{"value":"/ this flag is ignored.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24332,"byte_end":24357,"line_start":177,"line_end":177,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24494,"byte_end":24511,"line_start":180,"line_end":180,"column_start":15,"column_end":32},"name":"TDEFL_RLE_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_RLE_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 0.\n","sig":null,"attributes":[{"value":"/ Only look for matches with a distance of 0.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24432,"byte_end":24479,"line_start":179,"line_end":179,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24603,"byte_end":24623,"line_start":182,"line_end":182,"column_start":15,"column_end":35},"name":"TDEFL_FILTER_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_FILTER_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only use matches that are at least 6 bytes long.\n","sig":null,"attributes":[{"value":"/ Only use matches that are at least 6 bytes long.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24536,"byte_end":24588,"line_start":181,"line_end":181,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24806,"byte_end":24835,"line_start":185,"line_end":185,"column_start":15,"column_end":44},"name":"TDEFL_FORCE_ALL_STATIC_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_STATIC_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output static blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[{"value":"/ Force the compressor to only output static blocks. (Blocks using the default huffman codes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24648,"byte_end":24742,"line_start":183,"line_end":183,"column_start":5,"column_end":99}},{"value":"/ specified in the deflate specification.)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24747,"byte_end":24791,"line_start":184,"line_end":184,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24939,"byte_end":24965,"line_start":187,"line_end":187,"column_start":15,"column_end":41},"name":"TDEFL_FORCE_ALL_RAW_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_RAW_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output raw/uncompressed blocks.\n","sig":null,"attributes":[{"value":"/ Force the compressor to only output raw/uncompressed blocks.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24860,"byte_end":24924,"line_start":186,"line_end":186,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25254,"byte_end":25261,"line_start":197,"line_end":197,"column_start":5,"column_end":12},"name":"Default","qualname":"::deflate::core::CompressionStrategy::Default","value":"CompressionStrategy::Default","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Don't use any of the special strategies.\n","sig":null,"attributes":[{"value":"/ Don't use any of the special strategies.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25205,"byte_end":25249,"line_start":196,"line_end":196,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25328,"byte_end":25336,"line_start":199,"line_end":199,"column_start":5,"column_end":13},"name":"Filtered","qualname":"::deflate::core::CompressionStrategy::Filtered","value":"CompressionStrategy::Filtered","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Only use matches that are at least 5 bytes long.\n","sig":null,"attributes":[{"value":"/ Only use matches that are at least 5 bytes long.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25271,"byte_end":25323,"line_start":198,"line_end":198,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25412,"byte_end":25423,"line_start":201,"line_end":201,"column_start":5,"column_end":16},"name":"HuffmanOnly","qualname":"::deflate::core::CompressionStrategy::HuffmanOnly","value":"CompressionStrategy::HuffmanOnly","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Don't look for matches, only huffman encode the literals.\n","sig":null,"attributes":[{"value":"/ Don't look for matches, only huffman encode the literals.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25346,"byte_end":25407,"line_start":200,"line_end":200,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25518,"byte_end":25521,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"RLE","qualname":"::deflate::core::CompressionStrategy::RLE","value":"CompressionStrategy::RLE","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 1, i.e do run-length encoding only.\n","sig":null,"attributes":[{"value":"/ Only look for matches with a distance of 1, i.e do run-length encoding only.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25433,"byte_end":25513,"line_start":202,"line_end":202,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25658,"byte_end":25663,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::deflate::core::CompressionStrategy::Fixed","value":"CompressionStrategy::Fixed","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Only use static/fixed blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[{"value":"/ Only use static/fixed blocks. (Blocks using the default huffman codes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25531,"byte_end":25604,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ specified in the deflate specification.)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25609,"byte_end":25653,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25179,"byte_end":25198,"line_start":195,"line_end":195,"column_start":10,"column_end":29},"name":"CompressionStrategy","qualname":"::deflate::core::CompressionStrategy","value":"pub enum CompressionStrategy {\n    Default = ,\n    Filtered = ,\n    HuffmanOnly = ,\n    RLE = ,\n    Fixed = ,\n}","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727}],"decl_id":null,"docs":" Strategy setting for compression.","sig":null,"attributes":[{"value":"/ Strategy setting for compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":24989,"byte_end":25026,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25027,"byte_end":25030,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ The non-default settings offer some special-case compression variants.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25031,"byte_end":25105,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25106,"byte_end":25118,"line_start":193,"line_end":193,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25906,"byte_end":25910,"line_start":215,"line_end":215,"column_start":5,"column_end":9},"name":"None","qualname":"::deflate::core::TDEFLFlush::None","value":"TDEFLFlush::None","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Normal operation.","sig":null,"attributes":[{"value":"/ Normal operation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25784,"byte_end":25805,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25810,"byte_end":25813,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Compress as much as there is space for, and then return waiting for more input.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25818,"byte_end":25901,"line_start":214,"line_end":214,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25994,"byte_end":25998,"line_start":218,"line_end":218,"column_start":5,"column_end":9},"name":"Sync","qualname":"::deflate::core::TDEFLFlush::Sync","value":"TDEFLFlush::Sync","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Try to flush all the current data and output an empty raw block.\n","sig":null,"attributes":[{"value":"/ Try to flush all the current data and output an empty raw block.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25921,"byte_end":25989,"line_start":217,"line_end":217,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26141,"byte_end":26145,"line_start":222,"line_end":222,"column_start":5,"column_end":9},"name":"Full","qualname":"::deflate::core::TDEFLFlush::Full","value":"TDEFLFlush::Full","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Same as [`Sync`][Self::Sync], but reset the dictionary so that the following data does not\n depend on previous data.\n","sig":null,"attributes":[{"value":"/ Same as [`Sync`][Self::Sync], but reset the dictionary so that the following data does not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26009,"byte_end":26103,"line_start":220,"line_end":220,"column_start":5,"column_end":99}},{"value":"/ depend on previous data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26108,"byte_end":26136,"line_start":221,"line_end":221,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26298,"byte_end":26304,"line_start":227,"line_end":227,"column_start":5,"column_end":11},"name":"Finish","qualname":"::deflate::core::TDEFLFlush::Finish","value":"TDEFLFlush::Finish","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Try to flush everything and end the deflate stream.","sig":null,"attributes":[{"value":"/ Try to flush everything and end the deflate stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26156,"byte_end":26211,"line_start":224,"line_end":224,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26216,"byte_end":26219,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ On success this will yield a [`TDEFLStatus::Done`] return status.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26224,"byte_end":26293,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25767,"byte_end":25777,"line_start":211,"line_end":211,"column_start":10,"column_end":20},"name":"TDEFLFlush","qualname":"::deflate::core::TDEFLFlush","value":"pub enum TDEFLFlush { None = , Sync = , Full = , Finish = , }","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754}],"decl_id":null,"docs":" A list of deflate flush types.\n","sig":null,"attributes":[{"value":"/ A list of deflate flush types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":25672,"byte_end":25706,"line_start":209,"line_end":209,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26712,"byte_end":26715,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"new","qualname":"<TDEFLFlush>::new","value":"pub fn new(i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27300,"byte_end":27308,"line_start":262,"line_end":262,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::deflate::core::TDEFLStatus::BadParam","value":"TDEFLStatus::BadParam","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Usage error.","sig":null,"attributes":[{"value":"/ Usage error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27117,"byte_end":27133,"line_start":258,"line_end":258,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27138,"byte_end":27141,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This indicates that either the [`CompressorOxide`] experienced a previous error, or the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27146,"byte_end":27237,"line_start":260,"line_end":260,"column_start":5,"column_end":96}},{"value":"/ stream has already been [`TDEFLFlush::Finish`]'d.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27242,"byte_end":27295,"line_start":261,"line_end":261,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27426,"byte_end":27438,"line_start":267,"line_end":267,"column_start":5,"column_end":17},"name":"PutBufFailed","qualname":"::deflate::core::TDEFLStatus::PutBufFailed","value":"TDEFLStatus::PutBufFailed","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Error putting data into output buffer.","sig":null,"attributes":[{"value":"/ Error putting data into output buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27320,"byte_end":27362,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27367,"byte_end":27370,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This usually indicates a too-small buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27375,"byte_end":27421,"line_start":266,"line_end":266,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27490,"byte_end":27494,"line_start":270,"line_end":270,"column_start":5,"column_end":9},"name":"Okay","qualname":"::deflate::core::TDEFLStatus::Okay","value":"TDEFLStatus::Okay","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Compression succeeded normally.\n","sig":null,"attributes":[{"value":"/ Compression succeeded normally.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27450,"byte_end":27485,"line_start":269,"line_end":269,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27656,"byte_end":27660,"line_start":275,"line_end":275,"column_start":5,"column_end":9},"name":"Done","qualname":"::deflate::core::TDEFLStatus::Done","value":"TDEFLStatus::Done","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Compression succeeded and the deflate stream was ended.","sig":null,"attributes":[{"value":"/ Compression succeeded and the deflate stream was ended.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27505,"byte_end":27564,"line_start":272,"line_end":272,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27569,"byte_end":27572,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This is the result of calling compression with [`TDEFLFlush::Finish`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27577,"byte_end":27651,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27099,"byte_end":27110,"line_start":257,"line_end":257,"column_start":10,"column_end":21},"name":"TDEFLStatus","qualname":"::deflate::core::TDEFLStatus","value":"pub enum TDEFLStatus { BadParam = , PutBufFailed = , Okay = , Done = , }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781}],"decl_id":null,"docs":" Return status of compression.\n","sig":null,"attributes":[{"value":"/ Return status of compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26992,"byte_end":27025,"line_start":254,"line_end":254,"column_start":1,"column_end":34}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":27026,"byte_end":27038,"line_start":255,"line_end":255,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32054,"byte_end":32069,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"CompressorOxide","qualname":"::deflate::core::CompressorOxide","value":"CompressorOxide {  }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"decl_id":null,"docs":" Main compression struct.\n","sig":null,"attributes":[{"value":"/ Main compression struct.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32014,"byte_end":32042,"line_start":413,"line_end":413,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32367,"byte_end":32370,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<CompressorOxide>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CompressorOxide` with the given flags.","sig":null,"attributes":[{"value":"/ Create a new `CompressorOxide` with the given flags.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32194,"byte_end":32250,"line_start":422,"line_end":422,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32255,"byte_end":32258,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32263,"byte_end":32274,"line_start":424,"line_end":424,"column_start":5,"column_end":16}},{"value":"/ This function may be changed to take different parameters in the future.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32279,"byte_end":32355,"line_start":425,"line_end":425,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32782,"byte_end":32789,"line_start":438,"line_end":438,"column_start":18,"column_end":25},"name":"adler32","qualname":"<CompressorOxide>::adler32","value":"pub const fn adler32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the adler32 checksum of the currently encoded data.\n","sig":null,"attributes":[{"value":"/ Get the adler32 checksum of the currently encoded data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32705,"byte_end":32764,"line_start":437,"line_end":437,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32970,"byte_end":32988,"line_start":444,"line_end":444,"column_start":18,"column_end":36},"name":"prev_return_status","qualname":"<CompressorOxide>::prev_return_status","value":"pub const fn prev_return_status(&Self) -> TDEFLStatus","parent":null,"children":[],"decl_id":null,"docs":" Get the return status of the previous [`compress`](fn.compress.html)\n call with this compressor.\n","sig":null,"attributes":[{"value":"/ Get the return status of the previous [`compress`](fn.compress.html)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32845,"byte_end":32917,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/ call with this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32922,"byte_end":32952,"line_start":443,"line_end":443,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33233,"byte_end":33238,"line_start":452,"line_end":452,"column_start":18,"column_end":23},"name":"flags","qualname":"<CompressorOxide>::flags","value":"pub const fn flags(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the raw compressor flags.","sig":null,"attributes":[{"value":"/ Get the raw compressor flags.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33063,"byte_end":33096,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33101,"byte_end":33104,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33109,"byte_end":33120,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/ This function may be deprecated or changed in the future to use more rust-style flags.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33125,"byte_end":33215,"line_start":451,"line_end":451,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33391,"byte_end":33402,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"data_format","qualname":"<CompressorOxide>::data_format","value":"pub fn data_format(&Self) -> DataFormat","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the compressor is wrapping the data in a zlib format or not.\n","sig":null,"attributes":[{"value":"/ Returns whether the compressor is wrapping the data in a zlib format or not.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33299,"byte_end":33379,"line_start":456,"line_end":456,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33712,"byte_end":33717,"line_start":468,"line_end":468,"column_start":12,"column_end":17},"name":"reset","qualname":"<CompressorOxide>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the state of the compressor, keeping the same parameters.","sig":null,"attributes":[{"value":"/ Reset the state of the compressor, keeping the same parameters.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33585,"byte_end":33652,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33657,"byte_end":33660,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This avoids re-allocating data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":33665,"byte_end":33700,"line_start":467,"line_end":467,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34253,"byte_end":34274,"line_start":482,"line_end":482,"column_start":12,"column_end":33},"name":"set_compression_level","qualname":"<CompressorOxide>::set_compression_level","value":"pub fn set_compression_level(&mut Self, CompressionLevel)","parent":null,"children":[],"decl_id":null,"docs":" Set the compression level of the compressor.","sig":null,"attributes":[{"value":"/ Set the compression level of the compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34004,"byte_end":34052,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34057,"byte_end":34060,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Using this to change level after compresson has started is supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34065,"byte_end":34138,"line_start":479,"line_end":479,"column_start":5,"column_end":78}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34143,"byte_end":34154,"line_start":480,"line_end":480,"column_start":5,"column_end":16}},{"value":"/ The compression strategy will be reset to the default one when this is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34159,"byte_end":34241,"line_start":481,"line_end":481,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34693,"byte_end":34718,"line_start":492,"line_end":492,"column_start":12,"column_end":37},"name":"set_compression_level_raw","qualname":"<CompressorOxide>::set_compression_level_raw","value":"pub fn set_compression_level_raw(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the compression level of the compressor using an integer value.","sig":null,"attributes":[{"value":"/ Set the compression level of the compressor using an integer value.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34421,"byte_end":34492,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34497,"byte_end":34500,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Using this to change level after compresson has started is supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34505,"byte_end":34578,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34583,"byte_end":34594,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/ The compression strategy will be reset to the default one when this is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34599,"byte_end":34681,"line_start":491,"line_end":491,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35310,"byte_end":35330,"line_start":506,"line_end":506,"column_start":12,"column_end":32},"name":"set_format_and_level","qualname":"<CompressorOxide>::set_format_and_level","value":"pub fn set_format_and_level(&mut Self, DataFormat, u8)","parent":null,"children":[],"decl_id":null,"docs":" Update the compression settings of the compressor.","sig":null,"attributes":[{"value":"/ Update the compression settings of the compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34845,"byte_end":34899,"line_start":497,"line_end":497,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34904,"byte_end":34907,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Changing the `DataFormat` after compression has started will result in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34912,"byte_end":34986,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ a corrupted stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":34991,"byte_end":35014,"line_start":500,"line_end":500,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35019,"byte_end":35022,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35027,"byte_end":35038,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ This function mainly intented for setting the initial settings after e.g creating with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35043,"byte_end":35133,"line_start":503,"line_end":503,"column_start":5,"column_end":95}},{"value":"/ `default` or after calling `CompressorOxide::reset()`, and behaviour may be changed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35138,"byte_end":35225,"line_start":504,"line_end":504,"column_start":5,"column_end":92}},{"value":"/ to disallow calling it after starting compression in the future.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35230,"byte_end":35298,"line_start":505,"line_end":505,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":36234,"byte_end":36246,"line_start":534,"line_end":534,"column_start":12,"column_end":24},"name":"CallbackFunc","qualname":"::deflate::core::CallbackFunc","value":"CallbackFunc { put_buf_func }","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" Callback function and user used in `compress_to_output`.\n","sig":null,"attributes":[{"value":"/ Callback function and user used in `compress_to_output`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":36162,"byte_end":36222,"line_start":533,"line_end":533,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":36261,"byte_end":36273,"line_start":535,"line_end":535,"column_start":9,"column_end":21},"name":"put_buf_func","qualname":"::deflate::core::CallbackFunc::put_buf_func","value":"&'a mut (dyn for<'r> core::ops::FnMut(&'r [u8]) -> bool + 'a)","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95021,"byte_end":95029,"line_start":2200,"line_end":2200,"column_start":8,"column_end":16},"name":"compress","qualname":"::deflate::core::compress","value":"pub fn compress(&mut CompressorOxide, &[u8], &mut [u8], TDEFLFlush)\n-> (TDEFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Tries to compress as much as possible from `in_buf` and\n puts compressed output into `out_buf`.","sig":null,"attributes":[{"value":"/ Main compression function. Tries to compress as much as possible from `in_buf` and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94508,"byte_end":94594,"line_start":2190,"line_end":2190,"column_start":1,"column_end":87}},{"value":"/ puts compressed output into `out_buf`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94595,"byte_end":94637,"line_start":2191,"line_end":2191,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94638,"byte_end":94641,"line_start":2192,"line_end":2192,"column_start":1,"column_end":4}},{"value":"/ The value of `flush` determines if the compressor should attempt to flush all output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94642,"byte_end":94730,"line_start":2193,"line_end":2193,"column_start":1,"column_end":89}},{"value":"/ and alternatively try to finish the stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94731,"byte_end":94778,"line_start":2194,"line_end":2194,"column_start":1,"column_end":48}},{"value":"/ Should be [`TDEFLFlush::Finish`] on the final call.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94779,"byte_end":94834,"line_start":2195,"line_end":2195,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94835,"byte_end":94838,"line_start":2196,"line_end":2196,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94839,"byte_end":94852,"line_start":2197,"line_end":2197,"column_start":1,"column_end":14}},{"value":"/ Returns a tuple containing the current status of the compressor, the current position","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94853,"byte_end":94942,"line_start":2198,"line_end":2198,"column_start":1,"column_end":90}},{"value":"/ in the input buffer and the current position in the output buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":94943,"byte_end":95013,"line_start":2199,"line_end":2199,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95581,"byte_end":95599,"line_start":2221,"line_end":2221,"column_start":8,"column_end":26},"name":"compress_to_output","qualname":"::deflate::core::compress_to_output","value":"pub fn compress_to_output<impl FnMut(&[u8]) -> bool: FnMut(&[u8]) ->\n                          bool>(&mut CompressorOxide, &[u8], TDEFLFlush,\n                                impl FnMut(&[u8]) -> bool)\n-> (TDEFLStatus, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Callbacks output.","sig":null,"attributes":[{"value":"/ Main compression function. Callbacks output.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95279,"byte_end":95327,"line_start":2213,"line_end":2213,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95328,"byte_end":95331,"line_start":2214,"line_end":2214,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95332,"byte_end":95345,"line_start":2215,"line_end":2215,"column_start":1,"column_end":14}},{"value":"/ Returns a tuple containing the current status of the compressor, the current position","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95346,"byte_end":95435,"line_start":2216,"line_end":2216,"column_start":1,"column_end":90}},{"value":"/ in the input buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95436,"byte_end":95460,"line_start":2217,"line_end":2217,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95461,"byte_end":95464,"line_start":2218,"line_end":2218,"column_start":1,"column_end":4}},{"value":"/ The caller is responsible for ensuring the `CallbackFunc` struct will not cause undefined","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95465,"byte_end":95558,"line_start":2219,"line_end":2219,"column_start":1,"column_end":94}},{"value":"/ behaviour.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":95559,"byte_end":95573,"line_start":2220,"line_end":2220,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99568,"byte_end":99601,"line_start":2340,"line_end":2340,"column_start":8,"column_end":41},"name":"create_comp_flags_from_zip_params","qualname":"::deflate::core::create_comp_flags_from_zip_params","value":"pub fn create_comp_flags_from_zip_params(i32, i32, i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Create a set of compression flags using parameters used by zlib and other compressors.\n Mainly intented for use with transition from c libraries as it deals with raw integers.","sig":null,"attributes":[{"value":"/ Create a set of compression flags using parameters used by zlib and other compressors.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":98919,"byte_end":99009,"line_start":2328,"line_end":2328,"column_start":1,"column_end":91}},{"value":"/ Mainly intented for use with transition from c libraries as it deals with raw integers.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99010,"byte_end":99101,"line_start":2329,"line_end":2329,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99102,"byte_end":99105,"line_start":2330,"line_end":2330,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99106,"byte_end":99122,"line_start":2331,"line_end":2331,"column_start":1,"column_end":17}},{"value":"/ `level` determines compression level. Clamped to maximum of 10. Negative values result in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99123,"byte_end":99216,"line_start":2332,"line_end":2332,"column_start":1,"column_end":94}},{"value":"/ `Compressionlevel::DefaultLevel`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99217,"byte_end":99254,"line_start":2333,"line_end":2333,"column_start":1,"column_end":38}},{"value":"/ `window_bits`: Above 0, wraps the stream in a zlib wrapper, 0 or negative for a raw deflate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99255,"byte_end":99350,"line_start":2334,"line_end":2334,"column_start":1,"column_end":96}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99351,"byte_end":99362,"line_start":2335,"line_end":2335,"column_start":1,"column_end":12}},{"value":"/ `strategy`: Sets the strategy if this conforms to any of the values in `CompressionStrategy`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99363,"byte_end":99460,"line_start":2336,"line_end":2336,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99461,"byte_end":99464,"line_start":2337,"line_end":2337,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99465,"byte_end":99476,"line_start":2338,"line_end":2338,"column_start":1,"column_end":12}},{"value":"/ This function may be removed or moved to the `miniz_oxide_c_api` in the future.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":99477,"byte_end":99560,"line_start":2339,"line_end":2339,"column_start":1,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::deflate::stream","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395}],"decl_id":null,"docs":" Extra streaming compression functionality.","sig":null,"attributes":[{"value":"/ Extra streaming compression functionality.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103073,"byte_end":103119,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103120,"byte_end":103123,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ As of now this is mainly intended for use to build a higher-level wrapper.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103124,"byte_end":103202,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103203,"byte_end":103206,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ There is no DeflateState as the needed state is contained in the compressor struct itself.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103207,"byte_end":103301,"line_start":5,"line_end":5,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":104024,"byte_end":104031,"line_start":23,"line_end":23,"column_start":8,"column_end":15},"name":"deflate","qualname":"::deflate::stream::deflate","value":"pub fn deflate(&mut CompressorOxide, &[u8], &mut [u8], MZFlush)\n-> StreamResult","parent":null,"children":[],"decl_id":null,"docs":" Try to compress from input to output with the given [`CompressorOxide`].","sig":null,"attributes":[{"value":"/ Try to compress from input to output with the given [`CompressorOxide`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103474,"byte_end":103550,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103551,"byte_end":103554,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103555,"byte_end":103567,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103568,"byte_end":103571,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Returns [`MZError::Buf`] If the size of the `output` slice is empty or no progress was made due","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103572,"byte_end":103671,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ to lack of expected input data, or if called without [`MZFlush::Finish`] after the compression","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103672,"byte_end":103770,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ was already finished.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103771,"byte_end":103796,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103797,"byte_end":103800,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Returns [`MZError::Param`] if the compressor parameters are set wrong.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103801,"byte_end":103875,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103876,"byte_end":103879,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Returns [`MZError::Stream`] when lower-level decompressor returns a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103880,"byte_end":103951,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ [`TDEFLStatus::PutBufFailed`]; may not actually be possible.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\stream.rs","byte_start":103952,"byte_end":104016,"line_start":22,"line_end":22,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6874,"byte_end":6887,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"NoCompression","qualname":"::deflate::CompressionLevel::NoCompression","value":"CompressionLevel::NoCompression","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Don't do any compression, only output uncompressed blocks.\n","sig":null,"attributes":[{"value":"/ Don't do any compression, only output uncompressed blocks.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6807,"byte_end":6869,"line_start":17,"line_end":17,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6987,"byte_end":6996,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"BestSpeed","qualname":"::deflate::CompressionLevel::BestSpeed","value":"CompressionLevel::BestSpeed","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Fast compression. Uses a special compression routine that is optimized for speed.\n","sig":null,"attributes":[{"value":"/ Fast compression. Uses a special compression routine that is optimized for speed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6897,"byte_end":6982,"line_start":19,"line_end":19,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7085,"byte_end":7100,"line_start":22,"line_end":22,"column_start":5,"column_end":20},"name":"BestCompression","qualname":"::deflate::CompressionLevel::BestCompression","value":"CompressionLevel::BestCompression","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Slow/high compression. Do a lot of checks to try to find good matches.\n","sig":null,"attributes":[{"value":"/ Slow/high compression. Do a lot of checks to try to find good matches.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7006,"byte_end":7080,"line_start":21,"line_end":21,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7154,"byte_end":7169,"line_start":24,"line_end":24,"column_start":5,"column_end":20},"name":"UberCompression","qualname":"::deflate::CompressionLevel::UberCompression","value":"CompressionLevel::UberCompression","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Even more checks, can be very slow.\n","sig":null,"attributes":[{"value":"/ Even more checks, can be very slow.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7110,"byte_end":7149,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7238,"byte_end":7250,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"DefaultLevel","qualname":"::deflate::CompressionLevel::DefaultLevel","value":"CompressionLevel::DefaultLevel","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Default compromise between speed and compression.\n","sig":null,"attributes":[{"value":"/ Default compromise between speed and compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7180,"byte_end":7233,"line_start":25,"line_end":25,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7303,"byte_end":7321,"line_start":28,"line_end":28,"column_start":5,"column_end":23},"name":"DefaultCompression","qualname":"::deflate::CompressionLevel::DefaultCompression","value":"CompressionLevel::DefaultCompression","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Use the default compression level.\n","sig":null,"attributes":[{"value":"/ Use the default compression level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":7260,"byte_end":7298,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6784,"byte_end":6800,"line_start":16,"line_end":16,"column_start":10,"column_end":26},"name":"CompressionLevel","qualname":"::deflate::CompressionLevel","value":"pub enum CompressionLevel {\n    NoCompression = ,\n    BestSpeed = ,\n    BestCompression = ,\n    UberCompression = ,\n    DefaultLevel = ,\n    DefaultCompression = ,\n}","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814}],"decl_id":null,"docs":" How much processing the compressor should do to compress the data.\n `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number\n of checks for matches in the hash chains and whether to use lazy or greedy parsing.\n","sig":null,"attributes":[{"value":"/ How much processing the compressor should do to compress the data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6455,"byte_end":6525,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6526,"byte_end":6622,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ of checks for matches in the hash chains and whether to use lazy or greedy parsing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6623,"byte_end":6710,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6711,"byte_end":6723,"line_start":14,"line_end":14,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":9416,"byte_end":9431,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"compress_to_vec","qualname":"::deflate::compress_to_vec","value":"pub fn compress_to_vec(&[u8], u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10).\n","sig":null,"attributes":[{"value":"/ Compress the input data to a vector, using the specified compression level (0-10).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":9322,"byte_end":9408,"line_start":109,"line_end":109,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":9642,"byte_end":9662,"line_start":116,"line_end":116,"column_start":8,"column_end":28},"name":"compress_to_vec_zlib","qualname":"::deflate::compress_to_vec_zlib","value":"pub fn compress_to_vec_zlib(&[u8], u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10), and with a\n zlib wrapper.\n","sig":null,"attributes":[{"value":"/ Compress the input data to a vector, using the specified compression level (0-10), and with a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":9519,"byte_end":9616,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"/ zlib wrapper.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":9617,"byte_end":9634,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inflate","qualname":"::inflate","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":548},{"krate":0,"index":563},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":949},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" This module contains functionality for decompression.\n","sig":null,"attributes":[{"value":"/ This module contains functionality for decompression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107152,"byte_end":107209,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::inflate::core","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":446},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":495},{"krate":0,"index":500},{"krate":0,"index":831},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":922},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"decl_id":null,"docs":" Streaming decompression functionality.\n","sig":null,"attributes":[{"value":"/ Streaming decompression functionality.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":114625,"byte_end":114667,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":114850,"byte_end":114868,"line_start":11,"line_end":11,"column_start":11,"column_end":29},"name":"TINFL_LZ_DICT_SIZE","qualname":"::inflate::core::TINFL_LZ_DICT_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118599,"byte_end":118612,"line_start":108,"line_end":108,"column_start":9,"column_end":22},"name":"inflate_flags","qualname":"::inflate::core::inflate_flags","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"decl_id":null,"docs":" Flags to [`decompress()`] to control how inflation works.","sig":null,"attributes":[{"value":"/ Flags to [`decompress()`] to control how inflation works.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118479,"byte_end":118540,"line_start":105,"line_end":105,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118541,"byte_end":118544,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ These define bits for a bitmask argument.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118545,"byte_end":118590,"line_start":107,"line_end":107,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118840,"byte_end":118868,"line_start":113,"line_end":113,"column_start":15,"column_end":43},"name":"TINFL_FLAG_PARSE_ZLIB_HEADER","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_PARSE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we try to parse a zlib header?","sig":null,"attributes":[{"value":"/ Should we try to parse a zlib header?","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118619,"byte_end":118660,"line_start":109,"line_end":109,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118665,"byte_end":118668,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If unset, [`decompress()`] will expect an RFC1951 deflate stream.  If set, it will expect an","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118673,"byte_end":118769,"line_start":111,"line_end":111,"column_start":5,"column_end":101}},{"value":"/ RFC1950 zlib wrapper around the deflate stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118774,"byte_end":118825,"line_start":112,"line_end":112,"column_start":5,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119692,"byte_end":119717,"line_start":125,"line_end":125,"column_start":15,"column_end":40},"name":"TINFL_FLAG_HAS_MORE_INPUT","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_HAS_MORE_INPUT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" There will be more input that hasn't been given to the decompressor yet.","sig":null,"attributes":[{"value":"/ There will be more input that hasn't been given to the decompressor yet.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118884,"byte_end":118960,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118965,"byte_end":118968,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This is useful when you want to decompress what you have so far,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":118973,"byte_end":119041,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ even if you know there is probably more input that hasn't gotten here yet (_e.g._, over a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119046,"byte_end":119139,"line_start":118,"line_end":118,"column_start":5,"column_end":98}},{"value":"/ network connection).  When [`decompress()`][super::decompress] reaches the end of the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119144,"byte_end":119239,"line_start":119,"line_end":119,"column_start":5,"column_end":100}},{"value":"/ without finding the end of the compressed stream, it will return","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119244,"byte_end":119312,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ [`TINFLStatus::NeedsMoreInput`][super::TINFLStatus::NeedsMoreInput] if this is set,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119317,"byte_end":119404,"line_start":121,"line_end":121,"column_start":5,"column_end":92}},{"value":"/ indicating that you should get more data before calling again.  If not set, it will return","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119409,"byte_end":119503,"line_start":122,"line_end":122,"column_start":5,"column_end":99}},{"value":"/ [`TINFLStatus::FailedCannotMakeProgress`][super::TINFLStatus::FailedCannotMakeProgress]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119508,"byte_end":119599,"line_start":123,"line_end":123,"column_start":5,"column_end":96}},{"value":"/ suggesting the stream is corrupt, since you claimed it was all there.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119604,"byte_end":119677,"line_start":124,"line_end":124,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119793,"byte_end":119833,"line_start":128,"line_end":128,"column_start":15,"column_end":55},"name":"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The output buffer should not wrap around.\n","sig":null,"attributes":[{"value":"/ The output buffer should not wrap around.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119733,"byte_end":119778,"line_start":127,"line_end":127,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120165,"byte_end":120191,"line_start":136,"line_end":136,"column_start":15,"column_end":41},"name":"TINFL_FLAG_COMPUTE_ADLER32","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Calculate the adler32 checksum of the output data even if we're not inflating a zlib stream.","sig":null,"attributes":[{"value":"/ Calculate the adler32 checksum of the output data even if we're not inflating a zlib stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119849,"byte_end":119945,"line_start":130,"line_end":130,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119950,"byte_end":119953,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If [`TINFL_FLAG_IGNORE_ADLER32`] is specified, it will override this.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":119958,"byte_end":120031,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120036,"byte_end":120039,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ NOTE: Enabling/disabling this between calls to decompress will result in an incorect","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120044,"byte_end":120132,"line_start":134,"line_end":134,"column_start":5,"column_end":93}},{"value":"/ checksum.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120137,"byte_end":120150,"line_start":135,"line_end":135,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120729,"byte_end":120754,"line_start":148,"line_end":148,"column_start":15,"column_end":40},"name":"TINFL_FLAG_IGNORE_ADLER32","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_IGNORE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Ignore adler32 checksum even if we are inflating a zlib stream.","sig":null,"attributes":[{"value":"/ Ignore adler32 checksum even if we are inflating a zlib stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120207,"byte_end":120274,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120279,"byte_end":120282,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Overrides [`TINFL_FLAG_COMPUTE_ADLER32`] if both are enabled.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120287,"byte_end":120352,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120357,"byte_end":120360,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ NOTE: This flag does not exist in miniz as it does not support this and is a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120365,"byte_end":120445,"line_start":142,"line_end":142,"column_start":5,"column_end":85}},{"value":"/ custom addition for miniz_oxide.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120450,"byte_end":120486,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120491,"byte_end":120494,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ NOTE: Should not be changed from enabled to disabled after decompression has started,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120499,"byte_end":120588,"line_start":145,"line_end":145,"column_start":5,"column_end":94}},{"value":"/ this will result in checksum failure (outside the unlikely event where the checksum happens","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120593,"byte_end":120688,"line_start":146,"line_end":146,"column_start":5,"column_end":100}},{"value":"/ to match anyway).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120693,"byte_end":120714,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":121015,"byte_end":121032,"line_start":163,"line_end":163,"column_start":12,"column_end":29},"name":"DecompressorOxide","qualname":"::inflate::core::DecompressorOxide","value":"DecompressorOxide {  }","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493}],"decl_id":null,"docs":" Main decompression struct.","sig":null,"attributes":[{"value":"/ Main decompression struct.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":120969,"byte_end":120999,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":121000,"byte_end":121003,"line_start":162,"line_end":162,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122213,"byte_end":122216,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<DecompressorOxide>::new","value":"pub fn new() -> DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Create a new tinfl_decompressor with all fields set to 0.\n","sig":null,"attributes":[{"value":"/ Create a new tinfl_decompressor with all fields set to 0.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122140,"byte_end":122201,"line_start":199,"line_end":199,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122353,"byte_end":122357,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"init","qualname":"<DecompressorOxide>::init","value":"pub fn init(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the current state to `Start`.\n","sig":null,"attributes":[{"value":"/ Set the current state to `Start`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122290,"byte_end":122327,"line_start":204,"line_end":204,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122332,"byte_end":122341,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122662,"byte_end":122669,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"adler32","qualname":"<DecompressorOxide>::adler32","value":"pub fn adler32(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the adler32 checksum of the currently decompressed data.\n Note: Will return Some(1) if decompressing zlib but ignoring adler32.\n","sig":null,"attributes":[{"value":"/ Returns the adler32 checksum of the currently decompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122490,"byte_end":122558,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ Note: Will return Some(1) if decompressing zlib but ignoring adler32.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122563,"byte_end":122636,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122641,"byte_end":122650,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122975,"byte_end":122989,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"adler32_header","qualname":"<DecompressorOxide>::adler32_header","value":"pub fn adler32_header(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the adler32 that was read from the zlib header if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the adler32 that was read from the zlib header if it exists.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122877,"byte_end":122949,"line_start":222,"line_end":222,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122954,"byte_end":122963,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":153041,"byte_end":153051,"line_start":1067,"line_end":1067,"column_start":8,"column_end":18},"name":"decompress","qualname":"::inflate::core::decompress","value":"pub fn decompress(&mut DecompressorOxide, &[u8], &mut [u8], usize, u32)\n-> (TINFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main decompression function. Keeps decompressing data from `in_buf` until the `in_buf` is\n empty, `out` is full, the end of the deflate stream is hit, or there is an error in the\n deflate stream.","sig":null,"attributes":[{"value":"/ Main decompression function. Keeps decompressing data from `in_buf` until the `in_buf` is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151034,"byte_end":151127,"line_start":1031,"line_end":1031,"column_start":1,"column_end":94}},{"value":"/ empty, `out` is full, the end of the deflate stream is hit, or there is an error in the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151128,"byte_end":151219,"line_start":1032,"line_end":1032,"column_start":1,"column_end":92}},{"value":"/ deflate stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151220,"byte_end":151239,"line_start":1033,"line_end":1033,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151240,"byte_end":151243,"line_start":1034,"line_end":1034,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151244,"byte_end":151259,"line_start":1035,"line_end":1035,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151260,"byte_end":151263,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ `r` is a [`DecompressorOxide`] struct with the state of this stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151264,"byte_end":151336,"line_start":1037,"line_end":1037,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151337,"byte_end":151340,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ `in_buf` is a reference to the compressed data that is to be decompressed. The decompressor will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151341,"byte_end":151441,"line_start":1039,"line_end":1039,"column_start":1,"column_end":101}},{"value":"/ start at the first byte of this buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151442,"byte_end":151485,"line_start":1040,"line_end":1040,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151486,"byte_end":151489,"line_start":1041,"line_end":1041,"column_start":1,"column_end":4}},{"value":"/ `out` is a reference to the buffer that will store the decompressed data, and that","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151490,"byte_end":151576,"line_start":1042,"line_end":1042,"column_start":1,"column_end":87}},{"value":"/ stores previously decompressed data if any.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151577,"byte_end":151624,"line_start":1043,"line_end":1043,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151625,"byte_end":151628,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ * The offset given by `out_pos` indicates where in the output buffer slice writing should start.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151629,"byte_end":151729,"line_start":1045,"line_end":1045,"column_start":1,"column_end":101}},{"value":"/ * If [`TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF`] is not set, the output buffer is used in a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151730,"byte_end":151826,"line_start":1046,"line_end":1046,"column_start":1,"column_end":97}},{"value":"/ wrapping manner, and it's size is required to be a power of 2.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151827,"byte_end":151893,"line_start":1047,"line_end":1047,"column_start":1,"column_end":67}},{"value":"/ * The decompression function normally needs access to 32KiB of the previously decompressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151894,"byte_end":151993,"line_start":1048,"line_end":1048,"column_start":1,"column_end":100}},{"value":"/(or to the beginning of the decompressed data if less than 32KiB has been decompressed.)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":151994,"byte_end":152085,"line_start":1049,"line_end":1049,"column_start":1,"column_end":92}},{"value":"/     - If this data is not available, decompression may fail.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152086,"byte_end":152150,"line_start":1050,"line_end":1050,"column_start":1,"column_end":65}},{"value":"/     - Some deflate compressors allow specifying a window size which limits match distances to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152151,"byte_end":152248,"line_start":1051,"line_end":1051,"column_start":1,"column_end":98}},{"value":"/ less than this, or alternatively an RLE mode where matches will only refer to the previous byte","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152249,"byte_end":152348,"line_start":1052,"line_end":1052,"column_start":1,"column_end":100}},{"value":"/ and thus allows a smaller output buffer. The window size can be specified in the zlib","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152349,"byte_end":152438,"line_start":1053,"line_end":1053,"column_start":1,"column_end":90}},{"value":"/ header structure, however, the header data should not be relied on to be correct.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152439,"byte_end":152524,"line_start":1054,"line_end":1054,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152525,"byte_end":152528,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ `flags` indicates settings and status to the decompression function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152529,"byte_end":152601,"line_start":1056,"line_end":1056,"column_start":1,"column_end":73}},{"value":"/ * The [`TINFL_FLAG_HAS_MORE_INPUT`] has to be specified if more compressed data is to be provided","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152602,"byte_end":152703,"line_start":1057,"line_end":1057,"column_start":1,"column_end":102}},{"value":"/ in a subsequent call to this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152704,"byte_end":152746,"line_start":1058,"line_end":1058,"column_start":1,"column_end":43}},{"value":"/ * See the the [`inflate_flags`] module for details on other flags.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152747,"byte_end":152817,"line_start":1059,"line_end":1059,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152818,"byte_end":152821,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152822,"byte_end":152835,"line_start":1061,"line_end":1061,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152836,"byte_end":152839,"line_start":1062,"line_end":1062,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple containing the status of the compressor, the number of input bytes read, and the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152840,"byte_end":152940,"line_start":1063,"line_end":1063,"column_start":1,"column_end":101}},{"value":"/ number of bytes output to `out`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152941,"byte_end":152977,"line_start":1064,"line_end":1064,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152978,"byte_end":152981,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ This function shouldn't panic pending any bugs.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":152982,"byte_end":153033,"line_start":1066,"line_end":1066,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::inflate::stream","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"decl_id":null,"docs":" Extra streaming decompression functionality.","sig":null,"attributes":[{"value":"/ Extra streaming decompression functionality.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":190718,"byte_end":190766,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":190767,"byte_end":190770,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ As of now this is mainly intended for use to build a higher-level wrapper.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":190771,"byte_end":190849,"line_start":3,"line_end":3,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191199,"byte_end":191210,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ResetPolicy","qualname":"::inflate::stream::ResetPolicy","value":"ResetPolicy","parent":null,"children":[{"krate":0,"index":610}],"decl_id":null,"docs":" Tag that determines reset policy of [InflateState](struct.InflateState.html)\n","sig":null,"attributes":[{"value":"/ Tag that determines reset policy of [InflateState](struct.InflateState.html)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191108,"byte_end":191188,"line_start":11,"line_end":11,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191243,"byte_end":191248,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"reset","qualname":"::inflate::stream::ResetPolicy::reset","value":"pub fn reset(&Self, &mut InflateState)","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Performs reset\n","sig":null,"attributes":[{"value":"/ Performs reset","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191217,"byte_end":191235,"line_start":13,"line_end":13,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191470,"byte_end":191478,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"MinReset","qualname":"::inflate::stream::MinReset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Resets state, without performing expensive ops (e.g. zeroing buffer)","sig":null,"attributes":[{"value":"/ Resets state, without performing expensive ops (e.g. zeroing buffer)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191286,"byte_end":191358,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191359,"byte_end":191362,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Note that not zeroing buffer can lead to security issues when dealing with untrusted input.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191363,"byte_end":191458,"line_start":19,"line_end":19,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191875,"byte_end":191884,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"ZeroReset","qualname":"::inflate::stream::ZeroReset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Resets state and zero memory, continuing to use the same data format.\n","sig":null,"attributes":[{"value":"/ Resets state and zero memory, continuing to use the same data format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191790,"byte_end":191863,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192179,"byte_end":192188,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"FullReset","qualname":"::inflate::stream::FullReset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Full reset of the state, including zeroing memory.","sig":null,"attributes":[{"value":"/ Full reset of the state, including zeroing memory.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192068,"byte_end":192122,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192123,"byte_end":192126,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Requires to provide new data format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192127,"byte_end":192167,"line_start":46,"line_end":46,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192189,"byte_end":192203,"line_start":47,"line_end":47,"column_start":22,"column_end":36},"name":"0","qualname":"::inflate::stream::FullReset::0","value":"DataFormat","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192482,"byte_end":192494,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"InflateState","qualname":"::inflate::stream::InflateState","value":"InflateState {  }","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" A struct that compbines a decompressor with extra data for streaming decompression.","sig":null,"attributes":[{"value":"/ A struct that compbines a decompressor with extra data for streaming decompression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192379,"byte_end":192466,"line_start":57,"line_end":57,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192467,"byte_end":192470,"line_start":58,"line_end":58,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194003,"byte_end":194006,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateState>::new","value":"pub fn new(DataFormat) -> InflateState","parent":null,"children":[],"decl_id":null,"docs":" Create a new state.","sig":null,"attributes":[{"value":"/ Create a new state.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193685,"byte_end":193708,"line_start":98,"line_end":98,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193713,"byte_end":193716,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Note that this struct is quite large due to internal buffers, and as such storing it on","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193721,"byte_end":193812,"line_start":100,"line_end":100,"column_start":5,"column_end":96}},{"value":"/ the stack is not recommended.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193817,"byte_end":193850,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193855,"byte_end":193858,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193863,"byte_end":193879,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/ `data_format`: Determines whether the compressed data is assumed to wrapped with zlib","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193884,"byte_end":193973,"line_start":104,"line_end":104,"column_start":5,"column_end":94}},{"value":"/ metadata.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193978,"byte_end":193991,"line_start":105,"line_end":105,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194341,"byte_end":194350,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"new_boxed","qualname":"<InflateState>::new_boxed","value":"pub fn new_boxed(DataFormat) -> Box<InflateState>","parent":null,"children":[],"decl_id":null,"docs":" Create a new state on the heap.","sig":null,"attributes":[{"value":"/ Create a new state on the heap.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194153,"byte_end":194188,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194193,"byte_end":194196,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194201,"byte_end":194217,"line_start":114,"line_end":114,"column_start":5,"column_end":21}},{"value":"/ `data_format`: Determines whether the compressed data is assumed to wrapped with zlib","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194222,"byte_end":194311,"line_start":115,"line_end":115,"column_start":5,"column_end":94}},{"value":"/ metadata.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194316,"byte_end":194329,"line_start":116,"line_end":116,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194559,"byte_end":194571,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"decompressor","qualname":"<InflateState>::decompressor","value":"pub fn decompressor(&mut Self) -> &mut DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Access the innner decompressor.\n","sig":null,"attributes":[{"value":"/ Access the innner decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194512,"byte_end":194547,"line_start":123,"line_end":123,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194742,"byte_end":194753,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"name":"last_status","qualname":"<InflateState>::last_status","value":"pub const fn last_status(&Self) -> TINFLStatus","parent":null,"children":[],"decl_id":null,"docs":" Return the status of the last call to `inflate` with this `InflateState`.\n","sig":null,"attributes":[{"value":"/ Return the status of the last call to `inflate` with this `InflateState`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194647,"byte_end":194724,"line_start":128,"line_end":128,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195079,"byte_end":195105,"line_start":138,"line_end":138,"column_start":12,"column_end":38},"name":"new_boxed_with_window_bits","qualname":"<InflateState>::new_boxed_with_window_bits","value":"pub fn new_boxed_with_window_bits(i32) -> Box<InflateState>","parent":null,"children":[],"decl_id":null,"docs":" Create a new state using miniz/zlib style window bits parameter.","sig":null,"attributes":[{"value":"/ Create a new state using miniz/zlib style window bits parameter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194814,"byte_end":194882,"line_start":133,"line_end":133,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194887,"byte_end":194890,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The decompressor does not support different window sizes. As such,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194895,"byte_end":194965,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ any positive (>0) value will set the zlib header flag, while a negative one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":194970,"byte_end":195049,"line_start":136,"line_end":136,"column_start":5,"column_end":84}},{"value":"/ will not.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195054,"byte_end":195067,"line_start":137,"line_end":137,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195409,"byte_end":195414,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"reset","qualname":"<InflateState>::reset","value":"pub fn reset(&mut Self, DataFormat)","parent":null,"children":[],"decl_id":null,"docs":" Reset the decompressor without re-allocating memory, using the given\n data format.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195290,"byte_end":195299,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ Reset the decompressor without re-allocating memory, using the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195304,"byte_end":195376,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/ data format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195381,"byte_end":195397,"line_start":146,"line_end":146,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195588,"byte_end":195596,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"reset_as","qualname":"<InflateState>::reset_as","value":"pub fn reset_as<T: ResetPolicy>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Resets the state according to specified policy.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195511,"byte_end":195520,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ Resets the state according to specified policy.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195525,"byte_end":195576,"line_start":152,"line_end":152,"column_start":5,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196921,"byte_end":196928,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"inflate","qualname":"::inflate::stream::inflate","value":"pub fn inflate(&mut InflateState, &[u8], &mut [u8], MZFlush) -> StreamResult","parent":null,"children":[],"decl_id":null,"docs":" Try to decompress from `input` to `output` with the given [`InflateState`]","sig":null,"attributes":[{"value":"/ Try to decompress from `input` to `output` with the given [`InflateState`]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195673,"byte_end":195751,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195752,"byte_end":195755,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # `flush`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195756,"byte_end":195769,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195770,"byte_end":195773,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Generally, the various [`MZFlush`] flags have meaning only on the compression side.  They can be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195774,"byte_end":195874,"line_start":162,"line_end":162,"column_start":1,"column_end":101}},{"value":"/ supplied here, but the only one that has any semantic meaning is [`MZFlush::Finish`], which is a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195875,"byte_end":195975,"line_start":163,"line_end":163,"column_start":1,"column_end":101}},{"value":"/ signal that the stream is expected to finish, and failing to do so is an error.  It isn't","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":195976,"byte_end":196069,"line_start":164,"line_end":164,"column_start":1,"column_end":94}},{"value":"/ necessary to specify it when the stream ends; you'll still get returned a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196070,"byte_end":196147,"line_start":165,"line_end":165,"column_start":1,"column_end":78}},{"value":"/ [`MZStatus::StreamEnd`] anyway.  Other values either have no effect or cause errors.  It's","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196148,"byte_end":196242,"line_start":166,"line_end":166,"column_start":1,"column_end":95}},{"value":"/ likely that you'll almost always just want to use [`MZFlush::None`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196243,"byte_end":196315,"line_start":167,"line_end":167,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196316,"byte_end":196319,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196320,"byte_end":196332,"line_start":169,"line_end":169,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196333,"byte_end":196336,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns [`MZError::Buf`] if the size of the `output` slice is empty or no progress was made due","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196337,"byte_end":196436,"line_start":171,"line_end":171,"column_start":1,"column_end":100}},{"value":"/ to lack of expected input data, or if called with [`MZFlush::Finish`] and input wasn't all","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196437,"byte_end":196531,"line_start":172,"line_end":172,"column_start":1,"column_end":95}},{"value":"/ consumed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196532,"byte_end":196545,"line_start":173,"line_end":173,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196546,"byte_end":196549,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ Returns [`MZError::Data`] if this or a a previous call failed with an error return from","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196550,"byte_end":196641,"line_start":175,"line_end":175,"column_start":1,"column_end":92}},{"value":"/ [`TINFLStatus`]; probably indicates corrupted data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196642,"byte_end":196697,"line_start":176,"line_end":176,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196698,"byte_end":196701,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Returns [`MZError::Stream`] when called with [`MZFlush::Full`] (meaningless on","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196702,"byte_end":196784,"line_start":178,"line_end":178,"column_start":1,"column_end":83}},{"value":"/ decompression), or when called without [`MZFlush::Finish`] after an earlier call with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196785,"byte_end":196874,"line_start":179,"line_end":179,"column_start":1,"column_end":90}},{"value":"/ [`MZFlush::Finish`] has been made.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":196875,"byte_end":196913,"line_start":180,"line_end":180,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108401,"byte_end":108425,"line_start":34,"line_end":34,"column_start":5,"column_end":29},"name":"FailedCannotMakeProgress","qualname":"::inflate::TINFLStatus::FailedCannotMakeProgress","value":"TINFLStatus::FailedCannotMakeProgress","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" More input data was expected, but the caller indicated that there was no more data, so the\n input stream is likely truncated.","sig":null,"attributes":[{"value":"/ More input data was expected, but the caller indicated that there was no more data, so the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107826,"byte_end":107920,"line_start":26,"line_end":26,"column_start":5,"column_end":99}},{"value":"/ input stream is likely truncated.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107925,"byte_end":107962,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107967,"byte_end":107970,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This can't happen if you have provided the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107975,"byte_end":108021,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/ [`TINFL_FLAG_HAS_MORE_INPUT`][core::inflate_flags::TINFL_FLAG_HAS_MORE_INPUT] flag to the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108026,"byte_end":108119,"line_start":30,"line_end":30,"column_start":5,"column_end":98}},{"value":"/ decompression.  By setting that flag, you indicate more input exists but is not provided,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108124,"byte_end":108217,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ and so reaching the end of the input data without finding the end of the compressed stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108222,"byte_end":108316,"line_start":32,"line_end":32,"column_start":5,"column_end":99}},{"value":"/ would instead return a [`NeedsMoreInput`][Self::NeedsMoreInput] status.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108321,"byte_end":108396,"line_start":33,"line_end":33,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108559,"byte_end":108567,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::inflate::TINFLStatus::BadParam","value":"TINFLStatus::BadParam","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" The output buffer is an invalid size; consider the `flags` parameter.\n","sig":null,"attributes":[{"value":"/ The output buffer is an invalid size; consider the `flags` parameter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108481,"byte_end":108554,"line_start":36,"line_end":36,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108721,"byte_end":108736,"line_start":41,"line_end":41,"column_start":5,"column_end":20},"name":"Adler32Mismatch","qualname":"::inflate::TINFLStatus::Adler32Mismatch","value":"TINFLStatus::Adler32Mismatch","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" The decompression went fine, but the adler32 checksum did not match the one\n provided in the header.\n","sig":null,"attributes":[{"value":"/ The decompression went fine, but the adler32 checksum did not match the one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108605,"byte_end":108684,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ provided in the header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108689,"byte_end":108716,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108831,"byte_end":108837,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Failed","qualname":"::inflate::TINFLStatus::Failed","value":"TINFLStatus::Failed","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" Failed to decompress due to invalid data.\n","sig":null,"attributes":[{"value":"/ Failed to decompress due to invalid data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108781,"byte_end":108826,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109001,"byte_end":109005,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Done","qualname":"::inflate::TINFLStatus::Done","value":"TINFLStatus::Done","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" Finished decompression without issues.","sig":null,"attributes":[{"value":"/ Finished decompression without issues.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108872,"byte_end":108914,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108919,"byte_end":108922,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This indicates the end of the compressed stream has been reached.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":108927,"byte_end":108996,"line_start":48,"line_end":48,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109604,"byte_end":109618,"line_start":59,"line_end":59,"column_start":5,"column_end":19},"name":"NeedsMoreInput","qualname":"::inflate::TINFLStatus::NeedsMoreInput","value":"TINFLStatus::NeedsMoreInput","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" The decompressor needs more input data to continue decompressing.","sig":null,"attributes":[{"value":"/ The decompressor needs more input data to continue decompressing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109038,"byte_end":109107,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109112,"byte_end":109115,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This occurs when there's no more consumable input, but the end of the stream hasn't been","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109120,"byte_end":109212,"line_start":53,"line_end":53,"column_start":5,"column_end":97}},{"value":"/ reached, and you have supplied the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109217,"byte_end":109255,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/ [`TINFL_FLAG_HAS_MORE_INPUT`][core::inflate_flags::TINFL_FLAG_HAS_MORE_INPUT] flag to the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109260,"byte_end":109353,"line_start":55,"line_end":55,"column_start":5,"column_end":98}},{"value":"/ decompressor.  Had you not supplied that flag (which would mean you were asserting that you","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109358,"byte_end":109453,"line_start":56,"line_end":56,"column_start":5,"column_end":100}},{"value":"/ believed all the data was available) you would have gotten a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109458,"byte_end":109522,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/ [`FailedCannotMakeProcess`][Self::FailedCannotMakeProgress] instead.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109527,"byte_end":109599,"line_start":58,"line_end":58,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109737,"byte_end":109750,"line_start":62,"line_end":62,"column_start":5,"column_end":18},"name":"HasMoreOutput","qualname":"::inflate::TINFLStatus::HasMoreOutput","value":"TINFLStatus::HasMoreOutput","parent":{"krate":0,"index":949},"children":[],"decl_id":null,"docs":" There is still pending data that didn't fit in the output buffer.\n","sig":null,"attributes":[{"value":"/ There is still pending data that didn't fit in the output buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109663,"byte_end":109732,"line_start":61,"line_end":61,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107808,"byte_end":107819,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"name":"TINFLStatus","qualname":"::inflate::TINFLStatus","value":"pub enum TINFLStatus {\n    FailedCannotMakeProgress = ,\n    BadParam = ,\n    Adler32Mismatch = ,\n    Failed = ,\n    Done = ,\n    NeedsMoreInput = ,\n    HasMoreOutput = ,\n}","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"/ Return status codes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107711,"byte_end":107735,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"repr(i8)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107736,"byte_end":107747,"line_start":23,"line_end":23,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109822,"byte_end":109830,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<TINFLStatus>::from_i32","value":"pub fn from_i32(i32) -> Option<TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110581,"byte_end":110598,"line_start":85,"line_end":85,"column_start":8,"column_end":25},"name":"decompress_to_vec","qualname":"::inflate::decompress_to_vec","value":"pub fn decompress_to_vec(&[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data in `input` to a vector.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data in `input` to a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110402,"byte_end":110465,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110466,"byte_end":110469,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of the [`Vec`] of decompressed data and the [status result][TINFLStatus].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110470,"byte_end":110563,"line_start":83,"line_end":83,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110564,"byte_end":110573,"line_start":84,"line_end":84,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110909,"byte_end":110931,"line_start":93,"line_end":93,"column_start":8,"column_end":30},"name":"decompress_to_vec_zlib","qualname":"::inflate::decompress_to_vec_zlib","value":"pub fn decompress_to_vec_zlib(&[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110708,"byte_end":110793,"line_start":89,"line_end":89,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110794,"byte_end":110797,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of the [`Vec`] of decompressed data and the [status result][TINFLStatus].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110798,"byte_end":110891,"line_start":91,"line_end":91,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":110892,"byte_end":110901,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111439,"byte_end":111467,"line_start":107,"line_end":107,"column_start":8,"column_end":36},"name":"decompress_to_vec_with_limit","qualname":"::inflate::decompress_to_vec_with_limit","value":"pub fn decompress_to_vec_with_limit(&[u8], usize)\n-> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data in `input` to a vector.\n The vector is grown to at most `max_size` bytes; if the data does not fit in that size,\n [`TINFLStatus::HasMoreOutput`] error is returned.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data in `input` to a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111114,"byte_end":111177,"line_start":101,"line_end":101,"column_start":1,"column_end":64}},{"value":"/ The vector is grown to at most `max_size` bytes; if the data does not fit in that size,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111178,"byte_end":111269,"line_start":102,"line_end":102,"column_start":1,"column_end":92}},{"value":"/ [`TINFLStatus::HasMoreOutput`] error is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111270,"byte_end":111323,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111324,"byte_end":111327,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of the [`Vec`] of decompressed data and the [status result][TINFLStatus].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111328,"byte_end":111421,"line_start":105,"line_end":105,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111422,"byte_end":111431,"line_start":106,"line_end":106,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111931,"byte_end":111964,"line_start":117,"line_end":117,"column_start":8,"column_end":41},"name":"decompress_to_vec_zlib_with_limit","qualname":"::inflate::decompress_to_vec_zlib_with_limit","value":"pub fn decompress_to_vec_zlib_with_limit(&[u8], usize)\n-> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.\n The vector is grown to at most `max_size` bytes; if the data does not fit in that size,\n [`TINFLStatus::HasMoreOutput`] error is returned.","sig":null,"attributes":[{"value":"/ Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111584,"byte_end":111669,"line_start":111,"line_end":111,"column_start":1,"column_end":86}},{"value":"/ The vector is grown to at most `max_size` bytes; if the data does not fit in that size,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111670,"byte_end":111761,"line_start":112,"line_end":112,"column_start":1,"column_end":92}},{"value":"/ [`TINFLStatus::HasMoreOutput`] error is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111762,"byte_end":111815,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111816,"byte_end":111819,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of the [`Vec`] of decompressed data and the [status result][TINFLStatus].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111820,"byte_end":111913,"line_start":115,"line_end":115,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":111914,"byte_end":111923,"line_start":116,"line_end":116,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\shared.rs","byte_start":204880,"byte_end":204895,"line_start":2,"line_end":2,"column_start":11,"column_end":26},"name":"MZ_ADLER32_INIT","qualname":"::shared::MZ_ADLER32_INIT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\shared.rs","byte_start":204932,"byte_end":204954,"line_start":5,"line_end":5,"column_start":11,"column_end":33},"name":"MZ_DEFAULT_WINDOW_BITS","qualname":"::shared::MZ_DEFAULT_WINDOW_BITS","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\shared.rs","byte_start":205138,"byte_end":205152,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"update_adler32","qualname":"::shared::update_adler32","value":"pub fn update_adler32(u32, &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"simd\"))","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\shared.rs","byte_start":205101,"byte_end":205130,"line_start":12,"line_end":12,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1300,"byte_end":1304,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"None","qualname":"::MZFlush::None","value":"MZFlush::None","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Don't force any flushing.\n Used when more input data is expected.\n","sig":null,"attributes":[{"value":"/ Don't force any flushing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1219,"byte_end":1248,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ Used when more input data is expected.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1253,"byte_end":1295,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1381,"byte_end":1388,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"Partial","qualname":"::MZFlush::Partial","value":"MZFlush::Partial","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Zlib partial flush.\n Currently treated as [`Sync`].\n","sig":null,"attributes":[{"value":"/ Zlib partial flush.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1314,"byte_end":1337,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ Currently treated as [`Sync`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1342,"byte_end":1376,"line_start":47,"line_end":47,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1522,"byte_end":1526,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Sync","qualname":"::MZFlush::Sync","value":"MZFlush::Sync","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Finish compressing the currently buffered data, and output an empty raw block.\n Has no use in decompression.\n","sig":null,"attributes":[{"value":"/ Finish compressing the currently buffered data, and output an empty raw block.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1398,"byte_end":1480,"line_start":49,"line_end":49,"column_start":5,"column_end":87}},{"value":"/ Has no use in decompression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1485,"byte_end":1517,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1778,"byte_end":1782,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"Full","qualname":"::MZFlush::Full","value":"MZFlush::Full","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Same as [`Sync`], but resets the compression dictionary so that further compressed\n data does not depend on data compressed before the flush.","sig":null,"attributes":[{"value":"/ Same as [`Sync`], but resets the compression dictionary so that further compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1536,"byte_end":1622,"line_start":52,"line_end":52,"column_start":5,"column_end":91}},{"value":"/ data does not depend on data compressed before the flush.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1627,"byte_end":1688,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1693,"byte_end":1696,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Has no use in decompression, and is an error to supply in that case.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1701,"byte_end":1773,"line_start":55,"line_end":55,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1856,"byte_end":1862,"line_start":58,"line_end":58,"column_start":5,"column_end":11},"name":"Finish","qualname":"::MZFlush::Finish","value":"MZFlush::Finish","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Attempt to flush the remaining data and end the stream.\n","sig":null,"attributes":[{"value":"/ Attempt to flush the remaining data and end the stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1792,"byte_end":1851,"line_start":57,"line_end":57,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1897,"byte_end":1902,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"name":"Block","qualname":"::MZFlush::Block","value":"MZFlush::Block","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Not implemented.\n","sig":null,"attributes":[{"value":"/ Not implemented.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1872,"byte_end":1892,"line_start":59,"line_end":59,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1205,"byte_end":1212,"line_start":42,"line_end":42,"column_start":10,"column_end":17},"name":"MZFlush","qualname":"::MZFlush","value":"pub enum MZFlush {\n    None = ,\n    Partial = ,\n    Sync = ,\n    Full = ,\n    Finish = ,\n    Block = ,\n}","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001}],"decl_id":null,"docs":" A list of flush types.","sig":null,"attributes":[{"value":"/ A list of flush types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1019,"byte_end":1045,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1046,"byte_end":1049,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ See <http://www.bolet.org/~pornin/deflate-flush.html> for more in-depth info.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1050,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1132,"byte_end":1144,"line_start":40,"line_end":40,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2052,"byte_end":2055,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<MZFlush>::new","value":"pub fn new(i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":" Create an MZFlush value from an integer value.","sig":null,"attributes":[{"value":"/ Create an MZFlush value from an integer value.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1930,"byte_end":1980,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1985,"byte_end":1988,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Returns `MZError::Param` on invalid values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1993,"byte_end":2040,"line_start":66,"line_end":66,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2782,"byte_end":2784,"line_start":89,"line_end":89,"column_start":5,"column_end":7},"name":"Ok","qualname":"::MZStatus::Ok","value":"MZStatus::Ok","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Operation succeeded.","sig":null,"attributes":[{"value":"/ Operation succeeded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2628,"byte_end":2652,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2657,"byte_end":2660,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Some data was decompressed or compressed; see the byte counters in the [`StreamResult`] for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2665,"byte_end":2760,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2765,"byte_end":2777,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3048,"byte_end":3057,"line_start":96,"line_end":96,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::MZStatus::StreamEnd","value":"MZStatus::StreamEnd","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Operation succeeded and end of deflate stream was found.","sig":null,"attributes":[{"value":"/ Operation succeeded and end of deflate stream was found.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2795,"byte_end":2855,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2860,"byte_end":2863,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ X-ref [`TINFLStatus::Done`][inflate::TINFLStatus::Done] or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2868,"byte_end":2930,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/ [`TDEFLStatus::Done`][deflate::core::TDEFLStatus::Done] for `inflate` or `deflate`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2935,"byte_end":3021,"line_start":94,"line_end":94,"column_start":5,"column_end":91}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3026,"byte_end":3043,"line_start":95,"line_end":95,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3083,"byte_end":3091,"line_start":99,"line_end":99,"column_start":5,"column_end":13},"name":"NeedDict","qualname":"::MZStatus::NeedDict","value":"MZStatus::NeedDict","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Unused\n","sig":null,"attributes":[{"value":"/ Unused","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3068,"byte_end":3078,"line_start":98,"line_end":98,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2613,"byte_end":2621,"line_start":84,"line_end":84,"column_start":10,"column_end":18},"name":"MZStatus","qualname":"::MZStatus","value":"pub enum MZStatus { Ok = , StreamEnd = , NeedDict = , }","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025}],"decl_id":null,"docs":" A list of miniz successful status codes.","sig":null,"attributes":[{"value":"/ A list of miniz successful status codes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2324,"byte_end":2368,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2369,"byte_end":2372,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ These are emitted as the [`Ok`] side of a [`MZResult`] in the [`StreamResult`] returned from","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2373,"byte_end":2469,"line_start":80,"line_end":80,"column_start":1,"column_end":97}},{"value":"/ [`deflate::stream::deflate()`] or [`inflate::stream::inflate()`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2470,"byte_end":2539,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":2540,"byte_end":2552,"line_start":82,"line_end":82,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3415,"byte_end":3420,"line_start":110,"line_end":110,"column_start":5,"column_end":10},"name":"ErrNo","qualname":"::MZError::ErrNo","value":"MZError::ErrNo","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Unused\n","sig":null,"attributes":[{"value":"/ Unused","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3400,"byte_end":3410,"line_start":109,"line_end":109,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3707,"byte_end":3713,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Stream","qualname":"::MZError::Stream","value":"MZError::Stream","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" General stream error.","sig":null,"attributes":[{"value":"/ General stream error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3432,"byte_end":3457,"line_start":112,"line_end":112,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3462,"byte_end":3465,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ See [`inflate::stream::inflate()`] docs for details of how it can occur there.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3470,"byte_end":3552,"line_start":114,"line_end":114,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3557,"byte_end":3560,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See [`deflate::stream::deflate()`] docs for how it can in principle occur there, though it's","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3565,"byte_end":3661,"line_start":116,"line_end":116,"column_start":5,"column_end":101}},{"value":"/ believed impossible in practice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3666,"byte_end":3702,"line_start":117,"line_end":117,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3867,"byte_end":3871,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Data","qualname":"::MZError::Data","value":"MZError::Data","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Error in inflation; see [`inflate::stream::inflate()`] for details.","sig":null,"attributes":[{"value":"/ Error in inflation; see [`inflate::stream::inflate()`] for details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3725,"byte_end":3796,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3801,"byte_end":3804,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Not returned from [`deflate::stream::deflate()`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3809,"byte_end":3862,"line_start":122,"line_end":122,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3898,"byte_end":3901,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"Mem","qualname":"::MZError::Mem","value":"MZError::Mem","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Unused\n","sig":null,"attributes":[{"value":"/ Unused","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3883,"byte_end":3893,"line_start":125,"line_end":125,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4110,"byte_end":4113,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"Buf","qualname":"::MZError::Buf","value":"MZError::Buf","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Buffer-related error.","sig":null,"attributes":[{"value":"/ Buffer-related error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3913,"byte_end":3938,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3943,"byte_end":3946,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ See the docs of [`deflate::stream::deflate()`] or [`inflate::stream::inflate()`] for details","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3951,"byte_end":4047,"line_start":130,"line_end":130,"column_start":5,"column_end":101}},{"value":"/ of when it would trigger in the one you're using.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4052,"byte_end":4105,"line_start":131,"line_end":131,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4140,"byte_end":4147,"line_start":135,"line_end":135,"column_start":5,"column_end":12},"name":"Version","qualname":"::MZError::Version","value":"MZError::Version","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Unused\n","sig":null,"attributes":[{"value":"/ Unused","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4125,"byte_end":4135,"line_start":134,"line_end":134,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4365,"byte_end":4370,"line_start":141,"line_end":141,"column_start":5,"column_end":10},"name":"Param","qualname":"::MZError::Param","value":"MZError::Param","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Bad parameters.","sig":null,"attributes":[{"value":"/ Bad parameters.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4159,"byte_end":4178,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4183,"byte_end":4186,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This can be returned from [`deflate::stream::deflate()`] in the case of bad parameters.  See","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4191,"byte_end":4287,"line_start":139,"line_end":139,"column_start":5,"column_end":101}},{"value":"/ [`TDEFLStatus::BadParam`][deflate::core::TDEFLStatus::BadParam].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4292,"byte_end":4360,"line_start":140,"line_end":140,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3386,"byte_end":3393,"line_start":108,"line_end":108,"column_start":10,"column_end":17},"name":"MZError","qualname":"::MZError","value":"pub enum MZError {\n    ErrNo = ,\n    Stream = ,\n    Data = ,\n    Mem = ,\n    Buf = ,\n    Version = ,\n    Param = ,\n}","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061}],"decl_id":null,"docs":" A list of miniz failed status codes.","sig":null,"attributes":[{"value":"/ A list of miniz failed status codes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3100,"byte_end":3140,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3141,"byte_end":3144,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ These are emitted as the [`Err`] side of a [`MZResult`] in the [`StreamResult`] returned from","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3145,"byte_end":3242,"line_start":104,"line_end":104,"column_start":1,"column_end":98}},{"value":"/ [`deflate::stream::deflate()`] or [`inflate::stream::inflate()`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3243,"byte_end":3312,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":3313,"byte_end":3325,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4592,"byte_end":4596,"line_start":149,"line_end":149,"column_start":5,"column_end":9},"name":"Zlib","qualname":"::DataFormat::Zlib","value":"DataFormat::Zlib","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Wrapped using the [zlib](http://www.zlib.org/rfc-zlib.html) format.\n","sig":null,"attributes":[{"value":"/ Wrapped using the [zlib](http://www.zlib.org/rfc-zlib.html) format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4516,"byte_end":4587,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4757,"byte_end":4775,"line_start":152,"line_end":152,"column_start":5,"column_end":23},"name":"ZLibIgnoreChecksum","qualname":"::DataFormat::ZLibIgnoreChecksum","value":"DataFormat::ZLibIgnoreChecksum","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Zlib wrapped but ignore and don't compute the adler32 checksum.\n Currently only used for inflate, behaves the same as Zlib for compression.\n","sig":null,"attributes":[{"value":"/ Zlib wrapped but ignore and don't compute the adler32 checksum.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4602,"byte_end":4669,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"/ Currently only used for inflate, behaves the same as Zlib for compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4674,"byte_end":4752,"line_start":151,"line_end":151,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4802,"byte_end":4805,"line_start":154,"line_end":154,"column_start":5,"column_end":8},"name":"Raw","qualname":"::DataFormat::Raw","value":"DataFormat::Raw","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Raw DEFLATE.\n","sig":null,"attributes":[{"value":"/ Raw DEFLATE.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4781,"byte_end":4797,"line_start":153,"line_end":153,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4499,"byte_end":4509,"line_start":147,"line_end":147,"column_start":10,"column_end":20},"name":"DataFormat","qualname":"::DataFormat","value":"pub enum DataFormat { Zlib, ZLibIgnoreChecksum, Raw, }","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083}],"decl_id":null,"docs":" How compressed data is wrapped.\n","sig":null,"attributes":[{"value":"/ How compressed data is wrapped.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4385,"byte_end":4420,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4472,"byte_end":4489,"line_start":146,"line_end":146,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5349,"byte_end":5357,"line_start":175,"line_end":175,"column_start":10,"column_end":18},"name":"MZResult","qualname":"::MZResult","value":"Result<MZStatus, MZError>","parent":null,"children":[],"decl_id":null,"docs":" `Result` alias for all miniz status codes both successful and failed.\n","sig":null,"attributes":[{"value":"/ `Result` alias for all miniz status codes both successful and failed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5266,"byte_end":5339,"line_start":174,"line_end":174,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5543,"byte_end":5555,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"StreamResult","qualname":"::StreamResult","value":"StreamResult { bytes_consumed, bytes_written, status }","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":" A structure containg the result of a call to the inflate or deflate streaming functions.\n","sig":null,"attributes":[{"value":"/ A structure containg the result of a call to the inflate or deflate streaming functions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5388,"byte_end":5480,"line_start":177,"line_end":177,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5625,"byte_end":5639,"line_start":181,"line_end":181,"column_start":9,"column_end":23},"name":"bytes_consumed","qualname":"::StreamResult::bytes_consumed","value":"usize","parent":{"krate":0,"index":1099},"children":[],"decl_id":null,"docs":" The number of bytes consumed from the input slice.\n","sig":null,"attributes":[{"value":"/ The number of bytes consumed from the input slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5562,"byte_end":5616,"line_start":180,"line_end":180,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5713,"byte_end":5726,"line_start":183,"line_end":183,"column_start":9,"column_end":22},"name":"bytes_written","qualname":"::StreamResult::bytes_written","value":"usize","parent":{"krate":0,"index":1099},"children":[],"decl_id":null,"docs":" The number of bytes written to the output slice.\n","sig":null,"attributes":[{"value":"/ The number of bytes written to the output slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5652,"byte_end":5704,"line_start":182,"line_end":182,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5782,"byte_end":5788,"line_start":185,"line_end":185,"column_start":9,"column_end":15},"name":"status","qualname":"::StreamResult::status","value":"core::result::Result<MZStatus, MZError>","parent":{"krate":0,"index":1099},"children":[],"decl_id":null,"docs":" The return status of the call.\n","sig":null,"attributes":[{"value":"/ The return status of the call.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5739,"byte_end":5773,"line_start":184,"line_end":184,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\buffer.rs","byte_start":14446,"byte_end":14457,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\buffer.rs","byte_start":14570,"byte_end":14581,"line_start":38,"line_end":38,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\buffer.rs","byte_start":14848,"byte_end":14856,"line_start":52,"line_end":52,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26336,"byte_end":26346,"line_start":230,"line_end":230,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26688,"byte_end":26698,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32172,"byte_end":32187,"line_start":421,"line_end":421,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35669,"byte_end":35684,"line_start":517,"line_end":517,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":36321,"byte_end":36333,"line_start":538,"line_end":538,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":37006,"byte_end":37017,"line_start":562,"line_end":562,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":37896,"byte_end":37907,"line_start":594,"line_end":594,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":38860,"byte_end":38873,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":40431,"byte_end":40448,"line_start":685,"line_end":685,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":41659,"byte_end":41668,"line_start":734,"line_end":734,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":43488,"byte_end":43491,"line_start":786,"line_end":786,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":45504,"byte_end":45516,"line_start":846,"line_end":846,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":45781,"byte_end":45793,"line_start":856,"line_end":856,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":58037,"byte_end":58046,"line_start":1214,"line_end":1214,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":65253,"byte_end":65264,"line_start":1409,"line_end":1409,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":66977,"byte_end":66984,"line_start":1468,"line_end":1468,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":115446,"byte_end":115458,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122116,"byte_end":122133,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":123218,"byte_end":123235,"line_start":233,"line_end":233,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":124947,"byte_end":124952,"line_start":305,"line_end":305,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\output_buffer.rs","byte_start":189513,"byte_end":189525,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191502,"byte_end":191510,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191908,"byte_end":191917,"line_start":36,"line_end":36,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192228,"byte_end":192237,"line_start":49,"line_end":49,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193275,"byte_end":193287,"line_start":83,"line_end":83,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193666,"byte_end":193678,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109797,"byte_end":109808,"line_start":65,"line_end":65,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1916,"byte_end":1923,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4815,"byte_end":4825,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5808,"byte_end":5820,"line_start":188,"line_end":188,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":6079,"byte_end":6087,"line_start":199,"line_end":199,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":6203,"byte_end":6211,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":854,"byte_end":861,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6413,"byte_end":6417,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":47}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\mod.rs","byte_start":6427,"byte_end":6433,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":361}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":871,"byte_end":878,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":400}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107342,"byte_end":107346,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":416}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":107375,"byte_end":107381,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":563}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\buffer.rs","byte_start":14446,"byte_end":14457,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\buffer.rs","byte_start":14570,"byte_end":14581,"line_start":38,"line_end":38,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":1,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\buffer.rs","byte_start":14848,"byte_end":14856,"line_start":52,"line_end":52,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26336,"byte_end":26346,"line_start":230,"line_end":230,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":744},"to":{"krate":1,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":26688,"byte_end":26698,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":32172,"byte_end":32187,"line_start":421,"line_end":421,"column_start":6,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":35669,"byte_end":35684,"line_start":517,"line_end":517,"column_start":18,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":157},"to":{"krate":1,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":36321,"byte_end":36333,"line_start":538,"line_end":538,"column_start":10,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":37006,"byte_end":37017,"line_start":562,"line_end":562,"column_start":10,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":37896,"byte_end":37907,"line_start":594,"line_end":594,"column_start":10,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":38860,"byte_end":38873,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":40431,"byte_end":40448,"line_start":685,"line_end":685,"column_start":10,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":41659,"byte_end":41668,"line_start":734,"line_end":734,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":43488,"byte_end":43491,"line_start":786,"line_end":786,"column_start":6,"column_end":9},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":45504,"byte_end":45516,"line_start":846,"line_end":846,"column_start":18,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":45781,"byte_end":45793,"line_start":856,"line_end":856,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":58037,"byte_end":58046,"line_start":1214,"line_end":1214,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":65253,"byte_end":65264,"line_start":1409,"line_end":1409,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\deflate\\core.rs","byte_start":66977,"byte_end":66984,"line_start":1468,"line_end":1468,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":115446,"byte_end":115458,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":122116,"byte_end":122133,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":123218,"byte_end":123235,"line_start":233,"line_end":233,"column_start":18,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\core.rs","byte_start":124947,"byte_end":124952,"line_start":305,"line_end":305,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\output_buffer.rs","byte_start":189513,"byte_end":189525,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191502,"byte_end":191510,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":611},"to":{"krate":0,"index":609}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":191908,"byte_end":191917,"line_start":36,"line_end":36,"column_start":22,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":615},"to":{"krate":0,"index":609}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":192228,"byte_end":192237,"line_start":49,"line_end":49,"column_start":22,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":620},"to":{"krate":0,"index":609}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193275,"byte_end":193287,"line_start":83,"line_end":83,"column_start":18,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":625},"to":{"krate":1,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\stream.rs","byte_start":193666,"byte_end":193678,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\inflate\\mod.rs","byte_start":109797,"byte_end":109808,"line_start":65,"line_end":65,"column_start":6,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":1916,"byte_end":1923,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":4815,"byte_end":4825,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":5808,"byte_end":5820,"line_start":188,"line_end":188,"column_start":6,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":6079,"byte_end":6087,"line_start":199,"line_end":199,"column_start":44,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\miniz_oxide-0.5.1\\src\\lib.rs","byte_start":6203,"byte_end":6211,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":2910}}]}