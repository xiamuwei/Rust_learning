{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1","program":"C:\\Users\\Administrator\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","image","--edition=2018","C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"exr\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"openexr\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=df64eee5659937ec","-C","extra-filename=-df64eee5659937ec","--out-dir","d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","-L","dependency=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","--extern","bytemuck=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libbytemuck-78da95ec98800f41.rmeta","--extern","byteorder=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libbyteorder-1a6e84ae9470ef61.rmeta","--extern","color_quant=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libcolor_quant-250b86ff5e28ed75.rmeta","--extern","exr=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libexr-e4e44ae5476a2e9e.rmeta","--extern","gif=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libgif-51110e25e7c49425.rmeta","--extern","jpeg=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libjpeg_decoder-4440e0c2e9078bde.rmeta","--extern","num_iter=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libnum_iter-01d08beab8312644.rmeta","--extern","num_rational=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libnum_rational-88e97059414a63b1.rmeta","--extern","num_traits=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libnum_traits-d1d0d4f1e3d14c95.rmeta","--extern","png=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libpng-8931f07a2e14a20b.rmeta","--extern","scoped_threadpool=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libscoped_threadpool-fc505f0dd1cbac45.rmeta","--extern","tiff=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libtiff-1beee19785137e39.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Administrator\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libimage-df64eee5659937ec.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[17456163984511764864,0]},"crate_root":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src","external_crates":[{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14055050308901652574,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5406660558723523310,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6038961408070452265,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6202505720861038248,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289845166519128743,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[39020721113303181,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12376455831296353094,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11449565758146872379,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14009155214127162348,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14302345610359121259,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[443988361779617849,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1060626961105550716,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10057676532539598168,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[10097761641719977187,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15541071652604932095,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[8355012413122137596,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16122166454175645634,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":18,"id":{"name":"exr","disambiguator":[11826385390842672949,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":19,"id":{"name":"smallvec","disambiguator":[18151928652596870901,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":20,"id":{"name":"half","disambiguator":[13433076593348897826,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":21,"id":{"name":"lebe","disambiguator":[9115292761846110253,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":22,"id":{"name":"deflate","disambiguator":[10232128571112890445,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":23,"id":{"name":"adler32","disambiguator":[11107674601121918924,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":24,"id":{"name":"inflate","disambiguator":[18211531803438030277,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":25,"id":{"name":"bit_field","disambiguator":[4800383488456334045,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":26,"id":{"name":"threadpool","disambiguator":[2544493144271511874,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":27,"id":{"name":"num_cpus","disambiguator":[11617103825246640247,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":28,"id":{"name":"flume","disambiguator":[17165418124961964386,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":29,"id":{"name":"nanorand","disambiguator":[13491142798638811336,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":30,"id":{"name":"getrandom","disambiguator":[1259507024853920736,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":31,"id":{"name":"cfg_if","disambiguator":[7870163325803878118,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":32,"id":{"name":"futures_core","disambiguator":[6851614707651769281,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":33,"id":{"name":"futures_sink","disambiguator":[95499609052664312,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":34,"id":{"name":"pin_project","disambiguator":[7929346444565166960,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":35,"id":{"name":"pin_project_internal","disambiguator":[5923997918143282548,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":36,"id":{"name":"spin","disambiguator":[16237328162769575578,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":37,"id":{"name":"lock_api","disambiguator":[11269283178687489609,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":38,"id":{"name":"scopeguard","disambiguator":[8236508233745520771,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":39,"id":{"name":"tiff","disambiguator":[8806026310412606816,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","num":40,"id":{"name":"jpeg_decoder","disambiguator":[9888718980352579479,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":41,"id":{"name":"rayon","disambiguator":[4079652961209905898,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":42,"id":{"name":"either","disambiguator":[8414965853458061433,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":43,"id":{"name":"rayon_core","disambiguator":[12598227096272388847,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":44,"id":{"name":"crossbeam_channel","disambiguator":[13137449048607888104,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":45,"id":{"name":"crossbeam_utils","disambiguator":[17382792196941024619,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":46,"id":{"name":"lazy_static","disambiguator":[12926062649333610170,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":47,"id":{"name":"crossbeam_deque","disambiguator":[13980702547011407209,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":48,"id":{"name":"crossbeam_epoch","disambiguator":[3975393970842021106,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":49,"id":{"name":"memoffset","disambiguator":[2325281983365429121,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":50,"id":{"name":"weezl","disambiguator":[12665549421214341350,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":51,"id":{"name":"flate2","disambiguator":[9423306969696454481,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":52,"id":{"name":"crc32fast","disambiguator":[15681895629810548398,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":53,"id":{"name":"miniz_oxide","disambiguator":[17411890250125992976,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","num":54,"id":{"name":"adler","disambiguator":[2136645346904313700,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","num":55,"id":{"name":"num_traits","disambiguator":[11607984084885099125,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","num":56,"id":{"name":"byteorder","disambiguator":[16992939938790051417,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","num":57,"id":{"name":"gif","disambiguator":[10889477476748393396,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","num":58,"id":{"name":"color_quant","disambiguator":[5939934121005637380,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","num":59,"id":{"name":"num_rational","disambiguator":[14890856341378444034,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","num":60,"id":{"name":"num_integer","disambiguator":[13410182909442481659,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","num":61,"id":{"name":"scoped_threadpool","disambiguator":[16749802416499660074,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","num":62,"id":{"name":"num_iter","disambiguator":[11179715577597419829,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","num":63,"id":{"name":"png","disambiguator":[13938359244679839167,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","num":64,"id":{"name":"bitflags","disambiguator":[16066912767693159522,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","num":65,"id":{"name":"bytemuck","disambiguator":[6688724813363203518,0]}}],"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":0,"byte_end":9223,"line_start":1,"line_end":276,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7570},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3983,"byte_end":3992,"line_start":104,"line_end":104,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3994,"byte_end":4011,"line_start":104,"line_end":104,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7891},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7892},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7949},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7950},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7862},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7863},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7920},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7921},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5984},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4087,"byte_end":4097,"line_start":108,"line_end":108,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":108,"line_end":108,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5737},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4142,"byte_end":4158,"line_start":111,"line_end":111,"column_start":5,"column_end":21},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5761},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4164,"byte_end":4176,"line_start":112,"line_end":112,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4182,"byte_end":4198,"line_start":113,"line_end":113,"column_start":5,"column_end":21},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5717},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4204,"byte_end":4216,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5731},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4222,"byte_end":4238,"line_start":115,"line_end":115,"column_start":5,"column_end":21},"alias_span":null,"name":"ImageDecoderRect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4244,"byte_end":4256,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8032},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4262,"byte_end":4273,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8075},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4279,"byte_end":4296,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8127},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4319,"byte_end":4325,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8112},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4331,"byte_end":4339,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8139},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4345,"byte_end":4353,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5151},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4389,"byte_end":4403,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4409,"byte_end":4418,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7539},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4443,"byte_end":4454,"line_start":129,"line_end":129,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5156},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4460,"byte_end":4471,"line_start":130,"line_end":130,"column_start":5,"column_end":16},"alias_span":null,"name":"Rgb32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5148},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4477,"byte_end":4485,"line_start":131,"line_end":131,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4491,"byte_end":4503,"line_start":132,"line_end":132,"column_start":5,"column_end":17},"alias_span":null,"name":"Rgba32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5149},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4509,"byte_end":4518,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4545,"byte_end":4556,"line_start":136,"line_end":136,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4593,"byte_end":4608,"line_start":139,"line_end":139,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4610,"byte_end":4615,"line_start":139,"line_end":139,"column_start":42,"column_end":47},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4617,"byte_end":4635,"line_start":139,"line_end":139,"column_start":49,"column_end":67},"alias_span":null,"name":"PixelWithColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4637,"byte_end":4646,"line_start":139,"line_end":139,"column_start":69,"column_end":78},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5594},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4711,"byte_end":4727,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4729,"byte_end":4745,"line_start":143,"line_end":143,"column_start":23,"column_end":39},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4747,"byte_end":4775,"line_start":143,"line_end":143,"column_start":41,"column_end":69},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4777,"byte_end":4781,"line_start":143,"line_end":143,"column_start":71,"column_end":75},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4783,"byte_end":4794,"line_start":143,"line_end":143,"column_start":77,"column_end":88},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4800,"byte_end":4823,"line_start":144,"line_end":144,"column_start":5,"column_end":28},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4825,"byte_end":4849,"line_start":144,"line_end":144,"column_start":30,"column_end":54},"alias_span":null,"name":"write_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4890,"byte_end":4902,"line_start":146,"line_end":146,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4904,"byte_end":4908,"line_start":146,"line_end":146,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7978},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4937,"byte_end":4949,"line_start":148,"line_end":148,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7523},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4979,"byte_end":4984,"line_start":150,"line_end":150,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7516},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4986,"byte_end":4991,"line_start":150,"line_end":150,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":4993,"byte_end":4999,"line_start":150,"line_end":150,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5222,"byte_end":5235,"line_start":159,"line_end":159,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5237,"byte_end":5252,"line_start":159,"line_end":159,"column_start":24,"column_end":39},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4990},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5254,"byte_end":5272,"line_start":159,"line_end":159,"column_start":41,"column_end":59},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5274,"byte_end":5287,"line_start":159,"line_end":159,"column_start":61,"column_end":74},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5010},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5289,"byte_end":5305,"line_start":159,"line_end":159,"column_start":76,"column_end":92},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5315,"byte_end":5321,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5323,"byte_end":5332,"line_start":160,"line_end":160,"column_start":17,"column_end":26},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5334,"byte_end":5338,"line_start":160,"line_end":160,"column_start":28,"column_end":32},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5340,"byte_end":5347,"line_start":160,"line_end":160,"column_start":34,"column_end":41},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\mod.rs","byte_start":26390,"byte_end":26394,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31457,"byte_end":31467,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6146},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31505,"byte_end":31515,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6147},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31505,"byte_end":31515,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31517,"byte_end":31525,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6149},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31517,"byte_end":31525,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31527,"byte_end":31535,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6151},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31527,"byte_end":31535,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6142},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31537,"byte_end":31544,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31537,"byte_end":31544,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31546,"byte_end":31554,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6145},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31546,"byte_end":31554,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31613,"byte_end":31628,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31630,"byte_end":31648,"line_start":13,"line_end":13,"column_start":22,"column_end":40},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31650,"byte_end":31674,"line_start":13,"line_end":13,"column_start":42,"column_end":66},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31676,"byte_end":31689,"line_start":13,"line_end":13,"column_start":68,"column_end":81},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31691,"byte_end":31707,"line_start":13,"line_end":13,"column_start":83,"column_end":99},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31713,"byte_end":31735,"line_start":14,"line_end":14,"column_start":5,"column_end":27},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31737,"byte_end":31746,"line_start":14,"line_end":14,"column_start":29,"column_end":38},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31748,"byte_end":31760,"line_start":14,"line_end":14,"column_start":40,"column_end":52},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31762,"byte_end":31780,"line_start":14,"line_end":14,"column_start":54,"column_end":72},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31782,"byte_end":31791,"line_start":14,"line_end":14,"column_start":74,"column_end":83},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31793,"byte_end":31805,"line_start":14,"line_end":14,"column_start":85,"column_end":97},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31811,"byte_end":31819,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31821,"byte_end":31832,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31880,"byte_end":31884,"line_start":19,"line_end":19,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31886,"byte_end":31895,"line_start":19,"line_end":19,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31897,"byte_end":31903,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31905,"byte_end":31914,"line_start":19,"line_end":19,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31916,"byte_end":31925,"line_start":19,"line_end":19,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31980,"byte_end":31988,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31990,"byte_end":31998,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32000,"byte_end":32006,"line_start":23,"line_end":23,"column_start":25,"column_end":31},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32008,"byte_end":32017,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32019,"byte_end":32034,"line_start":23,"line_end":23,"column_start":44,"column_end":59},"alias_span":null,"name":"grayscale_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32036,"byte_end":32055,"line_start":23,"line_end":23,"column_start":61,"column_end":80},"alias_span":null,"name":"grayscale_with_type","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32061,"byte_end":32086,"line_start":24,"line_end":24,"column_start":5,"column_end":30},"alias_span":null,"name":"grayscale_with_type_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32088,"byte_end":32097,"line_start":24,"line_end":24,"column_start":32,"column_end":41},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32099,"byte_end":32111,"line_start":24,"line_end":24,"column_start":43,"column_end":55},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32113,"byte_end":32119,"line_start":24,"line_end":24,"column_start":57,"column_end":63},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32121,"byte_end":32128,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32121,"byte_end":32128,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32130,"byte_end":32138,"line_start":24,"line_end":24,"column_start":74,"column_end":82},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108370,"byte_end":108376,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":714}},{"kind":"Use","ref_id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196405,"byte_end":196415,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":1142}},{"kind":"Use","ref_id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196440,"byte_end":196450,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":1142}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342430,"byte_end":342431,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HdrAdapter, Rgbe8Pixel, SIGNATURE, rgbe8","parent":{"krate":0,"index":2041}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342456,"byte_end":342457,"line_start":15,"line_end":15,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2041}},{"kind":"Use","ref_id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394965,"byte_end":394975,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":2353}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":395022,"byte_end":395032,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"alias_span":null,"name":"IcoEncoder","value":"","parent":{"krate":0,"index":2353}},{"kind":"Use","ref_id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":395034,"byte_end":395042,"line_start":11,"line_end":11,"column_start":37,"column_end":45},"alias_span":null,"name":"IcoFrame","value":"","parent":{"krate":0,"index":2353}},{"kind":"Use","ref_id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421362,"byte_end":421373,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":2571}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421399,"byte_end":421410,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":2571}},{"kind":"Use","ref_id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421412,"byte_end":421424,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":2571}},{"kind":"Use","ref_id":{"krate":0,"index":6808},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421426,"byte_end":421442,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":2571}},{"kind":"Use","ref_id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553944,"byte_end":553954,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553979,"byte_end":553989,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmEncoder","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554051,"byte_end":554066,"line_start":11,"line_end":11,"column_start":5,"column_end":20},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7138},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554068,"byte_end":554085,"line_start":11,"line_end":11,"column_start":22,"column_end":39},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554087,"byte_end":554099,"line_start":11,"line_end":11,"column_start":41,"column_end":53},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7108},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554101,"byte_end":554114,"line_start":11,"line_end":11,"column_start":55,"column_end":68},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554116,"byte_end":554128,"line_start":11,"line_end":11,"column_start":70,"column_end":82},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554156,"byte_end":554165,"line_start":13,"line_end":13,"column_start":24,"column_end":33},"alias_span":null,"name":"PnmHeader","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7075},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554167,"byte_end":554177,"line_start":13,"line_end":13,"column_start":35,"column_end":45},"alias_span":null,"name":"PnmSubtype","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":7059},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":554179,"byte_end":554193,"line_start":13,"line_end":13,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":3224}},{"kind":"Use","ref_id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":642573,"byte_end":642583,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":3762}},{"kind":"Use","ref_id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":642649,"byte_end":642659,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":3762}},{"kind":"Use","ref_id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\mod.rs","byte_start":684169,"byte_end":684180,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":4144}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":0,"byte_end":9223,"line_start":1,"line_end":276,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":215},{"krate":0,"index":244},{"krate":0,"index":257},{"krate":0,"index":714},{"krate":0,"index":926},{"krate":0,"index":1141},{"krate":0,"index":4693},{"krate":0,"index":4746},{"krate":0,"index":5158},{"krate":0,"index":5326},{"krate":0,"index":5605},{"krate":0,"index":5809},{"krate":0,"index":5967},{"krate":0,"index":5983},{"krate":0,"index":8195}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ [README.md file which is most easily viewed on","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # High level API","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Load images using [`io::Reader`]:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":842,"byte_end":866,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ use image::io::Reader as ImageReader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":867,"byte_end":908,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":909,"byte_end":959,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # let bytes = vec![0u8];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":960,"byte_end":988,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":989,"byte_end":992,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":993,"byte_end":1051,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1052,"byte_end":1137,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1138,"byte_end":1150,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1151,"byte_end":1158,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1171,"byte_end":1228,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1233,"byte_end":1251,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ # use std::io::{Write, Cursor};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1252,"byte_end":1287,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/ # use image::ImageOutputFormat;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1288,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use image::DynamicImage;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1324,"byte_end":1354,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"png\")]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1355,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1385,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ # let img: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1436,"byte_end":1483,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ # let img2: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1484,"byte_end":1532,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ img.save(\"empty.jpg\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1533,"byte_end":1560,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1565,"byte_end":1605,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ img2.write_to(&mut Cursor::new(&mut bytes), image::ImageOutputFormat::Png)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1606,"byte_end":1686,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1687,"byte_end":1699,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1700,"byte_end":1707,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1708,"byte_end":1755,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1756,"byte_end":1763,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1764,"byte_end":1767,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1768,"byte_end":1891,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1892,"byte_end":1895,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1896,"byte_end":1944,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":1945,"byte_end":2001,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2002,"byte_end":2043,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Image buffers","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2048,"byte_end":2067,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The two main types for storing images:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2072,"byte_end":2114,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2115,"byte_end":2181,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2182,"byte_end":2260,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/     and supports conversions between them.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2261,"byte_end":2307,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2308,"byte_end":2311,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As well as a few more specialized options:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2312,"byte_end":2358,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2359,"byte_end":2415,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2416,"byte_end":2492,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2493,"byte_end":2573,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     matrices and foreign interfaces.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2574,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2619,"byte_end":2672,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2673,"byte_end":2718,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2719,"byte_end":2763,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2764,"byte_end":2808,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`flat`]: flat/index.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2809,"byte_end":2838,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2839,"byte_end":2842,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Low level encoding/decoding API","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2843,"byte_end":2880,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`ImageDecoder`] and [`ImageDecoderRect`] traits are implemented for many image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2885,"byte_end":2977,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":2978,"byte_end":3076,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3077,"byte_end":3139,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3144,"byte_end":3226,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3227,"byte_end":3230,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3231,"byte_end":3309,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ [`ImageDecoderRect`]: trait.ImageDecoderRect.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3310,"byte_end":3363,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/ [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3364,"byte_end":3409,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3410,"byte_end":3455,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3456,"byte_end":3478,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3479,"byte_end":3510,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3511,"byte_end":3536,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3537,"byte_end":3557,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3558,"byte_end":3596,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3694,"byte_end":3735,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"allow(clippy :: wrong_self_convention, clippy :: enum_variant_names)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":3776,"byte_end":3844,"line_start":95,"line_end":95,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":5984},{"krate":0,"index":6003},{"krate":0,"index":6005},{"krate":0,"index":6008},{"krate":0,"index":6010},{"krate":0,"index":6020},{"krate":0,"index":6022},{"krate":0,"index":6024},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":6036},{"krate":0,"index":6039},{"krate":0,"index":6041},{"krate":0,"index":6051},{"krate":0,"index":6053},{"krate":0,"index":6055},{"krate":0,"index":6058},{"krate":0,"index":6059},{"krate":0,"index":6062},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6069},{"krate":0,"index":6071},{"krate":0,"index":6079},{"krate":0,"index":6081},{"krate":0,"index":6083},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6093},{"krate":0,"index":6105},{"krate":0,"index":6107},{"krate":0,"index":6109},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"/ Contains detailed error representation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9225,"byte_end":9268,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9269,"byte_end":9272,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9273,"byte_end":9366,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9367,"byte_end":9466,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9467,"byte_end":9542,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9543,"byte_end":9546,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9547,"byte_end":9646,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9647,"byte_end":9745,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9746,"byte_end":9841,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9842,"byte_end":9938,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":9939,"byte_end":10035,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ external means then you could inspect the error type in slightly more detail.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10036,"byte_end":10117,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10118,"byte_end":10121,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ImageError`]: enum.ImageError.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10122,"byte_end":10162,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10835,"byte_end":10843,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10552,"byte_end":10596,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10601,"byte_end":10604,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10609,"byte_end":10702,"line_start":30,"line_end":30,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10707,"byte_end":10790,"line_start":31,"line_end":31,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10795,"byte_end":10830,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5988},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11229,"byte_end":11237,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10865,"byte_end":10909,"line_start":35,"line_end":35,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10914,"byte_end":10917,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10922,"byte_end":11008,"line_start":37,"line_end":37,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11013,"byte_end":11106,"line_start":38,"line_end":38,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11111,"byte_end":11204,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11209,"byte_end":11224,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11477,"byte_end":11486,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11259,"byte_end":11307,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11312,"byte_end":11315,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11320,"byte_end":11411,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11416,"byte_end":11472,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11746,"byte_end":11752,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11509,"byte_end":11586,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11591,"byte_end":11594,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11599,"byte_end":11694,"line_start":51,"line_end":51,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11699,"byte_end":11741,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5997},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12090,"byte_end":12101,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11771,"byte_end":11835,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11840,"byte_end":11843,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11848,"byte_end":11932,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11937,"byte_end":11974,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":11979,"byte_end":12026,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12031,"byte_end":12085,"line_start":60,"line_end":60,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6000},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12192,"byte_end":12199,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12126,"byte_end":12187,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":5984},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10535,"byte_end":10545,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"pub enum ImageError {\n    Decoding(DecodingError),\n    Encoding(EncodingError),\n    Parameter(ParameterError),\n    Limits(LimitError),\n    Unsupported(UnsupportedError),\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10277,"byte_end":10325,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10326,"byte_end":10329,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10330,"byte_end":10422,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":10423,"byte_end":10508,"line_start":25,"line_end":25,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":6005},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12431,"byte_end":12447,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":6006},{"krate":0,"index":6007}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12215,"byte_end":12272,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12273,"byte_end":12276,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12277,"byte_end":12336,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12337,"byte_end":12340,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12341,"byte_end":12402,"line_start":71,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6011},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12704,"byte_end":12709,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":6010},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12652,"byte_end":12699,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6014},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12776,"byte_end":12782,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":6010},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12734,"byte_end":12771,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6017},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12926,"byte_end":12940,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":6010},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12805,"byte_end":12842,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12847,"byte_end":12921,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":6010},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12625,"byte_end":12645,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"pub enum UnsupportedErrorKind {\n    Color(ExtendedColorType),\n    Format(ImageFormatHint),\n    GenericFeature(String),\n}","parent":null,"children":[{"krate":0,"index":6011},{"krate":0,"index":6014},{"krate":0,"index":6017}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12514,"byte_end":12556,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12598,"byte_end":12615,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13246,"byte_end":13259,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":6032},{"krate":0,"index":6033}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":12953,"byte_end":13006,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13007,"byte_end":13010,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13011,"byte_end":13105,"line_start":93,"line_end":93,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13106,"byte_end":13145,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13146,"byte_end":13149,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13150,"byte_end":13217,"line_start":96,"line_end":96,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6036},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13640,"byte_end":13654,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13348,"byte_end":13397,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13398,"byte_end":13401,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13402,"byte_end":13497,"line_start":105,"line_end":105,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13498,"byte_end":13537,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13538,"byte_end":13541,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13542,"byte_end":13611,"line_start":108,"line_end":108,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6042},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13920,"byte_end":13937,"line_start":120,"line_end":120,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":6041},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13879,"byte_end":13915,"line_start":119,"line_end":119,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14035,"byte_end":14048,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":6041},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13943,"byte_end":14030,"line_start":121,"line_end":121,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6046},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14176,"byte_end":14183,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":6041},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14054,"byte_end":14092,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14097,"byte_end":14171,"line_start":124,"line_end":124,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6049},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14244,"byte_end":14254,"line_start":127,"line_end":127,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":6041},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14197,"byte_end":14239,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6041},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13854,"byte_end":13872,"line_start":118,"line_end":118,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"pub enum ParameterErrorKind {\n    DimensionMismatch,\n    FailedAlready,\n    Generic(String),\n    NoMoreData,\n}","parent":null,"children":[{"krate":0,"index":6042},{"krate":0,"index":6044},{"krate":0,"index":6046},{"krate":0,"index":6049}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13744,"byte_end":13785,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":13827,"byte_end":13844,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6062},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14552,"byte_end":14565,"line_start":137,"line_end":137,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":6063},{"krate":0,"index":6064}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14259,"byte_end":14312,"line_start":130,"line_end":130,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14313,"byte_end":14316,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14317,"byte_end":14411,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14412,"byte_end":14451,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14452,"byte_end":14455,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14456,"byte_end":14523,"line_start":135,"line_end":135,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14965,"byte_end":14975,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":6068}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14654,"byte_end":14731,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14732,"byte_end":14735,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14736,"byte_end":14828,"line_start":144,"line_end":144,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14829,"byte_end":14868,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14869,"byte_end":14872,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":14873,"byte_end":14936,"line_start":147,"line_end":147,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6072},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15525,"byte_end":15539,"line_start":163,"line_end":163,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15452,"byte_end":15520,"line_start":162,"line_end":162,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15623,"byte_end":15641,"line_start":165,"line_end":165,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15545,"byte_end":15618,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6076},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15720,"byte_end":15731,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::LimitErrorKind::Unsupported","value":"LimitErrorKind::Unsupported { limits, supported }","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" The specified strict limits are not supported for this operation\n","sig":null,"attributes":[{"value":"/ The specified strict limits are not supported for this operation","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15647,"byte_end":15715,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15431,"byte_end":15445,"line_start":161,"line_end":161,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"pub enum LimitErrorKind {\n    DimensionError,\n    InsufficientMemory,\n    Unsupported {\n        limits: crate::io::Limits,\n        supported: crate::io::LimitSupport,\n    },\n}","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6074},{"krate":0,"index":6076}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15046,"byte_end":15114,"line_start":154,"line_end":154,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15115,"byte_end":15118,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15119,"byte_end":15217,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15218,"byte_end":15283,"line_start":157,"line_end":157,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15329,"byte_end":15346,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15347,"byte_end":15385,"line_start":160,"line_end":160,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16071,"byte_end":16076,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":6093},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16034,"byte_end":16066,"line_start":179,"line_end":179,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6097},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16144,"byte_end":16148,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":6093},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16096,"byte_end":16139,"line_start":182,"line_end":182,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6100},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16220,"byte_end":16233,"line_start":186,"line_end":186,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":6093},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16163,"byte_end":16215,"line_start":185,"line_end":185,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6103},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16320,"byte_end":16327,"line_start":189,"line_end":189,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":6093},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16260,"byte_end":16315,"line_start":188,"line_end":188,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":6093},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16012,"byte_end":16027,"line_start":178,"line_end":178,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"pub enum ImageFormatHint {\n    Exact(ImageFormat),\n    Name(String),\n    PathExtension(std::path::PathBuf),\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":6094},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6103}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15892,"byte_end":15943,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":15985,"byte_end":16002,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16578,"byte_end":16598,"line_start":197,"line_end":197,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"pub fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16360,"byte_end":16446,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16451,"byte_end":16454,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16459,"byte_end":16547,"line_start":195,"line_end":195,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16552,"byte_end":16566,"line_start":196,"line_end":196,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16793,"byte_end":16797,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"pub fn kind(&Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16715,"byte_end":16781,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16936,"byte_end":16947,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16868,"byte_end":16924,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17139,"byte_end":17142,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error +\n                                                             Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17038,"byte_end":17127,"line_start":213,"line_end":213,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17487,"byte_end":17503,"line_start":224,"line_end":224,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17331,"byte_end":17380,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17385,"byte_end":17388,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17393,"byte_end":17475,"line_start":223,"line_end":223,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17702,"byte_end":17713,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17634,"byte_end":17690,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17906,"byte_end":17909,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error +\n                                                             Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17804,"byte_end":17894,"line_start":238,"line_end":238,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18255,"byte_end":18271,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18098,"byte_end":18148,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18153,"byte_end":18156,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18161,"byte_end":18243,"line_start":248,"line_end":248,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18469,"byte_end":18480,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18402,"byte_end":18457,"line_start":256,"line_end":256,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18652,"byte_end":18661,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"pub fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18572,"byte_end":18640,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18868,"byte_end":18872,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"pub fn kind(&Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18792,"byte_end":18856,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19045,"byte_end":19054,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"pub fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18961,"byte_end":19033,"line_start":278,"line_end":278,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19198,"byte_end":19202,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"pub fn kind(&Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19126,"byte_end":19186,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":20081,"byte_end":20092,"line_start":320,"line_end":320,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":20023,"byte_end":20071,"line_start":319,"line_end":319,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5127,"byte_end":5133,"line_start":156,"line_end":156,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5047,"byte_end":5118,"line_start":155,"line_end":155,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":251},{"krate":0,"index":254}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\mod.rs","byte_start":26303,"byte_end":26347,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26566,"byte_end":26570,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26438,"byte_end":26503,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6117},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26630,"byte_end":26631,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":6116},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26577,"byte_end":26621,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6118},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26695,"byte_end":26696,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":6116},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26642,"byte_end":26686,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6119},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26742,"byte_end":26747,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":6116},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26707,"byte_end":26733,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6120},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26794,"byte_end":26800,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":6116},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\math\\rect.rs","byte_start":26758,"byte_end":26785,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":448},{"krate":0,"index":566},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":711}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":31281,"byte_end":31311,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":47973,"byte_end":47981,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":47924,"byte_end":47965,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":48313,"byte_end":48322,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":48263,"byte_end":48305,"line_start":21,"line_end":21,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":48655,"byte_end":48664,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":48605,"byte_end":48647,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":49052,"byte_end":49063,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"pub fn rotate90_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":48947,"byte_end":49044,"line_start":47,"line_end":47,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":49837,"byte_end":49849,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"pub fn rotate180_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":49731,"byte_end":49829,"line_start":73,"line_end":73,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":50632,"byte_end":50644,"line_start":100,"line_end":100,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"pub fn rotate270_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":50526,"byte_end":50624,"line_start":99,"line_end":99,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":51350,"byte_end":51365,"line_start":126,"line_end":126,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":51312,"byte_end":51342,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":51690,"byte_end":51703,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":51654,"byte_end":51682,"line_start":138,"line_end":138,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":52085,"byte_end":52103,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"pub fn flip_horizontal_in<I,\n                          Container>(&I,\n                                     &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":51990,"byte_end":52077,"line_start":151,"line_end":151,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":52864,"byte_end":52880,"line_start":178,"line_end":178,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"pub fn flip_vertical_in<I,\n                        Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":52771,"byte_end":52856,"line_start":177,"line_end":177,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":53607,"byte_end":53625,"line_start":204,"line_end":204,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"pub fn rotate180_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":53548,"byte_end":53599,"line_start":203,"line_end":203,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":54405,"byte_end":54429,"line_start":235,"line_end":235,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"pub fn flip_horizontal_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":54357,"byte_end":54397,"line_start":234,"line_end":234,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":54835,"byte_end":54857,"line_start":250,"line_end":250,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"pub fn flip_vertical_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\affine.rs","byte_start":54789,"byte_end":54827,"line_start":249,"line_end":249,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":6136},{"krate":0,"index":6138},{"krate":0,"index":6140},{"krate":0,"index":541},{"krate":0,"index":547},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":563}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":59818,"byte_end":59882,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":60298,"byte_end":60307,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImageView>(&I)\n-> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is discarded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":60218,"byte_end":60290,"line_start":14,"line_end":14,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":60515,"byte_end":60530,"line_start":22,"line_end":22,"column_start":8,"column_end":23},"name":"grayscale_alpha","qualname":"::imageops::colorops::grayscale_alpha","value":"pub fn grayscale_alpha<I: GenericImageView>(&I)\n-> ImageBuffer<LumaA<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is preserved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":60435,"byte_end":60507,"line_start":21,"line_end":21,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":60783,"byte_end":60802,"line_start":29,"line_end":29,"column_start":8,"column_end":27},"name":"grayscale_with_type","qualname":"::imageops::colorops::grayscale_with_type","value":"pub fn grayscale_with_type<NewPixel, I: GenericImageView>(&I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where NewPixel: Pixel +\nFromColor<Luma<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":60665,"byte_end":60775,"line_start":28,"line_end":28,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":61433,"byte_end":61458,"line_start":51,"line_end":51,"column_start":8,"column_end":33},"name":"grayscale_with_type_alpha","qualname":"::imageops::colorops::grayscale_with_type_alpha","value":"pub fn grayscale_with_type_alpha<NewPixel, I: GenericImageView>(&I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where NewPixel: Pixel +\nFromColor<LumaA<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":61315,"byte_end":61425,"line_start":50,"line_end":50,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62071,"byte_end":62077,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":61978,"byte_end":62026,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62027,"byte_end":62063,"line_start":73,"line_end":73,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62688,"byte_end":62696,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62428,"byte_end":62474,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62475,"byte_end":62534,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62535,"byte_end":62619,"line_start":90,"line_end":90,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62620,"byte_end":62623,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast_in_place`.][contrast_in_place]*","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":62624,"byte_end":62680,"line_start":92,"line_end":92,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":63782,"byte_end":63799,"line_start":131,"line_end":131,"column_start":8,"column_end":25},"name":"contrast_in_place","qualname":"::imageops::colorops::contrast_in_place","value":"pub fn contrast_in_place<I>(&mut I, f32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image in place.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":63531,"byte_end":63586,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":63587,"byte_end":63646,"line_start":127,"line_end":127,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":63647,"byte_end":63731,"line_start":128,"line_end":128,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":63732,"byte_end":63735,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast`.][contrast]*","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":63736,"byte_end":63774,"line_start":130,"line_end":130,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":64730,"byte_end":64738,"line_start":164,"line_end":164,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":64495,"byte_end":64527,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":64528,"byte_end":64584,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":64585,"byte_end":64661,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":64662,"byte_end":64665,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten_in_place`.][brighten_in_place]*","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":64666,"byte_end":64722,"line_start":163,"line_end":163,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":65768,"byte_end":65785,"line_start":201,"line_end":201,"column_start":8,"column_end":25},"name":"brighten_in_place","qualname":"::imageops::colorops::brighten_in_place","value":"pub fn brighten_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image in place.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":65542,"byte_end":65583,"line_start":196,"line_end":196,"column_start":1,"column_end":42}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":65584,"byte_end":65640,"line_start":197,"line_end":197,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":65641,"byte_end":65717,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":65718,"byte_end":65721,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten`.][brighten]*","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":65722,"byte_end":65760,"line_start":200,"line_end":200,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66777,"byte_end":66786,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66498,"byte_end":66532,"line_start":228,"line_end":228,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66533,"byte_end":66584,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66585,"byte_end":66654,"line_start":230,"line_end":230,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66655,"byte_end":66706,"line_start":231,"line_end":231,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66707,"byte_end":66710,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate_in_place`.][huerotate_in_place]*","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":66711,"byte_end":66769,"line_start":233,"line_end":233,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":69004,"byte_end":69022,"line_start":300,"line_end":300,"column_start":8,"column_end":26},"name":"huerotate_in_place","qualname":"::imageops::colorops::huerotate_in_place","value":"pub fn huerotate_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image in place.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":68734,"byte_end":68777,"line_start":294,"line_end":294,"column_start":1,"column_end":44}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":68778,"byte_end":68829,"line_start":295,"line_end":295,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":68830,"byte_end":68899,"line_start":296,"line_end":296,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":68900,"byte_end":68951,"line_start":297,"line_end":297,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":68952,"byte_end":68955,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate`.][huerotate]*","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":68956,"byte_end":68996,"line_start":299,"line_end":299,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":70985,"byte_end":70993,"line_start":362,"line_end":362,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":70959,"byte_end":70974,"line_start":361,"line_end":361,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71057,"byte_end":71062,"line_start":364,"line_end":364,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71000,"byte_end":71047,"line_start":363,"line_end":363,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71155,"byte_end":71163,"line_start":367,"line_end":367,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71068,"byte_end":71121,"line_start":365,"line_end":365,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71126,"byte_end":71147,"line_start":366,"line_end":366,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71371,"byte_end":71377,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"pub fn lookup(&Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71206,"byte_end":71299,"line_start":368,"line_end":368,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71304,"byte_end":71363,"line_start":369,"line_end":369,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71558,"byte_end":71568,"line_start":375,"line_end":375,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"pub fn has_lookup(&Self) -> bool","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71470,"byte_end":71550,"line_start":374,"line_end":374,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71673,"byte_end":71682,"line_start":379,"line_end":379,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71610,"byte_end":71665,"line_start":378,"line_end":378,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72827,"byte_end":72834,"line_start":412,"line_end":412,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71719,"byte_end":71743,"line_start":382,"line_end":382,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71744,"byte_end":71747,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71748,"byte_end":71762,"line_start":384,"line_end":384,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71763,"byte_end":71770,"line_start":385,"line_end":385,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71771,"byte_end":71840,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71841,"byte_end":71876,"line_start":387,"line_end":387,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71877,"byte_end":71880,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71881,"byte_end":71907,"line_start":389,"line_end":389,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71908,"byte_end":71995,"line_start":390,"line_end":390,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":71996,"byte_end":72091,"line_start":391,"line_end":391,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72092,"byte_end":72188,"line_start":392,"line_end":392,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72189,"byte_end":72262,"line_start":393,"line_end":393,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72263,"byte_end":72286,"line_start":394,"line_end":394,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72287,"byte_end":72335,"line_start":395,"line_end":395,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72336,"byte_end":72388,"line_start":396,"line_end":396,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72389,"byte_end":72432,"line_start":397,"line_end":397,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72433,"byte_end":72469,"line_start":398,"line_end":398,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72470,"byte_end":72519,"line_start":399,"line_end":399,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72520,"byte_end":72527,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72528,"byte_end":72586,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72587,"byte_end":72647,"line_start":402,"line_end":402,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72648,"byte_end":72673,"line_start":403,"line_end":403,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72674,"byte_end":72696,"line_start":404,"line_end":404,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72697,"byte_end":72713,"line_start":405,"line_end":405,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72714,"byte_end":72738,"line_start":406,"line_end":406,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72739,"byte_end":72748,"line_start":407,"line_end":407,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72749,"byte_end":72756,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72757,"byte_end":72784,"line_start":409,"line_end":409,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72785,"byte_end":72792,"line_start":410,"line_end":410,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":75248,"byte_end":75254,"line_start":502,"line_end":502,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix> + ?Sized, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":75096,"byte_end":75177,"line_start":500,"line_end":500,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":75178,"byte_end":75240,"line_start":501,"line_end":501,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":76808,"byte_end":76820,"line_start":540,"line_end":540,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix> + ?Sized,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":76711,"byte_end":76800,"line_start":539,"line_end":539,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6142},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80522,"byte_end":80529,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":6141},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80497,"byte_end":80517,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80558,"byte_end":80566,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":6141},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80536,"byte_end":80553,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6146},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80594,"byte_end":80604,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":6141},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80573,"byte_end":80589,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80635,"byte_end":80643,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":6141},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80611,"byte_end":80630,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80680,"byte_end":80688,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":6141},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80650,"byte_end":80675,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80480,"byte_end":80490,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType { Nearest, Triangle, CatmullRom, Gaussian, Lanczos3, }","parent":null,"children":[{"krate":0,"index":6142},{"krate":0,"index":6144},{"krate":0,"index":6146},{"krate":0,"index":6148},{"krate":0,"index":6150}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78038,"byte_end":78069,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78070,"byte_end":78073,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78074,"byte_end":78089,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78090,"byte_end":78093,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78094,"byte_end":78172,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78173,"byte_end":78192,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78193,"byte_end":78276,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78277,"byte_end":78284,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78285,"byte_end":78364,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78365,"byte_end":78422,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78423,"byte_end":78426,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78427,"byte_end":78449,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78450,"byte_end":78541,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78542,"byte_end":78586,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78587,"byte_end":78590,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78591,"byte_end":78688,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78689,"byte_end":78763,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78764,"byte_end":78804,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78805,"byte_end":78943,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78944,"byte_end":78968,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78969,"byte_end":78981,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":78982,"byte_end":79022,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79023,"byte_end":79161,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79162,"byte_end":79186,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79187,"byte_end":79199,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79200,"byte_end":79240,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79241,"byte_end":79381,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79382,"byte_end":79408,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79409,"byte_end":79421,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79422,"byte_end":79462,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79463,"byte_end":79603,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79604,"byte_end":79620,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79621,"byte_end":79633,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79634,"byte_end":79674,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79675,"byte_end":79814,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79815,"byte_end":79844,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79845,"byte_end":79857,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79858,"byte_end":79868,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79869,"byte_end":79872,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79873,"byte_end":79885,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79886,"byte_end":79889,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79890,"byte_end":79964,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":79965,"byte_end":80012,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80013,"byte_end":80016,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80017,"byte_end":80049,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80050,"byte_end":80060,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80061,"byte_end":80085,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80086,"byte_end":80108,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80109,"byte_end":80120,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80121,"byte_end":80131,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80132,"byte_end":80157,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80158,"byte_end":80181,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80182,"byte_end":80193,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80194,"byte_end":80204,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80205,"byte_end":80232,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80233,"byte_end":80256,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80257,"byte_end":80268,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80269,"byte_end":80279,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80280,"byte_end":80305,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80306,"byte_end":80330,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80331,"byte_end":80342,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80343,"byte_end":80353,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80354,"byte_end":80379,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80380,"byte_end":80404,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80405,"byte_end":80416,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":80417,"byte_end":80429,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90955,"byte_end":90964,"line_start":424,"line_end":424,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90209,"byte_end":90266,"line_start":412,"line_end":412,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90267,"byte_end":90270,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90271,"byte_end":90369,"line_start":414,"line_end":414,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90370,"byte_end":90465,"line_start":415,"line_end":415,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90466,"byte_end":90469,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90470,"byte_end":90564,"line_start":417,"line_end":417,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90565,"byte_end":90662,"line_start":418,"line_end":418,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90663,"byte_end":90759,"line_start":419,"line_end":419,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90760,"byte_end":90796,"line_start":420,"line_end":420,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90797,"byte_end":90800,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90801,"byte_end":90900,"line_start":422,"line_end":422,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":90901,"byte_end":90947,"line_start":423,"line_end":423,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":99080,"byte_end":99089,"line_start":671,"line_end":671,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":98957,"byte_end":99008,"line_start":669,"line_end":669,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":99009,"byte_end":99072,"line_start":670,"line_end":670,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":101592,"byte_end":101598,"line_start":753,"line_end":753,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImageView>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":101419,"byte_end":101477,"line_start":750,"line_end":750,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":101478,"byte_end":101536,"line_start":751,"line_end":751,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":101537,"byte_end":101584,"line_start":752,"line_end":752,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":102788,"byte_end":102792,"line_start":793,"line_end":793,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImageView>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":102676,"byte_end":102727,"line_start":791,"line_end":791,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":102728,"byte_end":102780,"line_start":792,"line_end":792,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":103707,"byte_end":103716,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for minimal brightness change that will be sharpened.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":103419,"byte_end":103472,"line_start":816,"line_end":816,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":103473,"byte_end":103524,"line_start":817,"line_end":817,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for minimal brightness change that will be sharpened.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":103525,"byte_end":103615,"line_start":818,"line_end":818,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":103616,"byte_end":103619,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":103620,"byte_end":103699,"line_start":820,"line_end":820,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32393,"byte_end":32397,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImageView>(&mut I, u32, u32, u32, u32)\n-> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32273,"byte_end":32312,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32313,"byte_end":32385,"line_start":34,"line_end":34,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32764,"byte_end":32772,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"pub fn crop_imm<I: GenericImageView>(&I, u32, u32, u32, u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32641,"byte_end":32683,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32684,"byte_end":32756,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35556,"byte_end":35570,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"pub fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33384,"byte_end":33447,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33448,"byte_end":33451,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33452,"byte_end":33549,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33550,"byte_end":33635,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33636,"byte_end":33673,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33674,"byte_end":33708,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33709,"byte_end":33760,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33761,"byte_end":33764,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33765,"byte_end":33858,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33859,"byte_end":33958,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33959,"byte_end":33979,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33980,"byte_end":33983,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":33984,"byte_end":34040,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34041,"byte_end":34102,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34103,"byte_end":34153,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34154,"byte_end":34157,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34158,"byte_end":34257,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34258,"byte_end":34351,"line_start":94,"line_end":94,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34352,"byte_end":34425,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34426,"byte_end":34429,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34430,"byte_end":34441,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34442,"byte_end":34472,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34473,"byte_end":34528,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34529,"byte_end":34588,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34589,"byte_end":34657,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34658,"byte_end":34661,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34662,"byte_end":34764,"line_start":103,"line_end":103,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34765,"byte_end":34768,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34769,"byte_end":34780,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34781,"byte_end":34853,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34854,"byte_end":34891,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34892,"byte_end":34895,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34896,"byte_end":34917,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34918,"byte_end":34948,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34949,"byte_end":34992,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":34993,"byte_end":35014,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35015,"byte_end":35036,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35037,"byte_end":35040,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35041,"byte_end":35104,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35105,"byte_end":35108,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35109,"byte_end":35124,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35125,"byte_end":35166,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35167,"byte_end":35196,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35197,"byte_end":35216,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35217,"byte_end":35220,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35221,"byte_end":35263,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35264,"byte_end":35267,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35268,"byte_end":35279,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35280,"byte_end":35352,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35353,"byte_end":35405,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35406,"byte_end":35446,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35447,"byte_end":35502,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35503,"byte_end":35510,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35511,"byte_end":35514,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":35515,"byte_end":35548,"line_start":131,"line_end":131,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":38875,"byte_end":38882,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I, J>(&mut I, &J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":38818,"byte_end":38867,"line_start":214,"line_end":214,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39987,"byte_end":39991,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"pub fn tile<I, J>(&mut I, &J) where I: GenericImage, J: GenericImageView<Pixel\n= I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39669,"byte_end":39717,"line_start":238,"line_end":238,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39718,"byte_end":39721,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39722,"byte_end":39736,"line_start":240,"line_end":240,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39737,"byte_end":39750,"line_start":241,"line_end":241,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39751,"byte_end":39778,"line_start":242,"line_end":242,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39779,"byte_end":39782,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39783,"byte_end":39828,"line_start":244,"line_end":244,"column_start":1,"column_end":46}},{"value":"/ let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39829,"byte_end":39877,"line_start":245,"line_end":245,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39878,"byte_end":39881,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ image::imageops::tile(&mut img, &tile);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39882,"byte_end":39925,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39926,"byte_end":39971,"line_start":248,"line_end":248,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":39972,"byte_end":39979,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40764,"byte_end":40781,"line_start":276,"line_end":276,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"pub fn vertical_gradient<S, P, I>(&mut I, &P, &P) where I: GenericImage<Pixel\n= P>, P: Pixel<Subpixel = S> + 'static, S: Primitive + Lerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40312,"byte_end":40362,"line_start":262,"line_end":262,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40363,"byte_end":40366,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40367,"byte_end":40414,"line_start":264,"line_end":264,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40415,"byte_end":40418,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40419,"byte_end":40433,"line_start":266,"line_end":266,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40434,"byte_end":40447,"line_start":267,"line_end":267,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40448,"byte_end":40488,"line_start":268,"line_end":268,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40489,"byte_end":40492,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40493,"byte_end":40536,"line_start":270,"line_end":270,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40537,"byte_end":40587,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40588,"byte_end":40642,"line_start":272,"line_end":272,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40643,"byte_end":40646,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40647,"byte_end":40708,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/ img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":40709,"byte_end":40756,"line_start":275,"line_end":275,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41783,"byte_end":41802,"line_start":309,"line_end":309,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"pub fn horizontal_gradient<S, P, I>(&mut I, &P, &P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41325,"byte_end":41377,"line_start":295,"line_end":295,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41378,"byte_end":41381,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41382,"byte_end":41429,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41430,"byte_end":41433,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41434,"byte_end":41448,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41449,"byte_end":41462,"line_start":300,"line_end":300,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41463,"byte_end":41503,"line_start":301,"line_end":301,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41504,"byte_end":41507,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41508,"byte_end":41551,"line_start":303,"line_end":303,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41552,"byte_end":41602,"line_start":304,"line_end":304,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41603,"byte_end":41657,"line_start":305,"line_end":305,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41658,"byte_end":41661,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41662,"byte_end":41725,"line_start":307,"line_end":307,"column_start":1,"column_end":64}},{"value":"/ img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":41726,"byte_end":41775,"line_start":308,"line_end":308,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":42416,"byte_end":42423,"line_start":329,"line_end":329,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I, J>(&mut I, &J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":42343,"byte_end":42408,"line_start":328,"line_end":328,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":830},{"krate":0,"index":913},{"krate":0,"index":6160},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6173},{"krate":0,"index":916},{"krate":0,"index":6176},{"krate":0,"index":6181},{"krate":0,"index":6183},{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6188},{"krate":0,"index":6189},{"krate":0,"index":6192},{"krate":0,"index":918},{"krate":0,"index":920}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"/ Input and output of images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108225,"byte_end":108256,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":114013,"byte_end":114017,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader.","sig":null,"attributes":[{"value":"/ Create a new image from a Reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113666,"byte_end":113703,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113704,"byte_end":113707,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113708,"byte_end":113776,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113777,"byte_end":113836,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113837,"byte_end":113840,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113841,"byte_end":113887,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113888,"byte_end":113891,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113892,"byte_end":113933,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":113934,"byte_end":113960,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":114193,"byte_end":114199,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Result","qualname":"::io::free_functions::DecoderVisitor::Result","value":"type Result;","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":123596,"byte_end":123608,"line_start":285,"line_end":285,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":123335,"byte_end":123375,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":123376,"byte_end":123379,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":123380,"byte_end":123473,"line_start":282,"line_end":282,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":123474,"byte_end":123516,"line_start":283,"line_end":283,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":123517,"byte_end":123588,"line_start":284,"line_end":284,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126104,"byte_end":126110,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124362,"byte_end":124394,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124395,"byte_end":124398,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124399,"byte_end":124492,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124493,"byte_end":124588,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124589,"byte_end":124592,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124593,"byte_end":124605,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124606,"byte_end":124609,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124610,"byte_end":124708,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124709,"byte_end":124806,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124807,"byte_end":124810,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124811,"byte_end":124824,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124825,"byte_end":124853,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124854,"byte_end":124882,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124883,"byte_end":124926,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124927,"byte_end":124977,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124978,"byte_end":124997,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":124998,"byte_end":125012,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125013,"byte_end":125020,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125021,"byte_end":125024,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125025,"byte_end":125118,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125119,"byte_end":125215,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125216,"byte_end":125315,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125316,"byte_end":125319,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125320,"byte_end":125327,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125328,"byte_end":125356,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125357,"byte_end":125385,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125386,"byte_end":125429,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125430,"byte_end":125454,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125455,"byte_end":125482,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125483,"byte_end":125486,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125487,"byte_end":125517,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125518,"byte_end":125532,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125533,"byte_end":125548,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125549,"byte_end":125552,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125553,"byte_end":125608,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125609,"byte_end":125639,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125640,"byte_end":125681,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125682,"byte_end":125738,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125739,"byte_end":125742,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"pnm\")]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125743,"byte_end":125772,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125773,"byte_end":125806,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125807,"byte_end":125821,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125822,"byte_end":125829,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125830,"byte_end":125833,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125834,"byte_end":125932,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":125933,"byte_end":126000,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126001,"byte_end":126004,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126005,"byte_end":126043,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126044,"byte_end":126092,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126847,"byte_end":126850,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126345,"byte_end":126399,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126404,"byte_end":126407,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126412,"byte_end":126480,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126485,"byte_end":126544,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126549,"byte_end":126552,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126557,"byte_end":126640,"line_start":76,"line_end":76,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126645,"byte_end":126724,"line_start":77,"line_end":77,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126729,"byte_end":126732,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126737,"byte_end":126793,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126798,"byte_end":126835,"line_start":80,"line_end":80,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127229,"byte_end":127240,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"pub fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127027,"byte_end":127072,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127077,"byte_end":127080,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127085,"byte_end":127153,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127158,"byte_end":127217,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127498,"byte_end":127504,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127446,"byte_end":127486,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127639,"byte_end":127649,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"pub fn set_format(&mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127568,"byte_end":127627,"line_start":106,"line_end":106,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127979,"byte_end":127991,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"pub fn clear_format(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127731,"byte_end":127786,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127791,"byte_end":127794,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127799,"byte_end":127893,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":127898,"byte_end":127967,"line_start":114,"line_end":114,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128088,"byte_end":128097,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Reader<R>>::no_limits","value":"pub fn no_limits(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disable all decoding limits.\n","sig":null,"attributes":[{"value":"/ Disable all decoding limits.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128044,"byte_end":128076,"line_start":119,"line_end":119,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128224,"byte_end":128230,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"limits","qualname":"<Reader<R>>::limits","value":"pub fn limits(&mut Self, super::Limits)","parent":null,"children":[],"decl_id":null,"docs":" Set a custom set of decoding limits.\n","sig":null,"attributes":[{"value":"/ Set a custom set of decoding limits.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128172,"byte_end":128212,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128342,"byte_end":128352,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128308,"byte_end":128330,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128835,"byte_end":128839,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"pub fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128429,"byte_end":128487,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128492,"byte_end":128495,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128500,"byte_end":128562,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128567,"byte_end":128570,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128575,"byte_end":128669,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128674,"byte_end":128754,"line_start":141,"line_end":141,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128759,"byte_end":128762,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128767,"byte_end":128823,"line_start":143,"line_end":143,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130519,"byte_end":130538,"line_start":189,"line_end":189,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"pub fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129245,"byte_end":129315,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129320,"byte_end":129323,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129328,"byte_end":129417,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129422,"byte_end":129512,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129517,"byte_end":129567,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129572,"byte_end":129575,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129580,"byte_end":129672,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129677,"byte_end":129765,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129770,"byte_end":129798,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129803,"byte_end":129806,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129811,"byte_end":129902,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129907,"byte_end":129946,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129951,"byte_end":129954,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129959,"byte_end":129971,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129976,"byte_end":129979,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129984,"byte_end":130092,"line_start":176,"line_end":176,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130097,"byte_end":130189,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130194,"byte_end":130225,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130230,"byte_end":130233,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130238,"byte_end":130251,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130256,"byte_end":130284,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130289,"byte_end":130317,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130322,"byte_end":130365,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130370,"byte_end":130416,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130421,"byte_end":130452,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130457,"byte_end":130476,"line_start":186,"line_end":186,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130481,"byte_end":130495,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":130500,"byte_end":130507,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131506,"byte_end":131521,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"pub fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131293,"byte_end":131323,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131328,"byte_end":131331,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131336,"byte_end":131411,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131416,"byte_end":131419,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131424,"byte_end":131494,"line_start":215,"line_end":215,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131915,"byte_end":131921,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"pub fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131695,"byte_end":131732,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131737,"byte_end":131740,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131745,"byte_end":131820,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131825,"byte_end":131828,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":131833,"byte_end":131903,"line_start":225,"line_end":225,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6160},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108524,"byte_end":108536,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"LimitSupport","qualname":"::io::LimitSupport","value":"LimitSupport {  }","parent":null,"children":[{"krate":0,"index":6161}],"decl_id":null,"docs":" Set of supported strict limits for a decoder.\n","sig":null,"attributes":[{"value":"/ Set of supported strict limits for a decoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108379,"byte_end":108428,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108474,"byte_end":108512,"line_start":12,"line_end":12,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110079,"byte_end":110085,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Limits","qualname":"::io::Limits","value":"Limits { max_image_width, max_image_height, max_alloc }","parent":null,"children":[{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180}],"decl_id":null,"docs":" Resource limits for decoding.","sig":null,"attributes":[{"value":"/ Resource limits for decoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108709,"byte_end":108742,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108743,"byte_end":108746,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Limits can be either *strict* or *non-strict*. Non-strict limits are best-effort","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108747,"byte_end":108831,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ limits where the library does not guarantee that limit will not be exceeded. Do note","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108832,"byte_end":108920,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ that it is still considered a bug if a non-strict limit is exceeded, however as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108921,"byte_end":109004,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/ some of the underlying decoders do not support not support such limits one cannot","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109005,"byte_end":109090,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/ rely on these limits being supported. For stric limits the library makes a stronger","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109091,"byte_end":109178,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/ guarantee that the limit will not be exceeded. Exceeding a strict limit is considered","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109179,"byte_end":109268,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ a critical bug. If a decoder cannot guarantee that it will uphold a strict limit it","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109269,"byte_end":109356,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ *must* fail with `image::error::LimitErrorKind::Unsupported`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109357,"byte_end":109422,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109423,"byte_end":109426,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Currently the only strict limits supported are the `max_image_width` and `max_image_height`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109427,"byte_end":109522,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ limits, however more will be added in the future. [`LimitSupport`] will default to support","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109523,"byte_end":109617,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ being false and decoders should enable support for the limits they support in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109618,"byte_end":109699,"line_start":38,"line_end":38,"column_start":1,"column_end":82}},{"value":"/ [`ImageDecoder::set_limits`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109700,"byte_end":109733,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109734,"byte_end":109737,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The limit check should only ever fail if a limit will be exceeded or an unsupported strict","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109738,"byte_end":109832,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ limit is used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109833,"byte_end":109851,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109852,"byte_end":109855,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`LimitSupport`]: ./struct.LimitSupport.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109856,"byte_end":109904,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/ [`ImageDecoder::set_limits`]: ../trait.ImageDecoder.html#method.set_limits","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":109905,"byte_end":109983,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110029,"byte_end":110067,"line_start":47,"line_end":47,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110184,"byte_end":110199,"line_start":50,"line_end":50,"column_start":9,"column_end":24},"name":"max_image_width","qualname":"::io::Limits::max_image_width","value":"std::option::Option<u32>","parent":{"krate":0,"index":6176},"children":[],"decl_id":null,"docs":" The maximum allowed image width. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image width. This limit is strict. The default is no limit.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110092,"byte_end":110175,"line_start":49,"line_end":49,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":6178},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110311,"byte_end":110327,"line_start":52,"line_end":52,"column_start":9,"column_end":25},"name":"max_image_height","qualname":"::io::Limits::max_image_height","value":"std::option::Option<u32>","parent":{"krate":0,"index":6176},"children":[],"decl_id":null,"docs":" The maximum allowed image height. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image height. This limit is strict. The default is no limit.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110218,"byte_end":110302,"line_start":51,"line_end":51,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":6179},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110575,"byte_end":110584,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"name":"max_alloc","qualname":"::io::Limits::max_alloc","value":"std::option::Option<u64>","parent":{"krate":0,"index":6176},"children":[],"decl_id":null,"docs":" The maximum allowed sum of allocations allocated by the decoder at any one time exluding\n allocator overhead. This limit is non-strict by default and some decoders may ignore it.\n The default is 512MiB.\n","sig":null,"attributes":[{"value":"/ The maximum allowed sum of allocations allocated by the decoder at any one time exluding","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110346,"byte_end":110438,"line_start":53,"line_end":53,"column_start":5,"column_end":97}},{"value":"/ allocator overhead. This limit is non-strict by default and some decoders may ignore it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110443,"byte_end":110535,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/ The default is 512MiB.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110540,"byte_end":110566,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110923,"byte_end":110932,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Limits>::no_limits","value":"pub fn no_limits() -> Limits","parent":null,"children":[],"decl_id":null,"docs":" Disable all limits.\n","sig":null,"attributes":[{"value":"/ Disable all limits.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110888,"byte_end":110911,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":111206,"byte_end":111219,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"check_support","qualname":"<Limits>::check_support","value":"pub fn check_support(&Self, &LimitSupport) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that all currently set strict limits are supported.\n","sig":null,"attributes":[{"value":"/ This function checks that all currently set strict limits are supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":111118,"byte_end":111194,"line_start":82,"line_end":82,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":111431,"byte_end":111447,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"check_dimensions","qualname":"<Limits>::check_dimensions","value":"pub fn check_dimensions(&Self, u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks the `max_image_width` and `max_image_height` limits given\n the image width and height.\n","sig":null,"attributes":[{"value":"/ This function checks the `max_image_width` and `max_image_height` limits given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":111301,"byte_end":111383,"line_start":87,"line_end":87,"column_start":5,"column_end":87}},{"value":"/ the image width and height.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":111388,"byte_end":111419,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112227,"byte_end":112234,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Limits>::reserve","value":"pub fn reserve(&mut Self, u64) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that the current limit allows for reserving the set amount\n of bytes, it then reduces the limit accordingly.\n","sig":null,"attributes":[{"value":"/ This function checks that the current limit allows for reserving the set amount","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112075,"byte_end":112158,"line_start":109,"line_end":109,"column_start":5,"column_end":88}},{"value":"/ of bytes, it then reduces the limit accordingly.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112163,"byte_end":112215,"line_start":110,"line_end":110,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112796,"byte_end":112800,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"free","qualname":"<Limits>::free","value":"pub fn free(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" This function increases the `max_alloc` limit with amount. Should only be used\n togheter with [`reserve`].","sig":null,"attributes":[{"value":"/ This function increases the `max_alloc` limit with amount. Should only be used","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112622,"byte_end":112704,"line_start":125,"line_end":125,"column_start":5,"column_end":87}},{"value":"/ togheter with [`reserve`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112709,"byte_end":112739,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112744,"byte_end":112747,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":112752,"byte_end":112784,"line_start":128,"line_end":128,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":6195},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":6213},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6218},{"krate":0,"index":6219},{"krate":0,"index":6222},{"krate":0,"index":6223},{"krate":0,"index":6225},{"krate":0,"index":6228},{"krate":0,"index":6232},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6244},{"krate":0,"index":6246},{"krate":0,"index":995},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1064},{"krate":0,"index":6248},{"krate":0,"index":6253},{"krate":0,"index":6257},{"krate":0,"index":6261},{"krate":0,"index":6266},{"krate":0,"index":6270},{"krate":0,"index":6274},{"krate":0,"index":6283},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":6309},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6314},{"krate":0,"index":6315},{"krate":0,"index":6317},{"krate":0,"index":6318},{"krate":0,"index":6320},{"krate":0,"index":1069},{"krate":0,"index":1082},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1101},{"krate":0,"index":1105},{"krate":0,"index":1115},{"krate":0,"index":1125},{"krate":0,"index":1131},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1139}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"/ Image representations for ffi.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132407,"byte_end":132441,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132442,"byte_end":132445,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132446,"byte_end":132457,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132458,"byte_end":132461,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132462,"byte_end":132560,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132561,"byte_end":132660,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ to help you transition from raw memory data to Rust representation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132661,"byte_end":132732,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132733,"byte_end":132736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132737,"byte_end":132750,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ use std::ptr;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132751,"byte_end":132768,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ use std::slice;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132769,"byte_end":132788,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ use image::Rgb;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132789,"byte_end":132808,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132809,"byte_end":132858,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ use image::imageops::thumbnail;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132859,"byte_end":132894,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132895,"byte_end":132898,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ #[no_mangle]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132899,"byte_end":132915,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132916,"byte_end":132960,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/     data: *const u8, len: usize,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132961,"byte_end":132997,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     layout: *const SampleLayout","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":132998,"byte_end":133033,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/ )","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133034,"byte_end":133039,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/     -> bool","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133040,"byte_end":133055,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133056,"byte_end":133061,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133062,"byte_end":133128,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133129,"byte_end":133179,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133180,"byte_end":133183,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let buffer = FlatSamples {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133184,"byte_end":133218,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         samples,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133219,"byte_end":133239,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/         layout,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133240,"byte_end":133259,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/         color_hint: None,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133260,"byte_end":133289,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133290,"byte_end":133300,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133301,"byte_end":133304,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133305,"byte_end":133359,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/         Err(_) => return false, // Invalid layout.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133360,"byte_end":133414,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/         Ok(view) => view,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133415,"byte_end":133444,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133445,"byte_end":133455,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133456,"byte_end":133459,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     thumbnail(&view, 64, 64)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133460,"byte_end":133492,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         .save(\"output.png\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133493,"byte_end":133524,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/         .map(|_| true)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133525,"byte_end":133551,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/         .unwrap_or_else(|_| false)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133552,"byte_end":133590,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133591,"byte_end":133596,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133597,"byte_end":133604,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":133605,"byte_end":133608,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135619,"byte_end":135630,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134036,"byte_end":134083,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134084,"byte_end":134087,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134088,"byte_end":134185,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134186,"byte_end":134283,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134284,"byte_end":134380,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134381,"byte_end":134469,"line_start":64,"line_end":64,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134470,"byte_end":134569,"line_start":65,"line_end":65,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134570,"byte_end":134668,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134669,"byte_end":134718,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134719,"byte_end":134722,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134723,"byte_end":134814,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134815,"byte_end":134912,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":134913,"byte_end":135010,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135011,"byte_end":135108,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135109,"byte_end":135170,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135171,"byte_end":135174,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135175,"byte_end":135223,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135224,"byte_end":135280,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135281,"byte_end":135368,"line_start":77,"line_end":77,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135369,"byte_end":135405,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135406,"byte_end":135462,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135463,"byte_end":135495,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135496,"byte_end":135536,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135537,"byte_end":135583,"line_start":82,"line_end":82,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6197},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135708,"byte_end":135715,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135645,"byte_end":135699,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6198},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135799,"byte_end":135805,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135730,"byte_end":135790,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6199},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136260,"byte_end":136270,"line_start":97,"line_end":97,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135826,"byte_end":135862,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135867,"byte_end":135870,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135875,"byte_end":135960,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":135965,"byte_end":136057,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136062,"byte_end":136151,"line_start":95,"line_end":95,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136156,"byte_end":136251,"line_start":96,"line_end":96,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6206},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136420,"byte_end":136432,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136294,"byte_end":136346,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136347,"byte_end":136357,"line_start":101,"line_end":101,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136516,"byte_end":136524,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136439,"byte_end":136507,"line_start":104,"line_end":104,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136610,"byte_end":136624,"line_start":108,"line_end":108,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136535,"byte_end":136601,"line_start":107,"line_end":107,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":6209},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136686,"byte_end":136691,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136638,"byte_end":136677,"line_start":110,"line_end":110,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136778,"byte_end":136790,"line_start":114,"line_end":114,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136703,"byte_end":136769,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":6211},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136853,"byte_end":136859,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136804,"byte_end":136844,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6212},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136946,"byte_end":136959,"line_start":120,"line_end":120,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":136871,"byte_end":136937,"line_start":119,"line_end":119,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137934,"byte_end":137950,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"pub fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137140,"byte_end":137196,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137201,"byte_end":137204,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137209,"byte_end":137304,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137309,"byte_end":137378,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137383,"byte_end":137386,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137391,"byte_end":137398,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137403,"byte_end":137453,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137458,"byte_end":137519,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137524,"byte_end":137582,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137587,"byte_end":137594,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137599,"byte_end":137602,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137607,"byte_end":137619,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137624,"byte_end":137627,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137632,"byte_end":137727,"line_start":141,"line_end":141,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137732,"byte_end":137823,"line_start":142,"line_end":142,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137828,"byte_end":137922,"line_start":143,"line_end":143,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139211,"byte_end":139230,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"pub fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138398,"byte_end":138457,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138462,"byte_end":138465,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138470,"byte_end":138560,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138565,"byte_end":138650,"line_start":161,"line_end":161,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138655,"byte_end":138658,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138663,"byte_end":138670,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138675,"byte_end":138725,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138730,"byte_end":138794,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138799,"byte_end":138860,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138865,"byte_end":138872,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138877,"byte_end":138880,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138885,"byte_end":138897,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138902,"byte_end":138905,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":138910,"byte_end":139005,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139010,"byte_end":139100,"line_start":172,"line_end":172,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139105,"byte_end":139199,"line_start":173,"line_end":173,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139856,"byte_end":139867,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139681,"byte_end":139740,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139745,"byte_end":139748,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139753,"byte_end":139824,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139829,"byte_end":139844,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140184,"byte_end":140191,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":139982,"byte_end":140033,"line_start":196,"line_end":196,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140038,"byte_end":140041,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140046,"byte_end":140139,"line_start":198,"line_end":198,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140144,"byte_end":140172,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140612,"byte_end":140618,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140360,"byte_end":140414,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140419,"byte_end":140422,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140427,"byte_end":140517,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140522,"byte_end":140600,"line_start":211,"line_end":211,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142771,"byte_end":142781,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140706,"byte_end":140796,"line_start":216,"line_end":216,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140801,"byte_end":140804,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140809,"byte_end":140904,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":140909,"byte_end":140999,"line_start":219,"line_end":219,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141004,"byte_end":141095,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141100,"byte_end":141157,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141162,"byte_end":141165,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141170,"byte_end":141187,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141192,"byte_end":141195,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141200,"byte_end":141284,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141289,"byte_end":141380,"line_start":226,"line_end":226,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141385,"byte_end":141388,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141393,"byte_end":141418,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141423,"byte_end":141426,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141431,"byte_end":141485,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141490,"byte_end":141514,"line_start":231,"line_end":231,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141519,"byte_end":141536,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141541,"byte_end":141566,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141571,"byte_end":141589,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141594,"byte_end":141597,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141602,"byte_end":141613,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141618,"byte_end":141641,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141646,"byte_end":141665,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141670,"byte_end":141712,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141717,"byte_end":141724,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141729,"byte_end":141732,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141737,"byte_end":141829,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141834,"byte_end":141924,"line_start":243,"line_end":243,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141929,"byte_end":141932,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141937,"byte_end":141965,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141970,"byte_end":141973,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":141978,"byte_end":142070,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142075,"byte_end":142169,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142174,"byte_end":142229,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142234,"byte_end":142237,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142242,"byte_end":142266,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142271,"byte_end":142288,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142293,"byte_end":142318,"line_start":253,"line_end":253,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142323,"byte_end":142341,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142346,"byte_end":142349,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142354,"byte_end":142365,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142370,"byte_end":142386,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142391,"byte_end":142410,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142415,"byte_end":142438,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142443,"byte_end":142472,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142477,"byte_end":142512,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142517,"byte_end":142524,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142529,"byte_end":142532,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142537,"byte_end":142631,"line_start":264,"line_end":264,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142636,"byte_end":142729,"line_start":265,"line_end":265,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":142734,"byte_end":142759,"line_start":266,"line_end":266,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":143114,"byte_end":143118,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":143048,"byte_end":143102,"line_start":276,"line_end":276,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":144238,"byte_end":144257,"line_start":303,"line_end":303,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":143888,"byte_end":143937,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":143942,"byte_end":143945,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":143950,"byte_end":144043,"line_start":300,"line_end":300,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":144048,"byte_end":144142,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":144147,"byte_end":144226,"line_start":302,"line_end":302,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145502,"byte_end":145511,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":144992,"byte_end":145057,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145062,"byte_end":145065,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145070,"byte_end":145163,"line_start":328,"line_end":328,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145168,"byte_end":145263,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145268,"byte_end":145360,"line_start":330,"line_end":330,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145365,"byte_end":145459,"line_start":331,"line_end":331,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":145464,"byte_end":145490,"line_start":332,"line_end":332,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147212,"byte_end":147221,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":146870,"byte_end":146931,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":146936,"byte_end":146939,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":146944,"byte_end":147033,"line_start":385,"line_end":385,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147038,"byte_end":147132,"line_start":386,"line_end":386,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147137,"byte_end":147200,"line_start":387,"line_end":387,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147495,"byte_end":147500,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147348,"byte_end":147393,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147398,"byte_end":147401,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147406,"byte_end":147483,"line_start":394,"line_end":394,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":148095,"byte_end":148116,"line_start":408,"line_end":408,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147724,"byte_end":147783,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147788,"byte_end":147791,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147796,"byte_end":147885,"line_start":405,"line_end":405,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147890,"byte_end":147984,"line_start":406,"line_end":406,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":147989,"byte_end":148083,"line_start":407,"line_end":407,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149047,"byte_end":149062,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":148746,"byte_end":148786,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":148791,"byte_end":148794,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":148799,"byte_end":148891,"line_start":426,"line_end":426,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":148896,"byte_end":148991,"line_start":427,"line_end":427,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":148996,"byte_end":149035,"line_start":428,"line_end":428,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149589,"byte_end":149598,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149264,"byte_end":149329,"line_start":434,"line_end":434,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149334,"byte_end":149337,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149342,"byte_end":149430,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149435,"byte_end":149530,"line_start":437,"line_end":437,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149535,"byte_end":149577,"line_start":438,"line_end":438,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150273,"byte_end":150284,"line_start":466,"line_end":466,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150098,"byte_end":150157,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150162,"byte_end":150165,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150170,"byte_end":150241,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150246,"byte_end":150261,"line_start":465,"line_end":465,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150566,"byte_end":150573,"line_start":474,"line_end":474,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150364,"byte_end":150415,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150420,"byte_end":150423,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150428,"byte_end":150521,"line_start":472,"line_end":472,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150526,"byte_end":150554,"line_start":473,"line_end":473,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150901,"byte_end":150907,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150649,"byte_end":150703,"line_start":478,"line_end":478,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150708,"byte_end":150711,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150716,"byte_end":150806,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150811,"byte_end":150889,"line_start":481,"line_end":481,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151021,"byte_end":151027,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"pub fn as_ref<T>(&Self) -> FlatSamples<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150975,"byte_end":151009,"line_start":486,"line_end":486,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151318,"byte_end":151324,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"pub fn as_mut<T>(&mut Self) -> FlatSamples<&mut [T]> where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151264,"byte_end":151306,"line_start":498,"line_end":498,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151620,"byte_end":151626,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"pub fn to_vec<T>(&Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151569,"byte_end":151608,"line_start":510,"line_end":510,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152912,"byte_end":152922,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"pub fn get_sample<T>(&Self, u8, u32, u32) -> Option<&T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151892,"byte_end":151931,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151936,"byte_end":151939,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":151944,"byte_end":152039,"line_start":525,"line_end":525,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152044,"byte_end":152122,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152127,"byte_end":152130,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152135,"byte_end":152142,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152147,"byte_end":152175,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152180,"byte_end":152239,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152244,"byte_end":152247,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152252,"byte_end":152292,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152297,"byte_end":152347,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152352,"byte_end":152355,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152360,"byte_end":152393,"line_start":535,"line_end":535,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152398,"byte_end":152448,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152453,"byte_end":152460,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152465,"byte_end":152468,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152473,"byte_end":152563,"line_start":539,"line_end":539,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152568,"byte_end":152649,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152654,"byte_end":152749,"line_start":541,"line_end":541,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152754,"byte_end":152841,"line_start":542,"line_end":542,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":152846,"byte_end":152900,"line_start":543,"line_end":543,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154535,"byte_end":154549,"line_start":578,"line_end":578,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"pub fn get_mut_sample<T>(&mut Self, u8, u32, u32) -> Option<&mut T> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153125,"byte_end":153172,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153177,"byte_end":153180,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153185,"byte_end":153274,"line_start":554,"line_end":554,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153279,"byte_end":153366,"line_start":555,"line_end":555,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153371,"byte_end":153466,"line_start":556,"line_end":556,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153471,"byte_end":153534,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153539,"byte_end":153542,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153547,"byte_end":153641,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153646,"byte_end":153715,"line_start":560,"line_end":560,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153720,"byte_end":153723,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153728,"byte_end":153735,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153740,"byte_end":153768,"line_start":563,"line_end":563,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153773,"byte_end":153836,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153841,"byte_end":153844,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153849,"byte_end":153910,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153915,"byte_end":153966,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153971,"byte_end":153974,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":153979,"byte_end":154012,"line_start":569,"line_end":569,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154017,"byte_end":154071,"line_start":570,"line_end":570,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154076,"byte_end":154083,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154088,"byte_end":154091,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154096,"byte_end":154186,"line_start":573,"line_end":573,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154191,"byte_end":154272,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154277,"byte_end":154372,"line_start":575,"line_end":575,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154377,"byte_end":154464,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154469,"byte_end":154523,"line_start":577,"line_end":577,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":155217,"byte_end":155224,"line_start":594,"line_end":594,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"pub fn as_view<P>(&Self) -> Result<View<&[P::Subpixel], P>, Error> where\nP: PixelWithColorType, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154805,"byte_end":154862,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154867,"byte_end":154870,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154875,"byte_end":154965,"line_start":590,"line_end":590,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":154970,"byte_end":155064,"line_start":591,"line_end":591,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":155069,"byte_end":155163,"line_start":592,"line_end":592,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":155168,"byte_end":155205,"line_start":593,"line_end":593,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156828,"byte_end":156852,"line_start":633,"line_end":633,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"pub fn as_view_with_mut_samples<P>(&mut Self)\n-> Result<View<&mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":155863,"byte_end":155922,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":155927,"byte_end":155930,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":155935,"byte_end":156027,"line_start":620,"line_end":620,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156032,"byte_end":156123,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156128,"byte_end":156221,"line_start":622,"line_end":622,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156226,"byte_end":156257,"line_start":623,"line_end":623,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156262,"byte_end":156265,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156270,"byte_end":156360,"line_start":625,"line_end":625,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156365,"byte_end":156459,"line_start":626,"line_end":626,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156464,"byte_end":156558,"line_start":627,"line_end":627,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156563,"byte_end":156600,"line_start":628,"line_end":628,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156605,"byte_end":156608,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156613,"byte_end":156707,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156712,"byte_end":156798,"line_start":631,"line_end":631,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":156803,"byte_end":156816,"line_start":632,"line_end":632,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":158242,"byte_end":158253,"line_start":668,"line_end":668,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"pub fn as_view_mut<P>(&mut Self)\n-> Result<ViewMut<&mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157499,"byte_end":157544,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157549,"byte_end":157552,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157557,"byte_end":157647,"line_start":659,"line_end":659,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157652,"byte_end":157739,"line_start":660,"line_end":660,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157744,"byte_end":157811,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157816,"byte_end":157819,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157824,"byte_end":157919,"line_start":663,"line_end":663,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":157924,"byte_end":158017,"line_start":664,"line_end":664,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":158022,"byte_end":158117,"line_start":665,"line_end":665,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":158122,"byte_end":158197,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":158202,"byte_end":158230,"line_start":667,"line_end":667,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159278,"byte_end":159286,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"pub fn as_slice<T>(&Self) -> &[T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159054,"byte_end":159086,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159091,"byte_end":159094,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159099,"byte_end":159191,"line_start":698,"line_end":698,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159196,"byte_end":159266,"line_start":699,"line_end":699,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159614,"byte_end":159626,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"pub fn as_mut_slice<T>(&mut Self) -> &mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159390,"byte_end":159422,"line_start":707,"line_end":707,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159427,"byte_end":159430,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159435,"byte_end":159527,"line_start":709,"line_end":709,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159532,"byte_end":159602,"line_start":710,"line_end":710,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160074,"byte_end":160085,"line_start":723,"line_end":723,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"pub fn image_slice<T>(&Self) -> Option<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159738,"byte_end":159800,"line_start":718,"line_end":718,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159805,"byte_end":159808,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159813,"byte_end":159908,"line_start":720,"line_end":720,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":159913,"byte_end":160008,"line_start":721,"line_end":721,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160013,"byte_end":160062,"line_start":722,"line_end":722,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160520,"byte_end":160535,"line_start":741,"line_end":741,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"pub fn image_mut_slice<T>(&mut Self) -> Option<&mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160449,"byte_end":160508,"line_start":740,"line_end":740,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":161207,"byte_end":161222,"line_start":763,"line_end":763,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"pub fn try_into_buffer<P>(Self)\n-> Result<ImageBuffer<P, Buffer>, (Error, Self)> where P: PixelWithColorType +\n'static, P::Subpixel: 'static, Buffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160911,"byte_end":160950,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160955,"byte_end":160958,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":160963,"byte_end":161059,"line_start":760,"line_end":760,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":161064,"byte_end":161159,"line_start":761,"line_end":761,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":161164,"byte_end":161195,"line_start":762,"line_end":762,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164142,"byte_end":164152,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162077,"byte_end":162167,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162172,"byte_end":162175,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162180,"byte_end":162275,"line_start":791,"line_end":791,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162280,"byte_end":162370,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162375,"byte_end":162466,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162471,"byte_end":162528,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162533,"byte_end":162536,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162541,"byte_end":162558,"line_start":796,"line_end":796,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162563,"byte_end":162566,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162571,"byte_end":162655,"line_start":798,"line_end":798,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162660,"byte_end":162751,"line_start":799,"line_end":799,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162756,"byte_end":162759,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162764,"byte_end":162789,"line_start":801,"line_end":801,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162794,"byte_end":162797,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162802,"byte_end":162856,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162861,"byte_end":162885,"line_start":804,"line_end":804,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162890,"byte_end":162907,"line_start":805,"line_end":805,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162912,"byte_end":162937,"line_start":806,"line_end":806,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162942,"byte_end":162960,"line_start":807,"line_end":807,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162965,"byte_end":162968,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162973,"byte_end":162984,"line_start":809,"line_end":809,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":162989,"byte_end":163012,"line_start":810,"line_end":810,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163017,"byte_end":163036,"line_start":811,"line_end":811,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163041,"byte_end":163083,"line_start":812,"line_end":812,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163088,"byte_end":163095,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163100,"byte_end":163103,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163108,"byte_end":163200,"line_start":815,"line_end":815,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163205,"byte_end":163295,"line_start":816,"line_end":816,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163300,"byte_end":163303,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163308,"byte_end":163336,"line_start":818,"line_end":818,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163341,"byte_end":163344,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163349,"byte_end":163441,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163446,"byte_end":163540,"line_start":821,"line_end":821,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163545,"byte_end":163600,"line_start":822,"line_end":822,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163605,"byte_end":163608,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163613,"byte_end":163637,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163642,"byte_end":163659,"line_start":825,"line_end":825,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163664,"byte_end":163689,"line_start":826,"line_end":826,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163694,"byte_end":163712,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163717,"byte_end":163720,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163725,"byte_end":163736,"line_start":829,"line_end":829,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163741,"byte_end":163757,"line_start":830,"line_end":830,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163762,"byte_end":163781,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163786,"byte_end":163809,"line_start":832,"line_end":832,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163814,"byte_end":163843,"line_start":833,"line_end":833,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163848,"byte_end":163883,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163888,"byte_end":163895,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163900,"byte_end":163903,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":163908,"byte_end":164002,"line_start":837,"line_end":837,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164007,"byte_end":164100,"line_start":838,"line_end":838,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164105,"byte_end":164130,"line_start":839,"line_end":839,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164289,"byte_end":164293,"line_start":845,"line_end":845,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164223,"byte_end":164277,"line_start":844,"line_end":844,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164714,"byte_end":164733,"line_start":854,"line_end":854,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164364,"byte_end":164413,"line_start":849,"line_end":849,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164418,"byte_end":164421,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164426,"byte_end":164519,"line_start":851,"line_end":851,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164524,"byte_end":164618,"line_start":852,"line_end":852,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164623,"byte_end":164702,"line_start":853,"line_end":853,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165314,"byte_end":165323,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164804,"byte_end":164869,"line_start":858,"line_end":858,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164874,"byte_end":164877,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164882,"byte_end":164975,"line_start":860,"line_end":860,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":164980,"byte_end":165075,"line_start":861,"line_end":861,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165080,"byte_end":165172,"line_start":862,"line_end":862,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165177,"byte_end":165271,"line_start":863,"line_end":863,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165276,"byte_end":165302,"line_start":864,"line_end":864,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165748,"byte_end":165757,"line_start":874,"line_end":874,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165406,"byte_end":165467,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165472,"byte_end":165475,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165480,"byte_end":165569,"line_start":871,"line_end":871,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165574,"byte_end":165668,"line_start":872,"line_end":872,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165673,"byte_end":165736,"line_start":873,"line_end":873,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166007,"byte_end":166012,"line_start":881,"line_end":881,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165860,"byte_end":165905,"line_start":878,"line_end":878,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165910,"byte_end":165913,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":165918,"byte_end":165995,"line_start":880,"line_end":880,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166491,"byte_end":166512,"line_start":890,"line_end":890,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166120,"byte_end":166179,"line_start":885,"line_end":885,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166184,"byte_end":166187,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166192,"byte_end":166281,"line_start":887,"line_end":887,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166286,"byte_end":166380,"line_start":888,"line_end":888,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166385,"byte_end":166479,"line_start":889,"line_end":889,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166944,"byte_end":166959,"line_start":899,"line_end":899,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166643,"byte_end":166683,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166688,"byte_end":166691,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166696,"byte_end":166788,"line_start":896,"line_end":896,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166793,"byte_end":166888,"line_start":897,"line_end":897,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":166893,"byte_end":166932,"line_start":898,"line_end":898,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167394,"byte_end":167403,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167069,"byte_end":167134,"line_start":903,"line_end":903,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167139,"byte_end":167142,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167147,"byte_end":167235,"line_start":905,"line_end":905,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167240,"byte_end":167335,"line_start":906,"line_end":906,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167340,"byte_end":167382,"line_start":907,"line_end":907,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168289,"byte_end":168303,"line_start":934,"line_end":934,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"pub fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: crate::Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167577,"byte_end":167626,"line_start":914,"line_end":914,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167631,"byte_end":167634,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167639,"byte_end":167734,"line_start":916,"line_end":916,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167739,"byte_end":167800,"line_start":917,"line_end":917,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167805,"byte_end":167808,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167813,"byte_end":167828,"line_start":919,"line_end":919,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167833,"byte_end":167836,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167841,"byte_end":167848,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167853,"byte_end":167889,"line_start":922,"line_end":922,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167894,"byte_end":167958,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167963,"byte_end":167966,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167971,"byte_end":168010,"line_start":925,"line_end":925,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168015,"byte_end":168080,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168085,"byte_end":168088,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168093,"byte_end":168137,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168142,"byte_end":168174,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168179,"byte_end":168182,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168187,"byte_end":168210,"line_start":931,"line_end":931,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168215,"byte_end":168265,"line_start":932,"line_end":932,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168270,"byte_end":168277,"line_start":933,"line_end":933,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6248},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169630,"byte_end":169634,"line_start":971,"line_end":971,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":6251},{"krate":0,"index":6252}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168928,"byte_end":168980,"line_start":956,"line_end":956,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168981,"byte_end":168984,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":168985,"byte_end":169083,"line_start":958,"line_end":958,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169084,"byte_end":169133,"line_start":959,"line_end":959,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169134,"byte_end":169137,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169138,"byte_end":169236,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169237,"byte_end":169336,"line_start":962,"line_end":962,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169337,"byte_end":169407,"line_start":963,"line_end":963,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169408,"byte_end":169411,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169412,"byte_end":169434,"line_start":965,"line_end":965,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169435,"byte_end":169438,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169439,"byte_end":169522,"line_start":967,"line_end":967,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169523,"byte_end":169590,"line_start":968,"line_end":968,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169591,"byte_end":169594,"line_start":969,"line_end":969,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6261},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170481,"byte_end":170488,"line_start":994,"line_end":994,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":6264},{"krate":0,"index":6265}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169759,"byte_end":169805,"line_start":979,"line_end":979,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169806,"byte_end":169809,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169810,"byte_end":169907,"line_start":981,"line_end":981,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":169908,"byte_end":170006,"line_start":982,"line_end":982,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170007,"byte_end":170104,"line_start":983,"line_end":983,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170105,"byte_end":170146,"line_start":984,"line_end":984,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170147,"byte_end":170150,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170151,"byte_end":170173,"line_start":986,"line_end":986,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170174,"byte_end":170177,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170178,"byte_end":170261,"line_start":988,"line_end":988,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170262,"byte_end":170299,"line_start":989,"line_end":989,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170300,"byte_end":170373,"line_start":990,"line_end":990,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170374,"byte_end":170441,"line_start":991,"line_end":991,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170442,"byte_end":170445,"line_start":992,"line_end":992,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6275},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171197,"byte_end":171205,"line_start":1013,"line_end":1013,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171074,"byte_end":171114,"line_start":1010,"line_end":1010,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171119,"byte_end":171122,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171127,"byte_end":171192,"line_start":1012,"line_end":1012,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171362,"byte_end":171380,"line_start":1018,"line_end":1018,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171212,"byte_end":171270,"line_start":1015,"line_end":1015,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171275,"byte_end":171278,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171283,"byte_end":171357,"line_start":1017,"line_end":1017,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6280},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171989,"byte_end":171999,"line_start":1029,"line_end":1029,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171399,"byte_end":171452,"line_start":1020,"line_end":1020,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171457,"byte_end":171460,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171465,"byte_end":171556,"line_start":1022,"line_end":1022,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171561,"byte_end":171601,"line_start":1023,"line_end":1023,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171606,"byte_end":171609,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171614,"byte_end":171709,"line_start":1025,"line_end":1025,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171714,"byte_end":171805,"line_start":1026,"line_end":1026,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171810,"byte_end":171905,"line_start":1027,"line_end":1027,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171910,"byte_end":171984,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":6274},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":171062,"byte_end":171067,"line_start":1009,"line_end":1009,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"pub enum Error {\n    TooLarge,\n    NormalFormRequired(NormalForm),\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":6275},{"krate":0,"index":6277},{"krate":0,"index":6280}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170613,"byte_end":170694,"line_start":1002,"line_end":1002,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170695,"byte_end":170698,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170699,"byte_end":170772,"line_start":1004,"line_end":1004,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170773,"byte_end":170849,"line_start":1005,"line_end":1005,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170850,"byte_end":170927,"line_start":1006,"line_end":1006,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":170928,"byte_end":171001,"line_start":1007,"line_end":1007,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6299},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172498,"byte_end":172507,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172275,"byte_end":172304,"line_start":1038,"line_end":1038,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172309,"byte_end":172312,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172317,"byte_end":172400,"line_start":1040,"line_end":1040,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172405,"byte_end":172493,"line_start":1041,"line_end":1041,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6301},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172737,"byte_end":172748,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172514,"byte_end":172545,"line_start":1044,"line_end":1044,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172550,"byte_end":172553,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172558,"byte_end":172646,"line_start":1046,"line_end":1046,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172651,"byte_end":172732,"line_start":1047,"line_end":1047,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6303},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173032,"byte_end":173043,"line_start":1055,"line_end":1055,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172755,"byte_end":172782,"line_start":1050,"line_end":1050,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172787,"byte_end":172790,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172795,"byte_end":172888,"line_start":1052,"line_end":1052,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172893,"byte_end":172983,"line_start":1053,"line_end":1053,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172988,"byte_end":173027,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6305},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173253,"byte_end":173267,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173050,"byte_end":173115,"line_start":1057,"line_end":1057,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173120,"byte_end":173123,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173128,"byte_end":173221,"line_start":1059,"line_end":1059,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173226,"byte_end":173248,"line_start":1060,"line_end":1060,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6307},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173483,"byte_end":173500,"line_start":1067,"line_end":1067,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173274,"byte_end":173342,"line_start":1063,"line_end":1063,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173347,"byte_end":173350,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173355,"byte_end":173448,"line_start":1065,"line_end":1065,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173453,"byte_end":173478,"line_start":1066,"line_end":1066,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":6298},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172258,"byte_end":172268,"line_start":1037,"line_end":1037,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"pub enum NormalForm {\n    Unaliased,\n    PixelPacked,\n    ImagePacked,\n    RowMajorPacked,\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":6299},{"krate":0,"index":6301},{"krate":0,"index":6303},{"krate":0,"index":6305},{"krate":0,"index":6307}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172015,"byte_end":172053,"line_start":1032,"line_end":1032,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172054,"byte_end":172057,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172058,"byte_end":172157,"line_start":1034,"line_end":1034,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":172158,"byte_end":172197,"line_start":1035,"line_end":1035,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173709,"byte_end":173719,"line_start":1077,"line_end":1077,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173590,"byte_end":173621,"line_start":1074,"line_end":1074,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173626,"byte_end":173629,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173634,"byte_end":173697,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174202,"byte_end":174206,"line_start":1087,"line_end":1087,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173781,"byte_end":173832,"line_start":1081,"line_end":1081,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173837,"byte_end":173840,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173845,"byte_end":173934,"line_start":1083,"line_end":1083,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173939,"byte_end":174032,"line_start":1084,"line_end":1084,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174037,"byte_end":174124,"line_start":1085,"line_end":1085,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174129,"byte_end":174190,"line_start":1086,"line_end":1086,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174485,"byte_end":174492,"line_start":1095,"line_end":1095,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174271,"byte_end":174311,"line_start":1091,"line_end":1091,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174316,"byte_end":174319,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174324,"byte_end":174414,"line_start":1093,"line_end":1093,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174419,"byte_end":174473,"line_start":1094,"line_end":1094,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174811,"byte_end":174821,"line_start":1103,"line_end":1103,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174552,"byte_end":174614,"line_start":1099,"line_end":1099,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174619,"byte_end":174622,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174627,"byte_end":174717,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":174722,"byte_end":174799,"line_start":1102,"line_end":1102,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175696,"byte_end":175710,"line_start":1121,"line_end":1121,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>\nwhere Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175154,"byte_end":175224,"line_start":1113,"line_end":1113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175229,"byte_end":175232,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175237,"byte_end":175331,"line_start":1115,"line_end":1115,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175336,"byte_end":175431,"line_start":1116,"line_end":1116,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175436,"byte_end":175503,"line_start":1117,"line_end":1117,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175508,"byte_end":175511,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175516,"byte_end":175610,"line_start":1119,"line_end":1119,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":175615,"byte_end":175684,"line_start":1120,"line_end":1120,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176293,"byte_end":176303,"line_start":1137,"line_end":1137,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176111,"byte_end":176201,"line_start":1134,"line_end":1134,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176206,"byte_end":176209,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176214,"byte_end":176281,"line_start":1136,"line_end":1136,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176637,"byte_end":176648,"line_start":1145,"line_end":1145,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176374,"byte_end":176436,"line_start":1141,"line_end":1141,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176441,"byte_end":176444,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176449,"byte_end":176540,"line_start":1143,"line_end":1143,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176545,"byte_end":176625,"line_start":1144,"line_end":1144,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177105,"byte_end":177120,"line_start":1154,"line_end":1154,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176741,"byte_end":176811,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176816,"byte_end":176819,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176824,"byte_end":176918,"line_start":1151,"line_end":1151,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":176923,"byte_end":177019,"line_start":1152,"line_end":1152,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177024,"byte_end":177093,"line_start":1153,"line_end":1153,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177648,"byte_end":177657,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177318,"byte_end":177345,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177350,"byte_end":177353,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177358,"byte_end":177445,"line_start":1164,"line_end":1164,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177450,"byte_end":177543,"line_start":1165,"line_end":1165,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177548,"byte_end":177636,"line_start":1166,"line_end":1166,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178661,"byte_end":178672,"line_start":1190,"line_end":1190,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177812,"byte_end":177870,"line_start":1172,"line_end":1172,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177875,"byte_end":177878,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177883,"byte_end":177978,"line_start":1174,"line_end":1174,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":177983,"byte_end":178073,"line_start":1175,"line_end":1175,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178078,"byte_end":178166,"line_start":1176,"line_end":1176,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178171,"byte_end":178247,"line_start":1177,"line_end":1177,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178252,"byte_end":178255,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178260,"byte_end":178267,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178272,"byte_end":178298,"line_start":1180,"line_end":1180,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178303,"byte_end":178324,"line_start":1181,"line_end":1181,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178329,"byte_end":178394,"line_start":1182,"line_end":1182,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178399,"byte_end":178468,"line_start":1183,"line_end":1183,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178473,"byte_end":178476,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178481,"byte_end":178512,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178517,"byte_end":178520,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178525,"byte_end":178585,"line_start":1187,"line_end":1187,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178590,"byte_end":178637,"line_start":1188,"line_end":1188,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":178642,"byte_end":178649,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179320,"byte_end":179330,"line_start":1213,"line_end":1213,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179201,"byte_end":179232,"line_start":1210,"line_end":1210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179237,"byte_end":179240,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179245,"byte_end":179308,"line_start":1212,"line_end":1212,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179814,"byte_end":179818,"line_start":1223,"line_end":1223,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179392,"byte_end":179444,"line_start":1217,"line_end":1217,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179449,"byte_end":179452,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179457,"byte_end":179546,"line_start":1219,"line_end":1219,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179551,"byte_end":179644,"line_start":1220,"line_end":1220,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179649,"byte_end":179736,"line_start":1221,"line_end":1221,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179741,"byte_end":179802,"line_start":1222,"line_end":1222,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180191,"byte_end":180198,"line_start":1232,"line_end":1232,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179883,"byte_end":179923,"line_start":1227,"line_end":1227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179928,"byte_end":179931,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179936,"byte_end":180026,"line_start":1229,"line_end":1229,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180031,"byte_end":180123,"line_start":1230,"line_end":1230,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180128,"byte_end":180179,"line_start":1231,"line_end":1231,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180440,"byte_end":180450,"line_start":1239,"line_end":1239,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180258,"byte_end":180348,"line_start":1236,"line_end":1236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180353,"byte_end":180356,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180361,"byte_end":180428,"line_start":1238,"line_end":1238,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180761,"byte_end":180771,"line_start":1247,"line_end":1247,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180521,"byte_end":180564,"line_start":1243,"line_end":1243,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180569,"byte_end":180572,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180577,"byte_end":180667,"line_start":1245,"line_end":1245,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":180672,"byte_end":180749,"line_start":1246,"line_end":1246,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181402,"byte_end":181416,"line_start":1264,"line_end":1264,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181156,"byte_end":181205,"line_start":1260,"line_end":1260,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181210,"byte_end":181213,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181218,"byte_end":181308,"line_start":1262,"line_end":1262,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181313,"byte_end":181390,"line_start":1263,"line_end":1263,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182028,"byte_end":182039,"line_start":1278,"line_end":1278,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel] where Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181765,"byte_end":181827,"line_start":1274,"line_end":1274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181832,"byte_end":181835,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181840,"byte_end":181931,"line_start":1276,"line_end":1276,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":181936,"byte_end":182016,"line_start":1277,"line_end":1277,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182255,"byte_end":182270,"line_start":1286,"line_end":1286,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182188,"byte_end":182243,"line_start":1285,"line_end":1285,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182738,"byte_end":182747,"line_start":1296,"line_end":1296,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182408,"byte_end":182435,"line_start":1291,"line_end":1291,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182440,"byte_end":182443,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182448,"byte_end":182535,"line_start":1293,"line_end":1293,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182540,"byte_end":182633,"line_start":1294,"line_end":1294,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":182638,"byte_end":182726,"line_start":1295,"line_end":1295,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7688,"byte_end":7694,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1491},{"krate":0,"index":1578},{"krate":0,"index":1733},{"krate":0,"index":1868},{"krate":0,"index":2041},{"krate":0,"index":2353},{"krate":0,"index":2571},{"krate":0,"index":2905},{"krate":0,"index":3000},{"krate":0,"index":3224},{"krate":0,"index":3762},{"krate":0,"index":4024},{"krate":0,"index":4144}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5515,"byte_end":5572,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5573,"byte_end":5576,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5577,"byte_end":5600,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5601,"byte_end":5604,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5605,"byte_end":5641,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5642,"byte_end":5678,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5679,"byte_end":5740,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5741,"byte_end":5798,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5799,"byte_end":5825,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | Rgb8, Rgba8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5876,"byte_end":5902,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | Rgb8, Rgba8, Gray8 |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5903,"byte_end":5982,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Lossy(Luma channel only) | No |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5983,"byte_end":6029,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ | AVIF   | Only 8-bit | Lossy |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6030,"byte_end":6065,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6066,"byte_end":6116,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6117,"byte_end":6155,"line_start":191,"line_end":191,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | Rgb8, Rgba8, Bgr8, Bgra8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6156,"byte_end":6218,"line_start":192,"line_end":192,"column_start":1,"column_end":63}},{"value":"/ | OpenEXR  | Rgb32F, Rgba32F (no dwa compression) | Rgb32F, Rgba32F (no dwa compression) |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6219,"byte_end":6313,"line_start":193,"line_end":193,"column_start":1,"column_end":95}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6314,"byte_end":6342,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6343,"byte_end":6346,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6347,"byte_end":6388,"line_start":196,"line_end":196,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6389,"byte_end":6392,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6393,"byte_end":6485,"line_start":198,"line_end":198,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6486,"byte_end":6584,"line_start":199,"line_end":199,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6585,"byte_end":6678,"line_start":200,"line_end":200,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6679,"byte_end":6778,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6779,"byte_end":6875,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6876,"byte_end":6879,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6880,"byte_end":6971,"line_start":204,"line_end":204,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":6972,"byte_end":7044,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7045,"byte_end":7048,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7049,"byte_end":7143,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7144,"byte_end":7201,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7202,"byte_end":7296,"line_start":209,"line_end":209,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7297,"byte_end":7396,"line_start":210,"line_end":210,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7397,"byte_end":7495,"line_start":211,"line_end":211,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7496,"byte_end":7520,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7521,"byte_end":7524,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7525,"byte_end":7586,"line_start":214,"line_end":214,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7587,"byte_end":7590,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7591,"byte_end":7679,"line_start":216,"line_end":216,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::codecs::bmp","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1426}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7787,"byte_end":7810,"line_start":220,"line_end":220,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of BMP Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196100,"byte_end":196140,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196141,"byte_end":196144,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196145,"byte_end":196203,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196204,"byte_end":196207,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196208,"byte_end":196228,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196229,"byte_end":196321,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"/  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196322,"byte_end":196376,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\mod.rs","byte_start":196377,"byte_end":196380,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":213955,"byte_end":213965,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::codecs::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1334}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":213926,"byte_end":213943,"line_start":544,"line_end":544,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":216553,"byte_end":216556,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":216480,"byte_end":216541,"line_start":632,"line_end":632,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":218058,"byte_end":218075,"line_start":688,"line_end":688,"column_start":12,"column_end":29},"name":"set_indexed_color","qualname":"<BmpDecoder<R>>::set_indexed_color","value":"pub fn set_indexed_color(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" If true, the palette in BMP does not apply to the image even if it is found.\n In other words, the output image is the indexed color.\n","sig":null,"attributes":[{"value":"/ If true, the palette in BMP does not apply to the image even if it is found.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":217903,"byte_end":217983,"line_start":686,"line_end":686,"column_start":5,"column_end":85}},{"value":"/ In other words, the output image is the indexed color.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":217988,"byte_end":218046,"line_start":687,"line_end":687,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":229316,"byte_end":229343,"line_start":984,"line_end":984,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"pub fn read_metadata_in_ico_format(&mut Self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":229262,"byte_end":229285,"line_start":982,"line_end":982,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":231955,"byte_end":231966,"line_start":1060,"line_end":1060,"column_start":12,"column_end":23},"name":"get_palette","qualname":"<BmpDecoder<R>>::get_palette","value":"pub fn get_palette(&Self) -> Option<&[[u8; ]]>","parent":null,"children":[],"decl_id":null,"docs":" Get the palette that is embedded in the BMP image, if any.\n","sig":null,"attributes":[{"value":"/ Get the palette that is embedded in the BMP image, if any.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":231881,"byte_end":231943,"line_start":1059,"line_end":1059,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":250196,"byte_end":250205,"line_start":1483,"line_end":1483,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::codecs::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":250139,"byte_end":250184,"line_start":1482,"line_end":1482,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256012,"byte_end":256022,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BmpEncoder","qualname":"::codecs::bmp::encoder::BmpEncoder","value":"BmpEncoder {  }","parent":null,"children":[{"krate":0,"index":1466}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":255960,"byte_end":256000,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256181,"byte_end":256184,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpEncoder>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256110,"byte_end":256169,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256392,"byte_end":256398,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"encode","qualname":"<BmpEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256253,"byte_end":256286,"line_start":23,"line_end":23,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256291,"byte_end":256343,"line_start":24,"line_end":24,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256348,"byte_end":256380,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256773,"byte_end":256792,"line_start":38,"line_end":38,"column_start":12,"column_end":31},"name":"encode_with_palette","qualname":"<BmpEncoder>::encode_with_palette","value":"pub fn encode_with_palette(&mut Self, &[u8], u32, u32, color::ColorType,\n                           Option<&[[u8; ]]>) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Same as ```encode```, but allow a palette to be passed in.\n The ```palette``` is ignored for color types other than Luma/Luma-with-alpha.\n","sig":null,"attributes":[{"value":"/ Same as ```encode```, but allow a palette to be passed in.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256613,"byte_end":256675,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/ The ```palette``` is ignored for color types other than Luma/Luma-with-alpha.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256680,"byte_end":256761,"line_start":37,"line_end":37,"column_start":5,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::codecs::dds","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":6496},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6513},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6523},{"krate":0,"index":6525},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":6527},{"krate":0,"index":6537},{"krate":0,"index":6539},{"krate":0,"index":6548},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1569}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7832,"byte_end":7855,"line_start":222,"line_end":222,"column_start":5,"column_end":28}},{"value":"/  Decoding of DDS images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":268686,"byte_end":268713,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":268714,"byte_end":268717,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DDS (DirectDraw Surface) is a container format for storing DXT (S3TC) compressed images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":268718,"byte_end":268811,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":268812,"byte_end":268815,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":268816,"byte_end":268836,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-pguide> - Description of the DDS format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":268837,"byte_end":268960,"line_start":6,"line_end":6,"column_start":1,"column_end":124}}]},{"kind":"Struct","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":273449,"byte_end":273459,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::codecs::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":1564}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[{"value":"/ The representation of a DDS decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":273398,"byte_end":273437,"line_start":156,"line_end":156,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":273628,"byte_end":273631,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":273559,"byte_end":273616,"line_start":163,"line_end":163,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::codecs::dxt","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":6550},{"krate":0,"index":6557},{"krate":0,"index":6559},{"krate":0,"index":6560},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6565},{"krate":0,"index":6566},{"krate":0,"index":1630},{"krate":0,"index":1634},{"krate":0,"index":1641},{"krate":0,"index":1645},{"krate":0,"index":1654},{"krate":0,"index":1662},{"krate":0,"index":1666},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1717},{"krate":0,"index":1721},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7877,"byte_end":7900,"line_start":224,"line_end":224,"column_start":5,"column_end":28}},{"value":"deprecated =\n  \"DXT support will be removed or reworked in a future version. Prefer the `squish` crate instead. See https://github.com/image-rs/image/issues/1623\"","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7905,"byte_end":8068,"line_start":225,"line_end":225,"column_start":5,"column_end":168}},{"value":"/  Decoding of DXT (S3TC) compression","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277426,"byte_end":277465,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277466,"byte_end":277469,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DXT is an image format that supports lossy compression","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277470,"byte_end":277529,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277530,"byte_end":277533,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277534,"byte_end":277554,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277555,"byte_end":277707,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277708,"byte_end":277711,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":277712,"byte_end":277841,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6551},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278463,"byte_end":278467,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::codecs::dxt::DxtVariant::DXT1","value":"DxtVariant::DXT1","parent":{"krate":0,"index":6550},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278339,"byte_end":278405,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278410,"byte_end":278458,"line_start":23,"line_end":23,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6553},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278598,"byte_end":278602,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::codecs::dxt::DxtVariant::DXT3","value":"DxtVariant::DXT3","parent":{"krate":0,"index":6550},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278473,"byte_end":278540,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278545,"byte_end":278593,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6555},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278733,"byte_end":278737,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::codecs::dxt::DxtVariant::DXT5","value":"DxtVariant::DXT5","parent":{"krate":0,"index":6550},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278608,"byte_end":278675,"line_start":28,"line_end":28,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278680,"byte_end":278728,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6550},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278322,"byte_end":278332,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"DxtVariant","qualname":"::codecs::dxt::DxtVariant","value":"pub enum DxtVariant { DXT1, DXT3, DXT5, }","parent":null,"children":[{"krate":0,"index":6551},{"krate":0,"index":6553},{"krate":0,"index":6555}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278117,"byte_end":278166,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278167,"byte_end":278219,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278220,"byte_end":278267,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279358,"byte_end":279368,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DxtVariant>::color_type","value":"pub fn color_type(Self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the color type that is stored in this DXT variant","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279285,"byte_end":279346,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279575,"byte_end":279585,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::codecs::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279548,"byte_end":279563,"line_start":60,"line_end":60,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":280165,"byte_end":280168,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"pub fn new(R, u32, u32, DxtVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279734,"byte_end":279800,"line_start":70,"line_end":70,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279805,"byte_end":279868,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279873,"byte_end":279930,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279935,"byte_end":279999,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":280004,"byte_end":280037,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":280042,"byte_end":280109,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":280114,"byte_end":280153,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283590,"byte_end":283599,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"DxtReader","qualname":"::codecs::dxt::DxtReader","value":"DxtReader {  }","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283564,"byte_end":283578,"line_start":186,"line_end":186,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283912,"byte_end":283922,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"DxtEncoder","qualname":"::codecs::dxt::DxtEncoder","value":"DxtEncoder {  }","parent":null,"children":[{"krate":0,"index":1672}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283885,"byte_end":283900,"line_start":199,"line_end":199,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":284053,"byte_end":284056,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtEncoder<W>>::new","value":"pub fn new(W) -> DxtEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283983,"byte_end":284041,"line_start":205,"line_end":205,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":284320,"byte_end":284326,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"encode","qualname":"<DxtEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, DxtVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DxtVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":284118,"byte_end":284155,"line_start":210,"line_end":210,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":284160,"byte_end":284212,"line_start":211,"line_end":211,"column_start":5,"column_end":57}},{"value":"/ in ```DxtVariant``` ```variant```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":284217,"byte_end":284254,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.color_type()","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":284259,"byte_end":284308,"line_start":213,"line_end":213,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::codecs::farbfeld","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":1811},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1848},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1865}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8090,"byte_end":8118,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/ Decoding of farbfeld images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308406,"byte_end":308437,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308438,"byte_end":308441,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ farbfeld is a lossless image format which is easy to parse, pipe and compress.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308442,"byte_end":308524,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308525,"byte_end":308528,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It has the following format:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308529,"byte_end":308561,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308562,"byte_end":308565,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ | Bytes  | Description                                             |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308566,"byte_end":308638,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ |--------|---------------------------------------------------------|","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308639,"byte_end":308711,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ | 8      | \"farbfeld\" magic value                                  |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308712,"byte_end":308784,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ | 4      | 32-Bit BE unsigned integer (width)                      |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308785,"byte_end":308857,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ | 4      | 32-Bit BE unsigned integer (height)                     |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308858,"byte_end":308930,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ | [2222] | 4⋅16-Bit BE unsigned integers [RGBA] / pixel, row-major |","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":308931,"byte_end":309005,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309006,"byte_end":309009,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The RGB-data should be sRGB for best interoperability and not alpha-premultiplied.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309010,"byte_end":309096,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309097,"byte_end":309100,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309101,"byte_end":309120,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/ * <https://tools.suckless.org/farbfeld/> - the farbfeld specification","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309121,"byte_end":309194,"line_start":17,"line_end":17,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309605,"byte_end":309619,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::codecs::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[{"value":"/ farbfeld Reader","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309574,"byte_end":309593,"line_start":31,"line_end":31,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":314955,"byte_end":314970,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::codecs::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":1836}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[{"value":"/ farbfeld decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":314923,"byte_end":314943,"line_start":186,"line_end":186,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315129,"byte_end":315132,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315055,"byte_end":315117,"line_start":192,"line_end":192,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316590,"byte_end":316605,"line_start":250,"line_end":250,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::codecs::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":1858}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[{"value":"/ farbfeld encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316558,"byte_end":316578,"line_start":249,"line_end":249,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316773,"byte_end":316776,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"pub fn new(W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```. The writer should be buffered.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```. The writer should be buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316671,"byte_end":316761,"line_start":255,"line_end":255,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316996,"byte_end":317002,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data``` (native endian)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316879,"byte_end":316927,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316932,"byte_end":316984,"line_start":261,"line_end":261,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::codecs::gif","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1972},{"krate":0,"index":1976},{"krate":0,"index":1984},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":2010},{"krate":0,"index":6568},{"krate":0,"index":6574},{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2020},{"krate":0,"index":2036}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8145,"byte_end":8168,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"/  Decoding of GIF Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321380,"byte_end":321407,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321408,"byte_end":321411,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321412,"byte_end":321505,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321506,"byte_end":321509,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321510,"byte_end":321530,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321531,"byte_end":321610,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321611,"byte_end":321614,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321615,"byte_end":321629,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321630,"byte_end":321648,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ use image::codecs::gif::{GifDecoder, GifEncoder};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321649,"byte_end":321702,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321703,"byte_end":321751,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321752,"byte_end":321774,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321775,"byte_end":321815,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ // Decode a gif into frames","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321816,"byte_end":321847,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321848,"byte_end":321889,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let mut decoder = GifDecoder::new(file_in).unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321890,"byte_end":321946,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ let frames = decoder.into_frames();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321947,"byte_end":321986,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":321987,"byte_end":322057,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322058,"byte_end":322061,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Encode frames into a gif and save to a file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322062,"byte_end":322112,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322113,"byte_end":322159,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ let mut encoder = GifEncoder::new(file_out);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322160,"byte_end":322208,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ encoder.encode_frames(frames.into_iter());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322209,"byte_end":322255,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322256,"byte_end":322268,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322269,"byte_end":322276,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322277,"byte_end":322284,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322285,"byte_end":322318,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322913,"byte_end":322923,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::codecs::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1963}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322886,"byte_end":322901,"line_start":49,"line_end":49,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323075,"byte_end":323078,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323001,"byte_end":323063,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323403,"byte_end":323412,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::codecs::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323346,"byte_end":323391,"line_start":66,"line_end":66,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6569},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334719,"byte_end":334725,"line_start":375,"line_end":375,"column_start":5,"column_end":11},"name":"Finite","qualname":"::codecs::gif::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":6568},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334682,"byte_end":334714,"line_start":374,"line_end":374,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6572},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334756,"byte_end":334764,"line_start":377,"line_end":377,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::codecs::gif::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":6568},"children":[],"decl_id":null,"docs":" Looping GIF\n","sig":null,"attributes":[{"value":"/ Looping GIF","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334736,"byte_end":334751,"line_start":376,"line_end":376,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":6568},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334669,"byte_end":334675,"line_start":373,"line_end":373,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::codecs::gif::Repeat","value":"pub enum Repeat { Finite(u16), Infinite, }","parent":null,"children":[{"krate":0,"index":6569},{"krate":0,"index":6572}],"decl_id":null,"docs":" Number of repetitions for a GIF animation\n","sig":null,"attributes":[{"value":"/ Number of repetitions for a GIF animation","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334584,"byte_end":334629,"line_start":371,"line_end":371,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2014},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335018,"byte_end":335028,"line_start":390,"line_end":390,"column_start":12,"column_end":22},"name":"GifEncoder","qualname":"::codecs::gif::GifEncoder","value":"GifEncoder {  }","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334990,"byte_end":335006,"line_start":389,"line_end":389,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335225,"byte_end":335228,"line_start":399,"line_end":399,"column_start":12,"column_end":15},"name":"new","qualname":"<GifEncoder<W>>::new","value":"pub fn new(W) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335183,"byte_end":335213,"line_start":398,"line_end":398,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335493,"byte_end":335507,"line_start":406,"line_end":406,"column_start":12,"column_end":26},"name":"new_with_speed","qualname":"<GifEncoder<W>>::new_with_speed","value":"pub fn new_with_speed(W, i32) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new GIF encoder, and has the speed parameter `speed`. See\n [`Frame::from_rgba_speed`](/gif/struct.Frame.html#method.from_rgb_speed)\n for more information.\n","sig":null,"attributes":[{"value":"/ Create a new GIF encoder, and has the speed parameter `speed`. See","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335300,"byte_end":335370,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ [`Frame::from_rgba_speed`](/gif/struct.Frame.html#method.from_rgb_speed)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335375,"byte_end":335451,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ for more information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335456,"byte_end":335481,"line_start":405,"line_end":405,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335866,"byte_end":335876,"line_start":420,"line_end":420,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<GifEncoder<W>>::set_repeat","value":"pub fn set_repeat(&mut Self, Repeat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the repeat behaviour of the encoded GIF\n","sig":null,"attributes":[{"value":"/ Set the repeat behaviour of the encoded GIF","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335807,"byte_end":335854,"line_start":419,"line_end":419,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":336217,"byte_end":336223,"line_start":431,"line_end":431,"column_start":12,"column_end":18},"name":"encode","qualname":"<GifEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[{"value":"/ Encode a single image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":336179,"byte_end":336205,"line_start":430,"line_end":430,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":336981,"byte_end":336993,"line_start":454,"line_end":454,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<GifEncoder<W>>::encode_frame","value":"pub fn encode_frame(&mut Self, animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[{"value":"/ Encode one frame of animation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":336935,"byte_end":336969,"line_start":453,"line_end":453,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337279,"byte_end":337292,"line_start":461,"line_end":461,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<GifEncoder<W>>::encode_frames","value":"pub fn encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = animation::Frame>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337149,"byte_end":337168,"line_start":459,"line_end":459,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337173,"byte_end":337267,"line_start":460,"line_end":460,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337771,"byte_end":337788,"line_start":474,"line_end":474,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<GifEncoder<W>>::try_encode_frames","value":"pub fn try_encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = ImageResult<animation::Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337516,"byte_end":337590,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337595,"byte_end":337664,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":337669,"byte_end":337759,"line_start":473,"line_end":473,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::codecs::hdr","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2280},{"krate":0,"index":2351},{"krate":0,"index":2352}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8190,"byte_end":8213,"line_start":231,"line_end":231,"column_start":5,"column_end":28}},{"value":"/  Decoding of Radiance HDR Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342148,"byte_end":342184,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342185,"byte_end":342188,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder for Radiance HDR images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342189,"byte_end":342227,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342228,"byte_end":342231,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342232,"byte_end":342252,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342253,"byte_end":342256,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342257,"byte_end":342316,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342317,"byte_end":342374,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\mod.rs","byte_start":342375,"byte_end":342378,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6652},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347066,"byte_end":347076,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"HdrAdapter","qualname":"::codecs::hdr::decoder::HdrAdapter","value":"HdrAdapter {  }","parent":null,"children":[{"krate":0,"index":6654},{"krate":0,"index":6655}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":346987,"byte_end":347037,"line_start":127,"line_end":127,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347246,"byte_end":347249,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrAdapter<R>>::new","value":"pub fn new(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347215,"byte_end":347234,"line_start":136,"line_end":136,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347522,"byte_end":347535,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HdrAdapter<R>>::new_nonstrict","value":"pub fn new_nonstrict(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347468,"byte_end":347510,"line_start":146,"line_end":146,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":348515,"byte_end":348524,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::codecs::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":348458,"byte_end":348503,"line_start":175,"line_end":175,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350098,"byte_end":350107,"line_start":239,"line_end":239,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::codecs::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350056,"byte_end":350087,"line_start":238,"line_end":238,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350225,"byte_end":350235,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::codecs::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6664}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350169,"byte_end":350196,"line_start":242,"line_end":242,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6668},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350460,"byte_end":350470,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"Rgbe8Pixel","qualname":"::codecs::hdr::decoder::Rgbe8Pixel","value":"Rgbe8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":6669},{"krate":0,"index":6671}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350310,"byte_end":350383,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350384,"byte_end":350394,"line_start":252,"line_end":252,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":6669},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350506,"byte_end":350507,"line_start":256,"line_end":256,"column_start":9,"column_end":10},"name":"c","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":6668},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350477,"byte_end":350497,"line_start":255,"line_end":255,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6671},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350543,"byte_end":350544,"line_start":258,"line_end":258,"column_start":9,"column_end":10},"name":"e","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::e","value":"u8","parent":{"krate":0,"index":6668},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350522,"byte_end":350534,"line_start":257,"line_end":257,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350605,"byte_end":350610,"line_start":262,"line_end":262,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::codecs::hdr::decoder::rgbe8","value":"pub fn rgbe8(u8, u8, u8, u8) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```Rgbe8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```Rgbe8Pixel``` from components","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350553,"byte_end":350597,"line_start":261,"line_end":261,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350799,"byte_end":350805,"line_start":269,"line_end":269,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<Rgbe8Pixel>::to_hdr","value":"pub fn to_hdr(Self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgbe8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```Rgbe8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350715,"byte_end":350773,"line_start":267,"line_end":267,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350778,"byte_end":350787,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351565,"byte_end":351571,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<Rgbe8Pixel>::to_ldr","value":"pub fn to_ldr<T: Primitive + Zero>(Self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgbe8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```Rgbe8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351300,"byte_end":351374,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351379,"byte_end":351382,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351387,"byte_end":351436,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351441,"byte_end":351444,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351449,"byte_end":351460,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351465,"byte_end":351468,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351473,"byte_end":351539,"line_start":289,"line_end":289,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351544,"byte_end":351553,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351957,"byte_end":351975,"line_start":304,"line_end":304,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<Rgbe8Pixel>::to_ldr_scale_gamma","value":"pub fn to_ldr_scale_gamma<T: Primitive + Zero>(Self, f32, f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts Rgbe8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts Rgbe8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351664,"byte_end":351730,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351735,"byte_end":351738,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351743,"byte_end":351792,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351797,"byte_end":351800,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351805,"byte_end":351816,"line_start":299,"line_end":299,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351821,"byte_end":351824,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351829,"byte_end":351889,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351894,"byte_end":351931,"line_start":302,"line_end":302,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":351936,"byte_end":351945,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353183,"byte_end":353186,"line_start":335,"line_end":335,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353034,"byte_end":353089,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HdrDecoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353094,"byte_end":353140,"line_start":333,"line_end":333,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353145,"byte_end":353171,"line_start":334,"line_end":334,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353594,"byte_end":353609,"line_start":346,"line_end":346,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"pub fn with_strictness(R, bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353291,"byte_end":353352,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HdrDecoder```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353357,"byte_end":353410,"line_start":340,"line_end":340,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353415,"byte_end":353418,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353423,"byte_end":353453,"line_start":342,"line_end":342,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353458,"byte_end":353461,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353466,"byte_end":353516,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353521,"byte_end":353582,"line_start":345,"line_end":345,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":356698,"byte_end":356706,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"pub fn metadata(&Self) -> HdrMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HdrMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HdrMetadata``` for details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":356620,"byte_end":356686,"line_start":426,"line_end":426,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":356837,"byte_end":356854,"line_start":432,"line_end":432,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"pub fn read_image_native(Self) -> ImageResult<Vec<Rgbe8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":356768,"byte_end":356825,"line_start":431,"line_end":431,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":357487,"byte_end":357507,"line_start":447,"line_end":447,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"pub fn read_image_transform<T: Send, F: Send + Sync + Fn(Rgbe8Pixel) ->\n                            T>(Self, F, &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":357412,"byte_end":357475,"line_start":446,"line_end":446,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":358646,"byte_end":358660,"line_start":483,"line_end":483,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"pub fn read_image_ldr(Self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":358543,"byte_end":358603,"line_start":481,"line_end":481,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":358608,"byte_end":358634,"line_start":482,"line_end":482,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":358964,"byte_end":358978,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"pub fn read_image_hdr(Self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":358883,"byte_end":358944,"line_start":489,"line_end":489,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":358949,"byte_end":358952,"line_start":490,"line_end":490,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":359786,"byte_end":359809,"line_start":516,"line_end":516,"column_start":12,"column_end":35},"name":"HdrImageDecoderIterator","qualname":"::codecs::hdr::decoder::HdrImageDecoderIterator","value":"HdrImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":359729,"byte_end":359774,"line_start":515,"line_end":515,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367333,"byte_end":367344,"line_start":734,"line_end":734,"column_start":12,"column_end":23},"name":"HdrMetadata","qualname":"::codecs::hdr::decoder::HdrMetadata","value":"HdrMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691},{"krate":0,"index":6692},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367262,"byte_end":367297,"line_start":732,"line_end":732,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6689},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367482,"byte_end":367487,"line_start":737,"line_end":737,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::hdr::decoder::HdrMetadata::width","value":"u32","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367351,"byte_end":367414,"line_start":735,"line_end":735,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367419,"byte_end":367473,"line_start":736,"line_end":736,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6690},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367566,"byte_end":367572,"line_start":739,"line_end":739,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::hdr::decoder::HdrMetadata::height","value":"u32","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367498,"byte_end":367557,"line_start":738,"line_end":738,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6691},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367847,"byte_end":367858,"line_start":743,"line_end":743,"column_start":9,"column_end":20},"name":"orientation","qualname":"::codecs::hdr::decoder::HdrMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367583,"byte_end":367683,"line_start":740,"line_end":740,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367688,"byte_end":367765,"line_start":741,"line_end":741,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367770,"byte_end":367838,"line_start":742,"line_end":742,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6692},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368083,"byte_end":368091,"line_start":748,"line_end":748,"column_start":9,"column_end":17},"name":"exposure","qualname":"::codecs::hdr::decoder::HdrMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367886,"byte_end":367956,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367961,"byte_end":367994,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":367999,"byte_end":368002,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368007,"byte_end":368074,"line_start":747,"line_end":747,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6693},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368335,"byte_end":368351,"line_start":753,"line_end":753,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::codecs::hdr::decoder::HdrMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368110,"byte_end":368205,"line_start":749,"line_end":749,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368210,"byte_end":368246,"line_start":750,"line_end":750,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368251,"byte_end":368254,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368259,"byte_end":368326,"line_start":752,"line_end":752,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6694},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368430,"byte_end":368448,"line_start":755,"line_end":755,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::codecs::hdr::decoder::HdrMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368382,"byte_end":368421,"line_start":754,"line_end":754,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6695},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368677,"byte_end":368694,"line_start":759,"line_end":759,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::codecs::hdr::decoder::HdrMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":6688},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368467,"byte_end":368552,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368557,"byte_end":368627,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368632,"byte_end":368668,"line_start":758,"line_end":758,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":378316,"byte_end":378329,"line_start":1006,"line_end":1006,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::codecs::hdr::decoder::read_raw_file","value":"pub fn read_raw_file<P: AsRef<Path>>(P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":378252,"byte_end":378308,"line_start":1005,"line_end":1005,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379502,"byte_end":379512,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HdrEncoder","qualname":"::codecs::hdr::encoder::HdrEncoder","value":"HdrEncoder {  }","parent":null,"children":[{"krate":0,"index":2309}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379466,"byte_end":379490,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379604,"byte_end":379607,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrEncoder<W>>::new","value":"pub fn new(W) -> HdrEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379573,"byte_end":379592,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379770,"byte_end":379776,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HdrEncoder<W>>::encode","value":"pub fn encode(Self, &[Rgb<f32>], usize, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379669,"byte_end":379701,"line_start":18,"line_end":18,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379706,"byte_end":379758,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2349},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":387267,"byte_end":387275,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::codecs::hdr::encoder::to_rgbe8","value":"pub fn to_rgbe8(Rgb<f32>) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```Rgbe8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```Rgbe8Pixel```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":387210,"byte_end":387259,"line_start":229,"line_end":229,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::codecs::ico","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2361},{"krate":0,"index":2364},{"krate":0,"index":2502}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8235,"byte_end":8258,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of ICO files","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394674,"byte_end":394713,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394714,"byte_end":394717,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394718,"byte_end":394790,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394791,"byte_end":394794,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394795,"byte_end":394815,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394816,"byte_end":394879,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\mod.rs","byte_start":394880,"byte_end":394940,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":399103,"byte_end":399113,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::codecs::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":399073,"byte_end":399091,"line_start":110,"line_end":110,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":400253,"byte_end":400256,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":400180,"byte_end":400241,"line_start":147,"line_end":147,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":403770,"byte_end":403779,"line_start":265,"line_end":265,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::codecs::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":403713,"byte_end":403758,"line_start":264,"line_end":264,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415162,"byte_end":415172,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"IcoEncoder","qualname":"::codecs::ico::encoder::IcoEncoder","value":"IcoEncoder {  }","parent":null,"children":[{"krate":0,"index":2547}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415135,"byte_end":415150,"line_start":18,"line_end":18,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415232,"byte_end":415240,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"IcoFrame","qualname":"::codecs::ico::encoder::IcoFrame","value":"IcoFrame {  }","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"decl_id":null,"docs":" An ICO image entry\n","sig":null,"attributes":[{"value":"/ An ICO image entry","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415198,"byte_end":415220,"line_start":23,"line_end":23,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415625,"byte_end":415637,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"with_encoded","qualname":"<IcoFrame>::with_encoded","value":"pub fn with_encoded<impl Into<Cow<'a, [u8]>>: Into<Cow>>(impl Into<Cow<'a, [u8]>>,\n                                                         u32, u32, ColorType)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `IcoFrame` using a pre-encoded PNG or BMP","sig":null,"attributes":[{"value":"/ Construct a new `IcoFrame` using a pre-encoded PNG or BMP","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415472,"byte_end":415533,"line_start":35,"line_end":35,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415538,"byte_end":415541,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The `width` and `height` must be between 1 and 256 (inclusive).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415546,"byte_end":415613,"line_start":37,"line_end":37,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":416807,"byte_end":416813,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_png","qualname":"<IcoFrame>::as_png","value":"pub fn as_png(&[u8], u32, u32, ColorType) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `IcoFrame` by encoding `buf` as a PNG","sig":null,"attributes":[{"value":"/ Construct a new `IcoFrame` by encoding `buf` as a PNG","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":416659,"byte_end":416716,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":416721,"byte_end":416724,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The `width` and `height` must be between 1 and 256 (inclusive)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":416729,"byte_end":416795,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417248,"byte_end":417251,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoEncoder<W>>::new","value":"pub fn new(W) -> IcoEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417177,"byte_end":417236,"line_start":85,"line_end":85,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417721,"byte_end":417727,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"encode","qualname":"<IcoEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417313,"byte_end":417382,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417387,"byte_end":417461,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417466,"byte_end":417537,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417542,"byte_end":417545,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Expects data to be big endian.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417550,"byte_end":417584,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"deprecated =\n  \"Use `IcoEncoder::write_image` instead. Beware that `write_image` has a different endianness convention\"","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417589,"byte_end":417709,"line_start":95,"line_end":95,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":418308,"byte_end":418321,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"encode_images","qualname":"<IcoEncoder<W>>::encode_images","value":"pub fn encode_images(Self, &[IcoFrame]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Takes some [`IcoFrame`]s and encodes them into an ICO.","sig":null,"attributes":[{"value":"/ Takes some [`IcoFrame`]s and encodes them into an ICO.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":418097,"byte_end":418155,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":418160,"byte_end":418163,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ `images` is a list of images, usually ordered by dimension, which","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":418168,"byte_end":418237,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ must be between 1 and 65535 (inclusive) in length.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":418242,"byte_end":418296,"line_start":108,"line_end":108,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2664},{"krate":0,"index":2876},{"krate":0,"index":2887}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8280,"byte_end":8304,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421037,"byte_end":421077,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421078,"byte_end":421081,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421082,"byte_end":421177,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421178,"byte_end":421232,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421233,"byte_end":421236,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421237,"byte_end":421256,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421257,"byte_end":421333,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\mod.rs","byte_start":421334,"byte_end":421337,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":421820,"byte_end":421831,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":421792,"byte_end":421808,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422010,"byte_end":422013,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":421937,"byte_end":421998,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423208,"byte_end":423213,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"pub fn scale(&mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422594,"byte_end":422655,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422660,"byte_end":422663,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422668,"byte_end":422731,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422736,"byte_end":422799,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422804,"byte_end":422862,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422867,"byte_end":422921,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422926,"byte_end":422929,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":422934,"byte_end":422996,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423001,"byte_end":423062,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423067,"byte_end":423092,"line_start":45,"line_end":45,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423097,"byte_end":423100,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423105,"byte_end":423166,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423171,"byte_end":423196,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423645,"byte_end":423655,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423588,"byte_end":423633,"line_start":66,"line_end":66,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6809},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468279,"byte_end":468295,"line_start":292,"line_end":292,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468131,"byte_end":468195,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468200,"byte_end":468274,"line_start":291,"line_end":291,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6811},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468336,"byte_end":468342,"line_start":295,"line_end":295,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468302,"byte_end":468331,"line_start":294,"line_end":294,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468379,"byte_end":468390,"line_start":298,"line_end":298,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468349,"byte_end":468374,"line_start":297,"line_end":297,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":6808},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468108,"byte_end":468124,"line_start":289,"line_end":289,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"pub enum PixelDensityUnit { PixelAspectRatio, Inches, Centimeters, }","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6811},{"krate":0,"index":6813}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":467987,"byte_end":468053,"line_start":287,"line_end":287,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468735,"byte_end":468747,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":6827},{"krate":0,"index":6828}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468395,"byte_end":468439,"line_start":301,"line_end":301,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468440,"byte_end":468443,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468444,"byte_end":468495,"line_start":303,"line_end":303,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468496,"byte_end":468499,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468500,"byte_end":468511,"line_start":305,"line_end":305,"column_start":1,"column_end":12}},{"value":"/ use image::codecs::jpeg::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468512,"byte_end":468543,"line_start":306,"line_end":306,"column_start":1,"column_end":32}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468544,"byte_end":468582,"line_start":307,"line_end":307,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468583,"byte_end":468670,"line_start":308,"line_end":308,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468671,"byte_end":468678,"line_start":309,"line_end":309,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":6827},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468810,"byte_end":468817,"line_start":313,"line_end":313,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468754,"byte_end":468801,"line_start":312,"line_end":312,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6828},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468889,"byte_end":468893,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468835,"byte_end":468880,"line_start":314,"line_end":314,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469099,"byte_end":469102,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"pub fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468940,"byte_end":468987,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468992,"byte_end":469046,"line_start":320,"line_end":320,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469051,"byte_end":469087,"line_start":321,"line_end":321,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469553,"byte_end":469564,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469501,"byte_end":469541,"line_start":340,"line_end":340,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":470004,"byte_end":470007,"line_start":357,"line_end":357,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder<W>>::new","value":"pub fn new(W) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469934,"byte_end":469992,"line_start":356,"line_end":356,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":470295,"byte_end":470311,"line_start":364,"line_end":364,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, u8) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":470090,"byte_end":470157,"line_start":361,"line_end":361,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":470162,"byte_end":470233,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":470238,"byte_end":470283,"line_start":363,"line_end":363,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472495,"byte_end":472512,"line_start":432,"line_end":432,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder<W>>::set_pixel_density","value":"pub fn set_pixel_density(&mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472263,"byte_end":472327,"line_start":429,"line_end":429,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472332,"byte_end":472423,"line_start":430,"line_end":430,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472428,"byte_end":472483,"line_start":431,"line_end":431,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472844,"byte_end":472850,"line_start":441,"line_end":441,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472610,"byte_end":472673,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472678,"byte_end":472730,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472735,"byte_end":472766,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472771,"byte_end":472774,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":472779,"byte_end":472832,"line_start":440,"line_end":440,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474681,"byte_end":474693,"line_start":487,"line_end":487,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder<W>>::encode_image","value":"pub fn encode_image<I: GenericImageView>(&mut Self, &I) -> ImageResult<()>\nwhere I::Pixel: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474153,"byte_end":474181,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474186,"byte_end":474189,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474194,"byte_end":474287,"line_start":480,"line_end":480,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474292,"byte_end":474386,"line_start":481,"line_end":481,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474391,"byte_end":474486,"line_start":482,"line_end":482,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474491,"byte_end":474582,"line_start":483,"line_end":483,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474587,"byte_end":474603,"line_start":484,"line_end":484,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474608,"byte_end":474611,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":474616,"byte_end":474669,"line_start":486,"line_end":486,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"openexr","qualname":"::codecs::openexr","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":6841},{"krate":0,"index":6847},{"krate":0,"index":2962},{"krate":0,"index":2970},{"krate":0,"index":2986},{"krate":0,"index":6850},{"krate":0,"index":6854},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999}],"decl_id":null,"docs":" Decoding of OpenEXR (.exr) Images","sig":null,"attributes":[{"value":"cfg(feature = \"openexr\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8327,"byte_end":8354,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"/ Decoding of OpenEXR (.exr) Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501743,"byte_end":501780,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501781,"byte_end":501784,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ OpenEXR is an image format that is widely used, especially in VFX,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501785,"byte_end":501855,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ because it supports lossless and lossy compression for float data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501856,"byte_end":501926,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501927,"byte_end":501930,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This decoder only supports RGB and RGBA images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501931,"byte_end":501982,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/ If an image does not contain alpha information,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":501983,"byte_end":502034,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/ it is defaulted to `1.0` (no transparency).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502035,"byte_end":502082,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502083,"byte_end":502086,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502087,"byte_end":502106,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/ * <https://www.openexr.com/documentation.html> - The OpenEXR reference.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502107,"byte_end":502182,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502183,"byte_end":502186,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502187,"byte_end":502190,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Current limitations (July 2021):","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502191,"byte_end":502227,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/     - only pixel type `Rgba32F` and `Rgba16F` are supported","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502228,"byte_end":502291,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/     - only non-deep rgb/rgba files supported, no conversion from/to YCbCr or similar","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502292,"byte_end":502380,"line_start":16,"line_end":16,"column_start":1,"column_end":89}},{"value":"/     - only the first non-deep rgb layer is used","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502381,"byte_end":502432,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/     - only the largest mip map level is used","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502433,"byte_end":502481,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/     - pixels outside display window are lost","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502482,"byte_end":502530,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/     - meta data is lost","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502531,"byte_end":502558,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/     - dwaa/dwab compressed images not supported yet by the exr library","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502559,"byte_end":502633,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/     - (chroma) subsampling not supported yet by the exr library","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":502634,"byte_end":502701,"line_start":22,"line_end":22,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6841},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503143,"byte_end":503157,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"OpenExrDecoder","qualname":"::codecs::openexr::OpenExrDecoder","value":"OpenExrDecoder {  }","parent":null,"children":[{"krate":0,"index":6843},{"krate":0,"index":6844},{"krate":0,"index":6845},{"krate":0,"index":6846}],"decl_id":null,"docs":" An OpenEXR decoder. Immediately reads the meta data from the file.\n","sig":null,"attributes":[{"value":"/ An OpenEXR decoder. Immediately reads the meta data from the file.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503044,"byte_end":503114,"line_start":36,"line_end":36,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503981,"byte_end":503984,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenExrDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a decoder. Consumes the first few bytes of the source to extract image dimensions.\n Assumes the reader is buffered. In most cases,\n you should wrap your reader in a `BufReader` for best performance.\n Loads an alpha channel if the file has alpha samples.\n Use `with_alpha_preference` if you want to load or not load alpha unconditionally.\n","sig":null,"attributes":[{"value":"/ Create a decoder. Consumes the first few bytes of the source to extract image dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503593,"byte_end":503686,"line_start":53,"line_end":53,"column_start":5,"column_end":98}},{"value":"/ Assumes the reader is buffered. In most cases,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503691,"byte_end":503741,"line_start":54,"line_end":54,"column_start":5,"column_end":55}},{"value":"/ you should wrap your reader in a `BufReader` for best performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503746,"byte_end":503816,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ Loads an alpha channel if the file has alpha samples.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503821,"byte_end":503878,"line_start":56,"line_end":56,"column_start":5,"column_end":62}},{"value":"/ Use `with_alpha_preference` if you want to load or not load alpha unconditionally.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503883,"byte_end":503969,"line_start":57,"line_end":57,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504558,"byte_end":504579,"line_start":68,"line_end":68,"column_start":12,"column_end":33},"name":"with_alpha_preference","qualname":"<OpenExrDecoder<R>>::with_alpha_preference","value":"pub fn with_alpha_preference(R, Option<bool>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a decoder. Consumes the first few bytes of the source to extract image dimensions.\n Assumes the reader is buffered. In most cases,\n you should wrap your reader in a `BufReader` for best performance.\n If alpha preference is specified, an alpha channel will\n always be present or always be not present in the returned image.\n If alpha preference is none, the alpha channel will only be returned if it is found in the file.\n","sig":null,"attributes":[{"value":"/ Create a decoder. Consumes the first few bytes of the source to extract image dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504080,"byte_end":504173,"line_start":62,"line_end":62,"column_start":5,"column_end":98}},{"value":"/ Assumes the reader is buffered. In most cases,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504178,"byte_end":504228,"line_start":63,"line_end":63,"column_start":5,"column_end":55}},{"value":"/ you should wrap your reader in a `BufReader` for best performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504233,"byte_end":504303,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ If alpha preference is specified, an alpha channel will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504308,"byte_end":504367,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ always be present or always be not present in the returned image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504372,"byte_end":504441,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ If alpha preference is none, the alpha channel will only be returned if it is found in the file.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":504446,"byte_end":504546,"line_start":67,"line_end":67,"column_start":5,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":6850},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":515792,"byte_end":515806,"line_start":345,"line_end":345,"column_start":12,"column_end":26},"name":"OpenExrEncoder","qualname":"::codecs::openexr::OpenExrEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper that implements `ImageEncoder` for OpenEXR images. Will behave like `image::codecs::openexr::write_buffer`.\n","sig":null,"attributes":[{"value":"/ A thin wrapper that implements `ImageEncoder` for OpenEXR images. Will behave like `image::codecs::openexr::write_buffer`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":515637,"byte_end":515763,"line_start":343,"line_end":343,"column_start":1,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":516065,"byte_end":516068,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenExrEncoder<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `ImageEncoder`. Does not write anything yet. Writing later will behave like `image::codecs::openexr::write_buffer`.\n","sig":null,"attributes":[{"value":"/ Create an `ImageEncoder`. Does not write anything yet. Writing later will behave like `image::codecs::openexr::write_buffer`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":515847,"byte_end":515976,"line_start":348,"line_end":348,"column_start":5,"column_end":134}}]},{"kind":"Mod","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3095},{"krate":0,"index":3098},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3130},{"krate":0,"index":3134},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3160},{"krate":0,"index":3168},{"krate":0,"index":3174},{"krate":0,"index":3186},{"krate":0,"index":6857},{"krate":0,"index":6868},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6892},{"krate":0,"index":6894},{"krate":0,"index":6895},{"krate":0,"index":6897},{"krate":0,"index":6898},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6903},{"krate":0,"index":6907},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":3191},{"krate":0,"index":3199},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3223}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8380,"byte_end":8403,"line_start":239,"line_end":239,"column_start":5,"column_end":28}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525515,"byte_end":525554,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525555,"byte_end":525558,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525559,"byte_end":525649,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525650,"byte_end":525653,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525654,"byte_end":525673,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525674,"byte_end":525731,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":525732,"byte_end":525735,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526729,"byte_end":526738,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526539,"byte_end":526553,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526554,"byte_end":526557,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526558,"byte_end":526617,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526618,"byte_end":526679,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526680,"byte_end":526717,"line_start":33,"line_end":33,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":528943,"byte_end":528953,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":3133}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":528916,"byte_end":528931,"line_start":111,"line_end":111,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":529131,"byte_end":529134,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":529057,"byte_end":529119,"line_start":118,"line_end":118,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533073,"byte_end":533077,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"pub fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532426,"byte_end":532483,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532488,"byte_end":532491,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532496,"byte_end":532587,"line_start":189,"line_end":189,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532592,"byte_end":532682,"line_start":190,"line_end":190,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532687,"byte_end":532777,"line_start":191,"line_end":191,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532782,"byte_end":532836,"line_start":192,"line_end":192,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532841,"byte_end":532844,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532849,"byte_end":532942,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":532947,"byte_end":533040,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533045,"byte_end":533061,"line_start":196,"line_end":196,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533500,"byte_end":533507,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"pub fn is_apng(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533146,"byte_end":533193,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533198,"byte_end":533201,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533206,"byte_end":533296,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533301,"byte_end":533385,"line_start":204,"line_end":204,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533390,"byte_end":533393,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533398,"byte_end":533488,"line_start":206,"line_end":206,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535476,"byte_end":535487,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535190,"byte_end":535244,"line_start":262,"line_end":262,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535245,"byte_end":535248,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535249,"byte_end":535299,"line_start":264,"line_end":264,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535300,"byte_end":535303,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535304,"byte_end":535360,"line_start":266,"line_end":266,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535361,"byte_end":535403,"line_start":267,"line_end":267,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535404,"byte_end":535464,"line_start":268,"line_end":268,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":542803,"byte_end":542813,"line_start":463,"line_end":463,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":542776,"byte_end":542791,"line_start":462,"line_end":462,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6858},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543096,"byte_end":543103,"line_start":474,"line_end":474,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":6857},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543062,"byte_end":543091,"line_start":473,"line_end":473,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543143,"byte_end":543147,"line_start":476,"line_end":476,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":6857},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543109,"byte_end":543138,"line_start":475,"line_end":475,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6862},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543184,"byte_end":543188,"line_start":478,"line_end":478,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":6857},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543153,"byte_end":543179,"line_start":477,"line_end":477,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6864},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543229,"byte_end":543236,"line_start":480,"line_end":480,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":6857},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543194,"byte_end":543224,"line_start":479,"line_end":479,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543282,"byte_end":543285,"line_start":482,"line_end":482,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":6857},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543242,"byte_end":543277,"line_start":481,"line_end":481,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":6857},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543040,"byte_end":543055,"line_start":472,"line_end":472,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"pub enum CompressionType { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":6858},{"krate":0,"index":6860},{"krate":0,"index":6862},{"krate":0,"index":6864},{"krate":0,"index":6866}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":542897,"byte_end":542967,"line_start":469,"line_end":469,"column_start":1,"column_end":71}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543013,"byte_end":543030,"line_start":471,"line_end":471,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543599,"byte_end":543607,"line_start":493,"line_end":493,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":6879},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth greyscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth greyscale or data with a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543494,"byte_end":543570,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543575,"byte_end":543594,"line_start":492,"line_end":492,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543674,"byte_end":543677,"line_start":495,"line_end":495,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":6879},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543613,"byte_end":543669,"line_start":494,"line_end":494,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6884},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543727,"byte_end":543729,"line_start":497,"line_end":497,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":6879},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543683,"byte_end":543722,"line_start":496,"line_end":496,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6886},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543806,"byte_end":543809,"line_start":499,"line_end":499,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":6879},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543735,"byte_end":543801,"line_start":498,"line_end":498,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6888},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543896,"byte_end":543901,"line_start":501,"line_end":501,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":6879},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543815,"byte_end":543891,"line_start":500,"line_end":500,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544041,"byte_end":544049,"line_start":504,"line_end":504,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::codecs::png::FilterType::Adaptive","value":"FilterType::Adaptive","parent":{"krate":0,"index":6879},"children":[],"decl_id":null,"docs":" Uses a heuristic to select one of the preceding filters for each\n scanline rather than one filter for the entire image\n","sig":null,"attributes":[{"value":"/ Uses a heuristic to select one of the preceding filters for each","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543907,"byte_end":543975,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/ scanline rather than one filter for the entire image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543980,"byte_end":544036,"line_start":503,"line_end":503,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":6879},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543477,"byte_end":543487,"line_start":490,"line_end":490,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"pub enum FilterType { NoFilter, Sub, Up, Avg, Paeth, Adaptive, }","parent":null,"children":[{"krate":0,"index":6880},{"krate":0,"index":6882},{"krate":0,"index":6884},{"krate":0,"index":6886},{"krate":0,"index":6888},{"krate":0,"index":6890}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543290,"byte_end":543362,"line_start":485,"line_end":485,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543363,"byte_end":543366,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Adaptive`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543367,"byte_end":543404,"line_start":487,"line_end":487,"column_start":1,"column_end":38}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":543450,"byte_end":543467,"line_start":489,"line_end":489,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544279,"byte_end":544282,"line_start":515,"line_end":515,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"pub fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544209,"byte_end":544267,"line_start":514,"line_end":514,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545283,"byte_end":545299,"line_start":535,"line_end":535,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544461,"byte_end":544556,"line_start":523,"line_end":523,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544561,"byte_end":544587,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544592,"byte_end":544595,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544600,"byte_end":544695,"line_start":526,"line_end":526,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544700,"byte_end":544793,"line_start":527,"line_end":527,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544798,"byte_end":544890,"line_start":528,"line_end":528,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544895,"byte_end":544986,"line_start":529,"line_end":529,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544991,"byte_end":545039,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545044,"byte_end":545047,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type, so an adaptive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545052,"byte_end":545127,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ filter type is selected as the default. The filter which best minimizes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545132,"byte_end":545207,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ file size may change with the type of compression used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545212,"byte_end":545271,"line_start":534,"line_end":534,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545779,"byte_end":545785,"line_start":551,"line_end":551,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545508,"byte_end":545598,"line_start":547,"line_end":547,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545603,"byte_end":545606,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Expects data in big endian.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545611,"byte_end":545642,"line_start":549,"line_end":549,"column_start":5,"column_end":36}},{"value":"deprecated =\n  \"Use `PngEncoder::write_image` instead. Beware that `write_image` has a different endianness convention\"","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":545647,"byte_end":545767,"line_start":550,"line_end":550,"column_start":5,"column_end":125}}]},{"kind":"Mod","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::codecs::pnm","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3228},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3285},{"krate":0,"index":3521},{"krate":0,"index":3707}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8425,"byte_end":8448,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/ Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553570,"byte_end":553631,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553632,"byte_end":553635,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553636,"byte_end":553732,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitely recognizes but rejects their `_ALPHA`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553733,"byte_end":553829,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ variants for now as alpha color types are unsupported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\mod.rs","byte_start":553830,"byte_end":553888,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":571459,"byte_end":571469,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::codecs::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":571432,"byte_end":571447,"line_start":244,"line_end":244,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":571651,"byte_end":571654,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":571575,"byte_end":571639,"line_start":252,"line_end":252,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":573523,"byte_end":573533,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> (R, PnmHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":573448,"byte_end":573511,"line_start":294,"line_end":294,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583203,"byte_end":583212,"line_start":567,"line_end":567,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::codecs::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583146,"byte_end":583191,"line_start":566,"line_end":566,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":586671,"byte_end":586678,"line_start":662,"line_end":662,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"pub fn subtype(&Self) -> PnmSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":586579,"byte_end":586659,"line_start":661,"line_end":661,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7048},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":608788,"byte_end":608790,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::codecs::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":7046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7051},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":608806,"byte_end":608809,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::codecs::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":7046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7046},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":608766,"byte_end":608777,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::codecs::pnm::encoder::FlatSamples","value":"pub enum FlatSamples<'a> { U8(&'a [u8]), U16(&'a [u16]), }","parent":null,"children":[{"krate":0,"index":7048},{"krate":0,"index":7051}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":608890,"byte_end":608900,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PnmEncoder","qualname":"::codecs::pnm::encoder::PnmEncoder","value":"PnmEncoder {  }","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":608825,"byte_end":608878,"line_start":31,"line_end":31,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610290,"byte_end":610293,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmEncoder<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PnmEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PnmEncoder from the `writer`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":609988,"byte_end":610032,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610037,"byte_end":610040,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610045,"byte_end":610135,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610140,"byte_end":610232,"line_start":85,"line_end":85,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610237,"byte_end":610278,"line_start":86,"line_end":86,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610843,"byte_end":610855,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PnmEncoder<W>>::with_subtype","value":"pub fn with_subtype(Self, PnmSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610422,"byte_end":610462,"line_start":94,"line_end":94,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610467,"byte_end":610470,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610475,"byte_end":610569,"line_start":96,"line_end":96,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610574,"byte_end":610668,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610673,"byte_end":610723,"line_start":98,"line_end":98,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610728,"byte_end":610731,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":610736,"byte_end":610831,"line_start":100,"line_end":100,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611561,"byte_end":611572,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PnmEncoder<W>>::with_header","value":"pub fn with_header(Self, PnmHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611022,"byte_end":611061,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611066,"byte_end":611069,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611074,"byte_end":611169,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611174,"byte_end":611263,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611268,"byte_end":611352,"line_start":112,"line_end":112,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611357,"byte_end":611360,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611365,"byte_end":611440,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611445,"byte_end":611448,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611453,"byte_end":611549,"line_start":116,"line_end":116,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612143,"byte_end":612162,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PnmEncoder<W>>::with_dynamic_header","value":"pub fn with_dynamic_header(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611735,"byte_end":611784,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611789,"byte_end":611792,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611797,"byte_end":611890,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611895,"byte_end":611987,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":611992,"byte_end":612030,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612035,"byte_end":612038,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612043,"byte_end":612131,"line_start":130,"line_end":130,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612538,"byte_end":612544,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"encode","qualname":"<PnmEncoder<W>>::encode","value":"pub fn encode<'s, S>(&mut Self, S, u32, u32, ColorType) -> ImageResult<()>\nwhere S: Into<FlatSamples>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612299,"byte_end":612357,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612362,"byte_end":612365,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612370,"byte_end":612456,"line_start":140,"line_end":140,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":612461,"byte_end":612526,"line_start":141,"line_end":141,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7060},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631518,"byte_end":631524,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::codecs::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":7059},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631459,"byte_end":631513,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7062},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631608,"byte_end":631613,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::codecs::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":7059},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631531,"byte_end":631603,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":7059},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631438,"byte_end":631452,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::codecs::pnm::header::SampleEncoding","value":"pub enum SampleEncoding { Binary, Ascii, }","parent":null,"children":[{"krate":0,"index":7060},{"krate":0,"index":7062}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631331,"byte_end":631383,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631766,"byte_end":631772,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::codecs::pnm::header::PnmSubtype::Bitmap","value":"PnmSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":7075},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631734,"byte_end":631761,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7079},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631827,"byte_end":631834,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::codecs::pnm::header::PnmSubtype::Graymap","value":"PnmSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":7075},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631795,"byte_end":631822,"line_start":19,"line_end":19,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631889,"byte_end":631895,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::codecs::pnm::header::PnmSubtype::Pixmap","value":"PnmSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":7075},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631857,"byte_end":631884,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7085},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631942,"byte_end":631954,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::codecs::pnm::header::PnmSubtype::ArbitraryMap","value":"PnmSubtype::ArbitraryMap","parent":{"krate":0,"index":7075},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631918,"byte_end":631937,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":7075},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631717,"byte_end":631727,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PnmSubtype","qualname":"::codecs::pnm::header::PnmSubtype","value":"pub enum PnmSubtype {\n    Bitmap(SampleEncoding),\n    Graymap(SampleEncoding),\n    Pixmap(SampleEncoding),\n    ArbitraryMap,\n}","parent":null,"children":[{"krate":0,"index":7076},{"krate":0,"index":7079},{"krate":0,"index":7082},{"krate":0,"index":7085}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631618,"byte_end":631662,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632346,"byte_end":632355,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PnmHeader","qualname":"::codecs::pnm::header::PnmHeader","value":"PnmHeader {  }","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":631959,"byte_end":632005,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632006,"byte_end":632009,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632010,"byte_end":632108,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632109,"byte_end":632205,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632206,"byte_end":632303,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632304,"byte_end":632334,"line_start":34,"line_end":34,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632684,"byte_end":632696,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::codecs::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632586,"byte_end":632642,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7100},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632744,"byte_end":632752,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::BitmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632703,"byte_end":632735,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7101},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632812,"byte_end":632818,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632775,"byte_end":632803,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7102},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632866,"byte_end":632871,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632830,"byte_end":632857,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7108},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632980,"byte_end":632993,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::codecs::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":7109},{"krate":0,"index":7110},{"krate":0,"index":7111},{"krate":0,"index":7112}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":632881,"byte_end":632938,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":7109},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633041,"byte_end":633049,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::GraymapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7108},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633000,"byte_end":633032,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7110},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633109,"byte_end":633115,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":7108},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633072,"byte_end":633100,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633163,"byte_end":633168,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":7108},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633127,"byte_end":633154,"line_start":69,"line_end":69,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7112},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633230,"byte_end":633238,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::codecs::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":7108},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633180,"byte_end":633221,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633348,"byte_end":633360,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::codecs::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":7119},{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7122}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633248,"byte_end":633306,"line_start":76,"line_end":76,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":7119},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633408,"byte_end":633416,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::PixmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7118},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633367,"byte_end":633399,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633476,"byte_end":633482,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":7118},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633439,"byte_end":633467,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7121},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633530,"byte_end":633535,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":7118},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633494,"byte_end":633521,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633597,"byte_end":633603,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":7118},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633547,"byte_end":633588,"line_start":88,"line_end":88,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633711,"byte_end":633726,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::codecs::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":7129},{"krate":0,"index":7130},{"krate":0,"index":7131},{"krate":0,"index":7132},{"krate":0,"index":7133}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633613,"byte_end":633675,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7129},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633770,"byte_end":633776,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633733,"byte_end":633761,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7130},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633824,"byte_end":633829,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633788,"byte_end":633815,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7131},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633878,"byte_end":633883,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::codecs::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633841,"byte_end":633869,"line_start":101,"line_end":101,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7132},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633945,"byte_end":633951,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633895,"byte_end":633936,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7133},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634012,"byte_end":634020,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::codecs::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<codecs::pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":633963,"byte_end":634003,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7139},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634223,"byte_end":634236,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634174,"byte_end":634218,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7141},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634319,"byte_end":634337,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634243,"byte_end":634314,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7143},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634389,"byte_end":634398,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::codecs::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634344,"byte_end":634384,"line_start":120,"line_end":120,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7145},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634456,"byte_end":634470,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634405,"byte_end":634451,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7147},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634518,"byte_end":634521,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634477,"byte_end":634513,"line_start":126,"line_end":126,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7149},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634575,"byte_end":634583,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634528,"byte_end":634570,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7151},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634640,"byte_end":634646,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::codecs::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634590,"byte_end":634635,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":7138},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634150,"byte_end":634167,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::codecs::pnm::header::ArbitraryTuplType","value":"pub enum ArbitraryTuplType {\n    BlackAndWhite,\n    BlackAndWhiteAlpha,\n    Grayscale,\n    GrayscaleAlpha,\n    RGB,\n    RGBAlpha,\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":7139},{"krate":0,"index":7141},{"krate":0,"index":7143},{"krate":0,"index":7145},{"krate":0,"index":7147},{"krate":0,"index":7149},{"krate":0,"index":7151}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634052,"byte_end":634116,"line_start":111,"line_end":111,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":635296,"byte_end":635310,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PnmSubtype>::magic_constant","value":"pub fn magic_constant(Self) -> &'static [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":635210,"byte_end":635284,"line_start":151,"line_end":151,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":635889,"byte_end":635904,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PnmSubtype>::sample_encoding","value":"pub fn sample_encoding(Self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":635817,"byte_end":635877,"line_start":164,"line_end":164,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":636267,"byte_end":636274,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmHeader>::subtype","value":"pub fn subtype(&Self) -> PnmSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":636189,"byte_end":636255,"line_start":176,"line_end":176,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":636789,"byte_end":636794,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"width","qualname":"<PnmHeader>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":636731,"byte_end":636777,"line_start":186,"line_end":186,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":637212,"byte_end":637218,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"height","qualname":"<PnmHeader>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":637153,"byte_end":637200,"line_start":196,"line_end":196,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":637676,"byte_end":637690,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PnmHeader>::maximal_sample","value":"pub fn maximal_sample(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":637585,"byte_end":637664,"line_start":206,"line_end":206,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638108,"byte_end":638117,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PnmHeader>::as_bitmap","value":"pub fn as_bitmap(&Self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638048,"byte_end":638096,"line_start":216,"line_end":216,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638348,"byte_end":638358,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PnmHeader>::as_graymap","value":"pub fn as_graymap(&Self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638287,"byte_end":638336,"line_start":224,"line_end":224,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638592,"byte_end":638601,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PnmHeader>::as_pixmap","value":"pub fn as_pixmap(&Self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638532,"byte_end":638580,"line_start":232,"line_end":232,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638834,"byte_end":638846,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PnmHeader>::as_arbitrary","value":"pub fn as_arbitrary(&Self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":638771,"byte_end":638822,"line_start":240,"line_end":240,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":639086,"byte_end":639091,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"write","qualname":"<PnmHeader>::write","value":"pub fn write(&Self, &mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":639028,"byte_end":639074,"line_start":248,"line_end":248,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::codecs::tga","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3898},{"krate":0,"index":3951}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8470,"byte_end":8493,"line_start":243,"line_end":243,"column_start":5,"column_end":28}},{"value":"/ Decoding of TGA Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":642337,"byte_end":642363,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":642364,"byte_end":642367,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":642368,"byte_end":642387,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/ <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\mod.rs","byte_start":642388,"byte_end":642440,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":644027,"byte_end":644037,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::codecs::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":643976,"byte_end":644015,"line_start":49,"line_end":49,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":644515,"byte_end":644518,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":644446,"byte_end":644503,"line_start":71,"line_end":71,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":659863,"byte_end":659872,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::codecs::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":3892},{"krate":0,"index":3893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661211,"byte_end":661221,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"TgaEncoder","qualname":"::codecs::tga::encoder::TgaEncoder","value":"TgaEncoder {  }","parent":null,"children":[{"krate":0,"index":3941}],"decl_id":null,"docs":" TGA encoder.\n","sig":null,"attributes":[{"value":"/ TGA encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661183,"byte_end":661199,"line_start":34,"line_end":34,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661358,"byte_end":661361,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaEncoder<W>>::new","value":"pub fn new(W) -> TgaEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661287,"byte_end":661346,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661691,"byte_end":661697,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"encode","qualname":"<TgaEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```buf``` that has dimensions ```width```\n and ```height``` and ```ColorType``` ```color_type```.","sig":null,"attributes":[{"value":"/ Encodes the image ```buf``` that has dimensions ```width```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661431,"byte_end":661494,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ and ```height``` and ```ColorType``` ```color_type```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661499,"byte_end":661557,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661562,"byte_end":661565,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The dimensions of the image must be between 0 and 65535 (inclusive) or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661570,"byte_end":661644,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ an error will be returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661649,"byte_end":661679,"line_start":49,"line_end":49,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":4024},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::codecs::tiff","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":4042},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4048},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4065},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":4074},{"krate":0,"index":4077},{"krate":0,"index":4080},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4099},{"krate":0,"index":4102},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4115},{"krate":0,"index":4120},{"krate":0,"index":4124},{"krate":0,"index":4132},{"krate":0,"index":4135},{"krate":0,"index":4137},{"krate":0,"index":4141}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8515,"byte_end":8539,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of TIFF Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672387,"byte_end":672427,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672428,"byte_end":672431,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672432,"byte_end":672509,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ lossless and lossy compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672510,"byte_end":672545,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672546,"byte_end":672549,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672550,"byte_end":672569,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":672570,"byte_end":672661,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":673163,"byte_end":673174,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::codecs::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[{"value":"/ Decoder for TIFF images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":673123,"byte_end":673151,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":673398,"byte_end":673401,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"pub fn new(R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[{"value":"/ Create a new TiffDecoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":673357,"byte_end":673386,"line_start":38,"line_end":38,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4115},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":677909,"byte_end":677919,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::codecs::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":677852,"byte_end":677897,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":681271,"byte_end":681282,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::codecs::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":4134}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[{"value":"/ Encoder for tiff images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":681232,"byte_end":681259,"line_start":239,"line_end":239,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":682008,"byte_end":682011,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"pub fn new(W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":681942,"byte_end":681996,"line_start":259,"line_end":259,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":682243,"byte_end":682249,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":682075,"byte_end":682166,"line_start":264,"line_end":264,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":682171,"byte_end":682174,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ 16-bit types assume the buffer is native endian.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":682179,"byte_end":682231,"line_start":266,"line_end":266,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::codecs::webp","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4148},{"krate":0,"index":4271},{"krate":0,"index":4287},{"krate":0,"index":4293},{"krate":0,"index":4317},{"krate":0,"index":4415},{"krate":0,"index":4448}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8562,"byte_end":8586,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/ Decoding of WebP Images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\mod.rs","byte_start":684117,"byte_end":684144,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686343,"byte_end":686354,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::codecs::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":4240},{"krate":0,"index":4241}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supports lossy RGB images or lossless RGBA images.\n","sig":null,"attributes":[{"value":"/ WebP Image format decoder. Currently only supports lossy RGB images or lossless RGBA images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686235,"byte_end":686331,"line_start":67,"line_end":67,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686544,"byte_end":686547,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebPDecoder from the Reader ```r```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686426,"byte_end":686479,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686484,"byte_end":686532,"line_start":75,"line_end":75,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":689806,"byte_end":689816,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::codecs::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":689749,"byte_end":689794,"line_start":176,"line_end":176,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":4448},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::codecs::webp::vp8","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":7344},{"krate":0,"index":7360},{"krate":0,"index":7362},{"krate":0,"index":7363},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7368},{"krate":0,"index":7369},{"krate":0,"index":7371},{"krate":0,"index":7384},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7395},{"krate":0,"index":7426},{"krate":0,"index":7428},{"krate":0,"index":7429},{"krate":0,"index":7431},{"krate":0,"index":7432},{"krate":0,"index":7434},{"krate":0,"index":7435},{"krate":0,"index":4520},{"krate":0,"index":4521},{"krate":0,"index":4523},{"krate":0,"index":4525},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4533},{"krate":0,"index":4535},{"krate":0,"index":4537},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":7437},{"krate":0,"index":7439},{"krate":0,"index":4565},{"krate":0,"index":7441},{"krate":0,"index":7460},{"krate":0,"index":7462},{"krate":0,"index":7465},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4578},{"krate":0,"index":7466},{"krate":0,"index":7475},{"krate":0,"index":7477},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7495},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":4586},{"krate":0,"index":7501},{"krate":0,"index":7511},{"krate":0,"index":7513},{"krate":0,"index":7514},{"krate":0,"index":4591},{"krate":0,"index":4619},{"krate":0,"index":4652},{"krate":0,"index":4655},{"krate":0,"index":4657},{"krate":0,"index":4659},{"krate":0,"index":4661},{"krate":0,"index":4663},{"krate":0,"index":4665},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4674},{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"/ An implementation of the VP8 Video Codec","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747505,"byte_end":747549,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747550,"byte_end":747553,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a partial implementation of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747554,"byte_end":747610,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/ VP8 video format as defined in RFC-6386.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747611,"byte_end":747655,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747656,"byte_end":747659,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It decodes Keyframes only.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747660,"byte_end":747690,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/ VP8 is the underpinning of the WebP image format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747691,"byte_end":747743,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747744,"byte_end":747747,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747748,"byte_end":747767,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747768,"byte_end":747861,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747862,"byte_end":747984,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"/ of the VP8 format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":747985,"byte_end":748006,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":748007,"byte_end":748010,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7482},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778392,"byte_end":778397,"line_start":849,"line_end":849,"column_start":12,"column_end":17},"name":"Frame","qualname":"::codecs::webp::vp8::Frame","value":"Frame { width, height, ybuf, ubuf, vbuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778295,"byte_end":778347,"line_start":847,"line_end":847,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7483},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778444,"byte_end":778449,"line_start":851,"line_end":851,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778404,"byte_end":778435,"line_start":850,"line_end":850,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7484},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778502,"byte_end":778508,"line_start":854,"line_end":854,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778461,"byte_end":778493,"line_start":853,"line_end":853,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7485},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778560,"byte_end":778564,"line_start":857,"line_end":857,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::codecs::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778520,"byte_end":778551,"line_start":856,"line_end":856,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7486},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778620,"byte_end":778624,"line_start":860,"line_end":860,"column_start":9,"column_end":13},"name":"ubuf","qualname":"::codecs::webp::vp8::Frame::ubuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" The blue plane of the frame\n","sig":null,"attributes":[{"value":"/ The blue plane of the frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778580,"byte_end":778611,"line_start":859,"line_end":859,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7487},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778679,"byte_end":778683,"line_start":863,"line_end":863,"column_start":9,"column_end":13},"name":"vbuf","qualname":"::codecs::webp::vp8::Frame::vbuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" The red plane of the frame\n","sig":null,"attributes":[{"value":"/ The red plane of the frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778640,"byte_end":778670,"line_start":862,"line_end":862,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7488},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778754,"byte_end":778762,"line_start":866,"line_end":866,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::codecs::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778699,"byte_end":778745,"line_start":865,"line_end":865,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778858,"byte_end":778869,"line_start":871,"line_end":871,"column_start":9,"column_end":20},"name":"for_display","qualname":"::codecs::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778793,"byte_end":778849,"line_start":870,"line_end":870,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":7491},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":779000,"byte_end":779010,"line_start":876,"line_end":876,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::codecs::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":7482},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778901,"byte_end":778958,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":778963,"byte_end":778991,"line_start":875,"line_end":875,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":779570,"byte_end":779578,"line_start":895,"line_end":895,"column_start":12,"column_end":20},"name":"fill_rgb","qualname":"<Frame>::fill_rgb","value":"pub fn fill_rgb(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Conversion values from https://docs.microsoft.com/en-us/windows/win32/medfound/recommended-8-bit-yuv-formats-for-video-rendering#converting-8-bit-yuv-to-rgb888\n","sig":null,"attributes":[{"value":"/ Conversion values from https://docs.microsoft.com/en-us/windows/win32/medfound/recommended-8-bit-yuv-formats-for-video-rendering#converting-8-bit-yuv-to-rgb888","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":779395,"byte_end":779558,"line_start":894,"line_end":894,"column_start":5,"column_end":168}}]},{"kind":"Method","id":{"krate":0,"index":4590},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":780421,"byte_end":780433,"line_start":917,"line_end":917,"column_start":12,"column_end":24},"name":"get_buf_size","qualname":"<Frame>::get_buf_size","value":"pub fn get_buf_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer size\n","sig":null,"attributes":[{"value":"/ Gets the buffer size","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":780385,"byte_end":780409,"line_start":916,"line_end":916,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4591},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":780766,"byte_end":780776,"line_start":942,"line_end":942,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::codecs::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4605},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":780708,"byte_end":780723,"line_start":939,"line_end":939,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":780724,"byte_end":780727,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":780728,"byte_end":780754,"line_start":941,"line_end":941,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":781526,"byte_end":781529,"line_start":981,"line_end":981,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"pub fn new(R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":781422,"byte_end":781447,"line_start":979,"line_end":979,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":781452,"byte_end":781514,"line_start":980,"line_end":980,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":817798,"byte_end":817810,"line_start":2028,"line_end":2028,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"pub fn decode_frame(&mut Self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame\n","sig":null,"attributes":[{"value":"/ Decodes the current frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":817757,"byte_end":817786,"line_start":2027,"line_end":2027,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844029,"byte_end":844035,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":4711}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":843944,"byte_end":844017,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844216,"byte_end":844219,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844136,"byte_end":844204,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844611,"byte_end":844625,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"pub fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844330,"byte_end":844424,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844429,"byte_end":844441,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844446,"byte_end":844508,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844513,"byte_end":844516,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844521,"byte_end":844599,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":7516},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844914,"byte_end":844919,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":7517},{"krate":0,"index":7518},{"krate":0,"index":7519},{"krate":0,"index":7520}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844857,"byte_end":844885,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7523},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845201,"byte_end":845206,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7524}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845078,"byte_end":845132,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845308,"byte_end":845311,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845252,"byte_end":845296,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845539,"byte_end":845549,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845502,"byte_end":845527,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4723},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845761,"byte_end":845766,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845726,"byte_end":845749,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845855,"byte_end":845861,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845815,"byte_end":845843,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4725},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845963,"byte_end":845973,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"buffer_mut","qualname":"<Frame>::buffer_mut","value":"pub fn buffer_mut(&mut Self) -> &mut RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable image buffer\n","sig":null,"attributes":[{"value":"/ Returns a mutable image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845917,"byte_end":845951,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846081,"byte_end":846092,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846041,"byte_end":846069,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4727},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846181,"byte_end":846185,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846145,"byte_end":846169,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846267,"byte_end":846270,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846231,"byte_end":846255,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846535,"byte_end":846554,"line_start":116,"line_end":116,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"pub fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846330,"byte_end":846378,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846383,"byte_end":846386,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846391,"byte_end":846405,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846410,"byte_end":846413,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846418,"byte_end":846425,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846430,"byte_end":846451,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846456,"byte_end":846511,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846516,"byte_end":846523,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847218,"byte_end":847242,"line_start":136,"line_end":136,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"pub fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846695,"byte_end":846777,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846782,"byte_end":846785,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846790,"byte_end":846884,"line_start":124,"line_end":124,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846889,"byte_end":846967,"line_start":125,"line_end":125,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846972,"byte_end":846975,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846980,"byte_end":846994,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846999,"byte_end":847002,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847007,"byte_end":847014,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847019,"byte_end":847047,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847052,"byte_end":847073,"line_start":131,"line_end":131,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847078,"byte_end":847081,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847086,"byte_end":847131,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847136,"byte_end":847194,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":847199,"byte_end":847206,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4733},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":848422,"byte_end":848436,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"pub fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":848196,"byte_end":848259,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":848264,"byte_end":848267,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":848272,"byte_end":848367,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":848372,"byte_end":848410,"line_start":164,"line_end":164,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":855913,"byte_end":855919,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":4850}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":855873,"byte_end":855901,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857088,"byte_end":857097,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":4875}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857040,"byte_end":857076,"line_start":76,"line_end":76,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858340,"byte_end":858344,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":4897}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858134,"byte_end":858167,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858168,"byte_end":858171,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858172,"byte_end":858258,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858259,"byte_end":858262,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858263,"byte_end":858328,"line_start":132,"line_end":132,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860921,"byte_end":860928,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":4924}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860695,"byte_end":860736,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860737,"byte_end":860740,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860741,"byte_end":860831,"line_start":222,"line_end":222,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860832,"byte_end":860835,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860836,"byte_end":860909,"line_start":224,"line_end":224,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863250,"byte_end":863265,"line_start":305,"line_end":305,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863201,"byte_end":863238,"line_start":304,"line_end":304,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":864571,"byte_end":864584,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":864524,"byte_end":864559,"line_start":365,"line_end":365,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4990},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865956,"byte_end":865974,"line_start":431,"line_end":431,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865907,"byte_end":865944,"line_start":430,"line_end":430,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5010},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867117,"byte_end":867133,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867070,"byte_end":867105,"line_start":482,"line_end":482,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7539},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870683,"byte_end":870694,"line_start":607,"line_end":607,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868302,"byte_end":868326,"line_start":538,"line_end":538,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868327,"byte_end":868330,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868331,"byte_end":868425,"line_start":540,"line_end":540,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868426,"byte_end":868515,"line_start":541,"line_end":541,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868516,"byte_end":868611,"line_start":542,"line_end":542,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868612,"byte_end":868707,"line_start":543,"line_end":543,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868708,"byte_end":868746,"line_start":544,"line_end":544,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868747,"byte_end":868750,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868751,"byte_end":868850,"line_start":546,"line_end":546,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868851,"byte_end":868886,"line_start":547,"line_end":547,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868887,"byte_end":868890,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868891,"byte_end":868936,"line_start":549,"line_end":549,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868937,"byte_end":868990,"line_start":550,"line_end":550,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":868991,"byte_end":869027,"line_start":551,"line_end":551,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869028,"byte_end":869066,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869067,"byte_end":869070,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869071,"byte_end":869147,"line_start":554,"line_end":554,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869148,"byte_end":869151,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869152,"byte_end":869239,"line_start":556,"line_end":556,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869240,"byte_end":869338,"line_start":557,"line_end":557,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869339,"byte_end":869414,"line_start":558,"line_end":558,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869415,"byte_end":869418,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869419,"byte_end":869463,"line_start":560,"line_end":560,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869464,"byte_end":869512,"line_start":561,"line_end":561,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869513,"byte_end":869569,"line_start":562,"line_end":562,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869570,"byte_end":869573,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869574,"byte_end":869589,"line_start":564,"line_end":564,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869590,"byte_end":869593,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869594,"byte_end":869645,"line_start":566,"line_end":566,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869646,"byte_end":869649,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869650,"byte_end":869657,"line_start":568,"line_end":568,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869658,"byte_end":869689,"line_start":569,"line_end":569,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869690,"byte_end":869693,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869694,"byte_end":869734,"line_start":571,"line_end":571,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869735,"byte_end":869738,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869739,"byte_end":869761,"line_start":573,"line_end":573,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869762,"byte_end":869786,"line_start":574,"line_end":574,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869787,"byte_end":869837,"line_start":575,"line_end":575,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869838,"byte_end":869888,"line_start":576,"line_end":576,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869889,"byte_end":869898,"line_start":577,"line_end":577,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869899,"byte_end":869904,"line_start":578,"line_end":578,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869905,"byte_end":869912,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869913,"byte_end":869916,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869917,"byte_end":869976,"line_start":581,"line_end":581,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869977,"byte_end":869980,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869981,"byte_end":869994,"line_start":583,"line_end":583,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":869995,"byte_end":870062,"line_start":584,"line_end":584,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870063,"byte_end":870066,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb8();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870067,"byte_end":870130,"line_start":586,"line_end":586,"column_start":1,"column_end":64}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870131,"byte_end":870188,"line_start":587,"line_end":587,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870189,"byte_end":870218,"line_start":588,"line_end":588,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870219,"byte_end":870252,"line_start":589,"line_end":589,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870253,"byte_end":870269,"line_start":590,"line_end":590,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870270,"byte_end":870309,"line_start":591,"line_end":591,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870310,"byte_end":870319,"line_start":592,"line_end":592,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870320,"byte_end":870327,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870328,"byte_end":870331,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870332,"byte_end":870390,"line_start":595,"line_end":595,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870391,"byte_end":870398,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870399,"byte_end":870402,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870403,"byte_end":870443,"line_start":598,"line_end":598,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870444,"byte_end":870447,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870448,"byte_end":870461,"line_start":600,"line_end":600,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870462,"byte_end":870498,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870499,"byte_end":870502,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba8();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870503,"byte_end":870565,"line_start":603,"line_end":603,"column_start":1,"column_end":63}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma8();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870566,"byte_end":870625,"line_start":604,"line_end":604,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870626,"byte_end":870633,"line_start":605,"line_end":605,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5032},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871265,"byte_end":871273,"line_start":625,"line_end":625,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870980,"byte_end":871027,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871032,"byte_end":871068,"line_start":621,"line_end":621,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871073,"byte_end":871076,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871081,"byte_end":871171,"line_start":623,"line_end":623,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871176,"byte_end":871253,"line_start":624,"line_end":624,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":5033},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871679,"byte_end":871687,"line_start":639,"line_end":639,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871630,"byte_end":871667,"line_start":638,"line_end":638,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5034},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871787,"byte_end":871793,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"pub fn as_raw(&Self) -> &Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871738,"byte_end":871775,"line_start":643,"line_end":643,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5035},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871898,"byte_end":871908,"line_start":649,"line_end":649,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871847,"byte_end":871886,"line_start":648,"line_end":648,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5036},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872017,"byte_end":872022,"line_start":654,"line_end":654,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":871977,"byte_end":872005,"line_start":653,"line_end":653,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872110,"byte_end":872116,"line_start":659,"line_end":659,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872069,"byte_end":872098,"line_start":658,"line_end":658,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5039},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872501,"byte_end":872507,"line_start":671,"line_end":671,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872368,"byte_end":872422,"line_start":669,"line_end":669,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872427,"byte_end":872489,"line_start":670,"line_end":670,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5040},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873041,"byte_end":873045,"line_start":684,"line_end":684,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"pub fn rows(&Self) -> Rows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872694,"byte_end":872746,"line_start":679,"line_end":679,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872751,"byte_end":872754,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872759,"byte_end":872850,"line_start":681,"line_end":681,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872855,"byte_end":872948,"line_start":682,"line_end":682,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":872953,"byte_end":873029,"line_start":683,"line_end":683,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5041},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873396,"byte_end":873412,"line_start":693,"line_end":693,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n Starting from the top left.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873139,"byte_end":873183,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873188,"byte_end":873241,"line_start":689,"line_end":689,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873246,"byte_end":873281,"line_start":690,"line_end":690,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873286,"byte_end":873348,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ Starting from the top left.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873353,"byte_end":873384,"line_start":692,"line_end":692,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5042},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873744,"byte_end":873758,"line_start":705,"line_end":705,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"pub fn enumerate_rows(&Self) -> EnumerateRows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873593,"byte_end":873635,"line_start":702,"line_end":702,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873640,"byte_end":873692,"line_start":703,"line_end":703,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873697,"byte_end":873732,"line_start":704,"line_end":704,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5043},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":874079,"byte_end":874088,"line_start":718,"line_end":718,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873913,"byte_end":873967,"line_start":713,"line_end":713,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873972,"byte_end":873975,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873980,"byte_end":873992,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":873997,"byte_end":874000,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":874005,"byte_end":874067,"line_start":717,"line_end":717,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5044},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":874579,"byte_end":874596,"line_start":731,"line_end":731,"column_start":12,"column_end":29},"name":"get_pixel_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_checked","value":"pub fn get_pixel_checked(&Self, u32, u32) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)` or returns `None` if\n the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)` or returns `None` if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":874434,"byte_end":874509,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ the index is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":874514,"byte_end":874567,"line_start":730,"line_end":730,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5053},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":876517,"byte_end":876530,"line_start":780,"line_end":780,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"pub fn sample_layout(&Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":876437,"byte_end":876505,"line_start":779,"line_end":779,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877144,"byte_end":877161,"line_start":791,"line_end":791,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"pub fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":876733,"byte_end":876807,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":876812,"byte_end":876815,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":876820,"byte_end":876908,"line_start":787,"line_end":787,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":876913,"byte_end":877006,"line_start":788,"line_end":788,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877011,"byte_end":877105,"line_start":789,"line_end":789,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877110,"byte_end":877132,"line_start":790,"line_end":790,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5055},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877721,"byte_end":877736,"line_start":807,"line_end":807,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"pub fn as_flat_samples(&Self) -> FlatSamples<&[P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877579,"byte_end":877622,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877627,"byte_end":877630,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":877635,"byte_end":877709,"line_start":806,"line_end":806,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5056},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878246,"byte_end":878265,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"pub fn as_flat_samples_mut(&mut Self) -> FlatSamples<&mut [P::Subpixel]> where\nContainer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878096,"byte_end":878147,"line_start":819,"line_end":819,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878152,"byte_end":878155,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878160,"byte_end":878234,"line_start":821,"line_end":821,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5061},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879053,"byte_end":879063,"line_start":847,"line_end":847,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878979,"byte_end":879041,"line_start":846,"line_end":846,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5062},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879623,"byte_end":879631,"line_start":860,"line_end":860,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> RowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879268,"byte_end":879328,"line_start":855,"line_end":855,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879333,"byte_end":879336,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879341,"byte_end":879432,"line_start":857,"line_end":857,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879437,"byte_end":879530,"line_start":858,"line_end":858,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879535,"byte_end":879611,"line_start":859,"line_end":859,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879901,"byte_end":879921,"line_start":867,"line_end":867,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879739,"byte_end":879783,"line_start":864,"line_end":864,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879788,"byte_end":879841,"line_start":865,"line_end":865,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":879846,"byte_end":879889,"line_start":866,"line_end":866,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5064},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880295,"byte_end":880313,"line_start":880,"line_end":880,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"pub fn enumerate_rows_mut(&mut Self) -> EnumerateRowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880136,"byte_end":880178,"line_start":877,"line_end":877,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880183,"byte_end":880235,"line_start":878,"line_end":878,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880240,"byte_end":880283,"line_start":879,"line_end":879,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5065},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880676,"byte_end":880689,"line_start":894,"line_end":894,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880502,"byte_end":880564,"line_start":889,"line_end":889,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880569,"byte_end":880572,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880577,"byte_end":880589,"line_start":891,"line_end":891,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880594,"byte_end":880597,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":880602,"byte_end":880664,"line_start":893,"line_end":893,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5066},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881204,"byte_end":881225,"line_start":907,"line_end":907,"column_start":12,"column_end":33},"name":"get_pixel_mut_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut_checked","value":"pub fn get_pixel_mut_checked(&mut Self, u32, u32) -> Option<&mut P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)` or returns\n `None` if the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)` or returns","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881051,"byte_end":881124,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ `None` if the index is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881129,"byte_end":881192,"line_start":906,"line_end":906,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5068},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881862,"byte_end":881871,"line_start":927,"line_end":927,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881713,"byte_end":881750,"line_start":922,"line_end":922,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881755,"byte_end":881758,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881763,"byte_end":881775,"line_start":924,"line_end":924,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881780,"byte_end":881783,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881788,"byte_end":881850,"line_start":926,"line_end":926,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882385,"byte_end":882389,"line_start":944,"line_end":944,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882115,"byte_end":882168,"line_start":938,"line_end":938,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882173,"byte_end":882176,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882181,"byte_end":882237,"line_start":940,"line_end":940,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg, png, ico, pnm, bmp and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882242,"byte_end":882289,"line_start":941,"line_end":941,"column_start":5,"column_end":52}},{"value":"/ tiff files are supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882294,"byte_end":882323,"line_start":942,"line_end":942,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883098,"byte_end":883114,"line_start":971,"line_end":971,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>, P: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882891,"byte_end":882946,"line_start":966,"line_end":966,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882951,"byte_end":882976,"line_start":967,"line_end":967,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882981,"byte_end":882984,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882989,"byte_end":883061,"line_start":969,"line_end":969,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883066,"byte_end":883086,"line_start":970,"line_end":970,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":5082},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883980,"byte_end":883988,"line_start":1001,"line_end":1001,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ImageBuffer<P, Container>>::write_to","value":"pub fn write_to<W, F>(&Self, &mut W, F) -> ImageResult<()> where\nW: std::io::Write + std::io::Seek, F: Into<ImageOutputFormat>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Writes the buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the buffer to a writer in the specified format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883669,"byte_end":883727,"line_start":994,"line_end":994,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883732,"byte_end":883735,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883740,"byte_end":883790,"line_start":996,"line_end":996,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883795,"byte_end":883865,"line_start":997,"line_end":997,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883870,"byte_end":883873,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883878,"byte_end":883943,"line_start":999,"line_end":999,"column_start":5,"column_end":70}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883948,"byte_end":883968,"line_start":1000,"line_end":1000,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889694,"byte_end":889697,"line_start":1198,"line_end":1198,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889504,"byte_end":889565,"line_start":1193,"line_end":1193,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889570,"byte_end":889573,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889578,"byte_end":889590,"line_start":1195,"line_end":1195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889595,"byte_end":889598,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889603,"byte_end":889682,"line_start":1197,"line_end":1197,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890235,"byte_end":890245,"line_start":1214,"line_end":1214,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890055,"byte_end":890106,"line_start":1209,"line_end":1209,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890111,"byte_end":890114,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890119,"byte_end":890131,"line_start":1211,"line_end":1211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890136,"byte_end":890139,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890144,"byte_end":890223,"line_start":1213,"line_end":1213,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5131},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890760,"byte_end":890767,"line_start":1229,"line_end":1229,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890466,"byte_end":890548,"line_start":1222,"line_end":1222,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890553,"byte_end":890556,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890561,"byte_end":890631,"line_start":1224,"line_end":1224,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890636,"byte_end":890639,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890644,"byte_end":890656,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890661,"byte_end":890664,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":890669,"byte_end":890748,"line_start":1228,"line_end":1228,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5133},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891178,"byte_end":891186,"line_start":1242,"line_end":1242,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891058,"byte_end":891112,"line_start":1240,"line_end":1240,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891117,"byte_end":891166,"line_start":1241,"line_end":1241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5134},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891473,"byte_end":891481,"line_start":1252,"line_end":1252,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891373,"byte_end":891434,"line_start":1250,"line_end":1250,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891439,"byte_end":891461,"line_start":1251,"line_end":1251,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891609,"byte_end":891622,"line_start":1258,"line_end":1258,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":5137}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891543,"byte_end":891598,"line_start":1257,"line_end":1257,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5137},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891809,"byte_end":891816,"line_start":1263,"line_end":1263,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":5135},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891632,"byte_end":891673,"line_start":1259,"line_end":1259,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891678,"byte_end":891681,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891686,"byte_end":891772,"line_start":1261,"line_end":1261,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891777,"byte_end":891801,"line_start":1262,"line_end":1262,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":892084,"byte_end":892098,"line_start":1271,"line_end":1271,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891894,"byte_end":891954,"line_start":1268,"line_end":1268,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891959,"byte_end":892027,"line_start":1269,"line_end":1269,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":892032,"byte_end":892072,"line_start":1270,"line_end":1270,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":5148},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894148,"byte_end":894156,"line_start":1334,"line_end":1334,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894109,"byte_end":894138,"line_start":1333,"line_end":1333,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":5149},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894245,"byte_end":894254,"line_start":1336,"line_end":1336,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894190,"byte_end":894235,"line_start":1335,"line_end":1335,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894334,"byte_end":894343,"line_start":1338,"line_end":1338,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894289,"byte_end":894324,"line_start":1337,"line_end":1337,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":5151},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894439,"byte_end":894453,"line_start":1340,"line_end":1340,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894378,"byte_end":894429,"line_start":1339,"line_end":1339,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":5156},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":895065,"byte_end":895076,"line_start":1352,"line_end":1352,"column_start":10,"column_end":21},"name":"Rgb32FImage","qualname":"::buffer_::Rgb32FImage","value":"ImageBuffer<Rgb<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGB pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGB pixels,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894942,"byte_end":894990,"line_start":1350,"line_end":1350,"column_start":1,"column_end":49}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":894991,"byte_end":895055,"line_start":1351,"line_end":1351,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":895237,"byte_end":895249,"line_start":1356,"line_end":1356,"column_start":10,"column_end":22},"name":"Rgba32FImage","qualname":"::buffer_::Rgba32FImage","value":"ImageBuffer<Rgba<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGBA pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGBA pixels,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":895113,"byte_end":895162,"line_start":1354,"line_end":1354,"column_start":1,"column_end":50}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":895163,"byte_end":895227,"line_start":1355,"line_end":1355,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7571},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904463,"byte_end":904465,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904430,"byte_end":904458,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904526,"byte_end":904529,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904471,"byte_end":904521,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7575},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904584,"byte_end":904588,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904535,"byte_end":904579,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7577},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904643,"byte_end":904648,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904594,"byte_end":904638,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7579},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904689,"byte_end":904692,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904655,"byte_end":904684,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7581},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904754,"byte_end":904758,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904698,"byte_end":904749,"line_start":22,"line_end":22,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7583},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904792,"byte_end":904797,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904764,"byte_end":904787,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7585},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904832,"byte_end":904838,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904803,"byte_end":904827,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7587},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904879,"byte_end":904885,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ColorType::Rgb32F","value":"ColorType::Rgb32F","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904845,"byte_end":904874,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7589},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904926,"byte_end":904933,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ColorType::Rgba32F","value":"ColorType::Rgba32F","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904891,"byte_end":904921,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":7570},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904414,"byte_end":904423,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Rgb32F,\n    Rgba32F,\n}","parent":null,"children":[{"krate":0,"index":7571},{"krate":0,"index":7573},{"krate":0,"index":7575},{"krate":0,"index":7577},{"krate":0,"index":7579},{"krate":0,"index":7581},{"krate":0,"index":7583},{"krate":0,"index":7585},{"krate":0,"index":7587},{"krate":0,"index":7589}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904275,"byte_end":904335,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904387,"byte_end":904404,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":905046,"byte_end":905061,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"pub fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904959,"byte_end":905034,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5188},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":905492,"byte_end":905501,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"pub fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":905439,"byte_end":905480,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":905779,"byte_end":905788,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"pub fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":905700,"byte_end":905767,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906121,"byte_end":906135,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"pub fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":905987,"byte_end":906083,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906088,"byte_end":906109,"line_start":69,"line_end":69,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5193},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906298,"byte_end":906311,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906222,"byte_end":906286,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906987,"byte_end":906989,"line_start":93,"line_end":93,"column_start":5,"column_end":7},"name":"A8","qualname":"::color::ExtendedColorType::A8","value":"ExtendedColorType::A8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 8-bit alpha\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906958,"byte_end":906982,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907028,"byte_end":907030,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906995,"byte_end":907023,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7610},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907091,"byte_end":907094,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907036,"byte_end":907086,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907149,"byte_end":907153,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907100,"byte_end":907144,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7614},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907208,"byte_end":907213,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907159,"byte_end":907203,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7616},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907252,"byte_end":907254,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907219,"byte_end":907247,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7618},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907315,"byte_end":907318,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907260,"byte_end":907310,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7620},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907373,"byte_end":907377,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907324,"byte_end":907368,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7622},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907432,"byte_end":907437,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907383,"byte_end":907427,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7624},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907476,"byte_end":907478,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907443,"byte_end":907471,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7626},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907539,"byte_end":907542,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907484,"byte_end":907534,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907597,"byte_end":907601,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907548,"byte_end":907592,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7630},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907656,"byte_end":907661,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907607,"byte_end":907651,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907700,"byte_end":907702,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907667,"byte_end":907695,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7634},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907763,"byte_end":907766,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907708,"byte_end":907758,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7636},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907821,"byte_end":907825,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907772,"byte_end":907816,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7638},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907880,"byte_end":907885,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907831,"byte_end":907875,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7640},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907925,"byte_end":907928,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907891,"byte_end":907920,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7642},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907990,"byte_end":907994,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":907934,"byte_end":907985,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7644},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908050,"byte_end":908055,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908000,"byte_end":908045,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7646},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908111,"byte_end":908117,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908061,"byte_end":908106,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7648},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908172,"byte_end":908176,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908123,"byte_end":908167,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7650},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908231,"byte_end":908236,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908182,"byte_end":908226,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7652},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908300,"byte_end":908306,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ExtendedColorType::Rgb32F","value":"ExtendedColorType::Rgb32F","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908266,"byte_end":908295,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7654},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908347,"byte_end":908354,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ExtendedColorType::Rgba32F","value":"ExtendedColorType::Rgba32F","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908312,"byte_end":908342,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7656},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908583,"byte_end":908590,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":7605},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908361,"byte_end":908455,"line_start":145,"line_end":145,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908460,"byte_end":908552,"line_start":146,"line_end":146,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908557,"byte_end":908578,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906934,"byte_end":906951,"line_start":91,"line_end":91,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"pub enum ExtendedColorType {\n    A8,\n    L1,\n    La1,\n    Rgb1,\n    Rgba1,\n    L2,\n    La2,\n    Rgb2,\n    Rgba2,\n    L4,\n    La4,\n    Rgb4,\n    Rgba4,\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Bgr8,\n    Bgra8,\n    Rgb32F,\n    Rgba32F,\n    Unknown(u8),\n}","parent":null,"children":[{"krate":0,"index":7606},{"krate":0,"index":7608},{"krate":0,"index":7610},{"krate":0,"index":7612},{"krate":0,"index":7614},{"krate":0,"index":7616},{"krate":0,"index":7618},{"krate":0,"index":7620},{"krate":0,"index":7622},{"krate":0,"index":7624},{"krate":0,"index":7626},{"krate":0,"index":7628},{"krate":0,"index":7630},{"krate":0,"index":7632},{"krate":0,"index":7634},{"krate":0,"index":7636},{"krate":0,"index":7638},{"krate":0,"index":7640},{"krate":0,"index":7642},{"krate":0,"index":7644},{"krate":0,"index":7646},{"krate":0,"index":7648},{"krate":0,"index":7650},{"krate":0,"index":7652},{"krate":0,"index":7654},{"krate":0,"index":7656}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906409,"byte_end":906472,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906473,"byte_end":906476,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906477,"byte_end":906574,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906575,"byte_end":906672,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906673,"byte_end":906702,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906703,"byte_end":906706,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906707,"byte_end":906799,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906800,"byte_end":906855,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":906907,"byte_end":906924,"line_start":90,"line_end":90,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908842,"byte_end":908855,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908628,"byte_end":908683,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908688,"byte_end":908691,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908696,"byte_end":908790,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908795,"byte_end":908830,"line_start":155,"line_end":155,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7862},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":914849,"byte_end":914852,"line_start":363,"line_end":363,"column_start":16,"column_end":19},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910906,"byte_end":910916,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910917,"byte_end":910939,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7891},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":914940,"byte_end":914944,"line_start":365,"line_end":365,"column_start":16,"column_end":20},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910906,"byte_end":910916,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910917,"byte_end":910939,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7920},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915027,"byte_end":915031,"line_start":367,"line_end":367,"column_start":16,"column_end":20},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910906,"byte_end":910916,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910917,"byte_end":910939,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7949},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915135,"byte_end":915140,"line_start":369,"line_end":369,"column_start":16,"column_end":21},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910906,"byte_end":910916,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":910917,"byte_end":910939,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":5199},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915295,"byte_end":915308,"line_start":373,"line_end":373,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::color::FromPrimitive","value":"FromPrimitive<Component>","parent":null,"children":[{"krate":0,"index":5201}],"decl_id":null,"docs":" Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.\n","sig":null,"attributes":[{"value":"/ Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915177,"byte_end":915284,"line_start":372,"line_end":372,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915390,"byte_end":915404,"line_start":375,"line_end":375,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::color::FromPrimitive::from_primitive","value":"pub fn from_primitive(Component) -> Self","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":" Converts from any pixel component type to this type.\n","sig":null,"attributes":[{"value":"/ Converts from any pixel component type to this type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915326,"byte_end":915382,"line_start":374,"line_end":374,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":917226,"byte_end":917235,"line_start":441,"line_end":441,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":5221}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":917154,"byte_end":917215,"line_start":440,"line_end":440,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":917325,"byte_end":917335,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":917249,"byte_end":917317,"line_start":442,"line_end":442,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7979},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934793,"byte_end":934803,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934746,"byte_end":934788,"line_start":56,"line_end":56,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7982},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934879,"byte_end":934890,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934821,"byte_end":934874,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7985},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934959,"byte_end":934968,"line_start":63,"line_end":63,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934913,"byte_end":934954,"line_start":62,"line_end":62,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7988},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935042,"byte_end":935052,"line_start":66,"line_end":66,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934985,"byte_end":935037,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7991},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935118,"byte_end":935129,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935070,"byte_end":935113,"line_start":68,"line_end":68,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7994},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935208,"byte_end":935220,"line_start":72,"line_end":72,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935149,"byte_end":935203,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7997},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935292,"byte_end":935302,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935245,"byte_end":935287,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8000},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935379,"byte_end":935390,"line_start":78,"line_end":78,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935321,"byte_end":935374,"line_start":77,"line_end":77,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8003},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935463,"byte_end":935474,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"ImageRgb32F","qualname":"::dynimage::DynamicImage::ImageRgb32F","value":"DynamicImage::ImageRgb32F(Rgb32FImage)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935410,"byte_end":935458,"line_start":80,"line_end":80,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8006},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935558,"byte_end":935570,"line_start":84,"line_end":84,"column_start":5,"column_end":17},"name":"ImageRgba32F","qualname":"::dynimage::DynamicImage::ImageRgba32F","value":"DynamicImage::ImageRgba32F(Rgba32FImage)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb with alpha","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":935494,"byte_end":935553,"line_start":83,"line_end":83,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":7978},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934727,"byte_end":934739,"line_start":55,"line_end":55,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n    ImageLuma8(GrayImage),\n    ImageLumaA8(GrayAlphaImage),\n    ImageRgb8(RgbImage),\n    ImageRgba8(RgbaImage),\n    ImageLuma16(Gray16Image),\n    ImageLumaA16(GrayAlpha16Image),\n    ImageRgb16(Rgb16Image),\n    ImageRgba16(Rgba16Image),\n    ImageRgb32F(Rgb32FImage),\n    ImageRgba32F(Rgba32FImage),\n}","parent":null,"children":[{"krate":0,"index":7979},{"krate":0,"index":7982},{"krate":0,"index":7985},{"krate":0,"index":7988},{"krate":0,"index":7991},{"krate":0,"index":7994},{"krate":0,"index":7997},{"krate":0,"index":8000},{"krate":0,"index":8003},{"krate":0,"index":8006}],"decl_id":null,"docs":" A Dynamic Image","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933712,"byte_end":933731,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933732,"byte_end":933735,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This represents a _matrix_ of _pixels_ which are _convertible_ from and to an _RGBA_","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933736,"byte_end":933824,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ representation. More variants that adhere to these principles may get added in the future, in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933825,"byte_end":933922,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ particular to cover other combinations typically used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933923,"byte_end":933981,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933982,"byte_end":933985,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933986,"byte_end":933997,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":933998,"byte_end":934001,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This type can act as a converter between specific `ImageBuffer` instances.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934002,"byte_end":934080,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934081,"byte_end":934084,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934085,"byte_end":934092,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use image::{DynamicImage, GrayImage, RgbImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934093,"byte_end":934144,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934145,"byte_end":934148,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let rgb: RgbImage = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934149,"byte_end":934195,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ let luma: GrayImage = DynamicImage::ImageRgb8(rgb).into_luma8();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934196,"byte_end":934264,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934265,"byte_end":934272,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934273,"byte_end":934276,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Design","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934277,"byte_end":934289,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934290,"byte_end":934293,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ There is no goal to provide an all-encompassing type with all possible memory layouts. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934294,"byte_end":934389,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ would hardly be feasible as a simple enum, due to the sheer number of combinations of channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934390,"byte_end":934487,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ kinds, channel order, and bit depth. Rather, this type provides an opinionated selection with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934488,"byte_end":934585,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ normalized channel order which can store common pixel values without loss.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934586,"byte_end":934664,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":934700,"byte_end":934717,"line_start":54,"line_end":54,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937205,"byte_end":937214,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937131,"byte_end":937193,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937417,"byte_end":937428,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937317,"byte_end":937371,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937376,"byte_end":937405,"line_start":127,"line_end":127,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5465},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937605,"byte_end":937613,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937532,"byte_end":937593,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937789,"byte_end":937798,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937715,"byte_end":937777,"line_start":137,"line_end":137,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5467},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937975,"byte_end":937985,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"pub fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937901,"byte_end":937963,"line_start":142,"line_end":142,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5468},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938189,"byte_end":938201,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"pub fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938089,"byte_end":938143,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938148,"byte_end":938177,"line_start":148,"line_end":148,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938379,"byte_end":938388,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"pub fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938306,"byte_end":938367,"line_start":153,"line_end":153,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5470},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938565,"byte_end":938575,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"pub fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938491,"byte_end":938553,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5471},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938752,"byte_end":938762,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"new_rgb32f","qualname":"<DynamicImage>::new_rgb32f","value":"pub fn new_rgb32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938679,"byte_end":938740,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5472},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938940,"byte_end":938951,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"new_rgba32f","qualname":"<DynamicImage>::new_rgba32f","value":"pub fn new_rgba32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":938866,"byte_end":938928,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939118,"byte_end":939130,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"pub fn from_decoder<'a,\n                    impl ImageDecoder<'a>: ImageDecoder>(impl ImageDecoder<'a>)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939056,"byte_end":939106,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939296,"byte_end":939303,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"to_rgb8","qualname":"<DynamicImage>::to_rgb8","value":"pub fn to_rgb8(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939235,"byte_end":939284,"line_start":178,"line_end":178,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5477},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939446,"byte_end":939454,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"to_rgb16","qualname":"<DynamicImage>::to_rgb16","value":"pub fn to_rgb16(&Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939385,"byte_end":939434,"line_start":183,"line_end":183,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5478},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939599,"byte_end":939608,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"to_rgb32f","qualname":"<DynamicImage>::to_rgb32f","value":"pub fn to_rgb32f(&Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939538,"byte_end":939587,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939755,"byte_end":939763,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<DynamicImage>::to_rgba8","value":"pub fn to_rgba8(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939693,"byte_end":939743,"line_start":193,"line_end":193,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5480},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939908,"byte_end":939917,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"to_rgba16","qualname":"<DynamicImage>::to_rgba16","value":"pub fn to_rgba16(&Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":939846,"byte_end":939896,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940064,"byte_end":940074,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"to_rgba32f","qualname":"<DynamicImage>::to_rgba32f","value":"pub fn to_rgba32f(&Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940002,"byte_end":940052,"line_start":203,"line_end":203,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5482},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940221,"byte_end":940229,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"to_luma8","qualname":"<DynamicImage>::to_luma8","value":"pub fn to_luma8(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940160,"byte_end":940209,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5483},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940373,"byte_end":940382,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"to_luma16","qualname":"<DynamicImage>::to_luma16","value":"pub fn to_luma16(&Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940312,"byte_end":940361,"line_start":213,"line_end":213,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5484},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940528,"byte_end":940538,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"to_luma32f","qualname":"<DynamicImage>::to_luma32f","value":"pub fn to_luma32f(&Self) -> ImageBuffer<Luma<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940467,"byte_end":940516,"line_start":218,"line_end":218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940706,"byte_end":940720,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"to_luma_alpha8","qualname":"<DynamicImage>::to_luma_alpha8","value":"pub fn to_luma_alpha8(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940644,"byte_end":940694,"line_start":223,"line_end":223,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940870,"byte_end":940885,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"to_luma_alpha16","qualname":"<DynamicImage>::to_luma_alpha16","value":"pub fn to_luma_alpha16(&Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940808,"byte_end":940858,"line_start":228,"line_end":228,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5487},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941037,"byte_end":941053,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"to_luma_alpha32f","qualname":"<DynamicImage>::to_luma_alpha32f","value":"pub fn to_luma_alpha32f(&Self) -> ImageBuffer<LumaA<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":940975,"byte_end":941025,"line_start":233,"line_end":233,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5488},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941339,"byte_end":941348,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"into_rgb8","qualname":"<DynamicImage>::into_rgb8","value":"pub fn into_rgb8(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941160,"byte_end":941206,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941211,"byte_end":941214,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941219,"byte_end":941289,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941294,"byte_end":941327,"line_start":241,"line_end":241,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941665,"byte_end":941675,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"into_rgb16","qualname":"<DynamicImage>::into_rgb16","value":"pub fn into_rgb16(Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941486,"byte_end":941532,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941537,"byte_end":941540,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941545,"byte_end":941615,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941620,"byte_end":941653,"line_start":252,"line_end":252,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941996,"byte_end":942007,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"into_rgb32f","qualname":"<DynamicImage>::into_rgb32f","value":"pub fn into_rgb32f(Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941817,"byte_end":941863,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941868,"byte_end":941871,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941876,"byte_end":941946,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":941951,"byte_end":941984,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5491},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942332,"byte_end":942342,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"into_rgba8","qualname":"<DynamicImage>::into_rgba8","value":"pub fn into_rgba8(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942152,"byte_end":942199,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942204,"byte_end":942207,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942212,"byte_end":942282,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942287,"byte_end":942320,"line_start":274,"line_end":274,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942663,"byte_end":942674,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"into_rgba16","qualname":"<DynamicImage>::into_rgba16","value":"pub fn into_rgba16(Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942483,"byte_end":942530,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942535,"byte_end":942538,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942543,"byte_end":942613,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942618,"byte_end":942651,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5493},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942999,"byte_end":943011,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"into_rgba32f","qualname":"<DynamicImage>::into_rgba32f","value":"pub fn into_rgba32f(Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942819,"byte_end":942866,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942871,"byte_end":942874,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942879,"byte_end":942949,"line_start":295,"line_end":295,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":942954,"byte_end":942987,"line_start":296,"line_end":296,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5494},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943339,"byte_end":943349,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"into_luma8","qualname":"<DynamicImage>::into_luma8","value":"pub fn into_luma8(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943159,"byte_end":943206,"line_start":304,"line_end":304,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943211,"byte_end":943214,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943219,"byte_end":943289,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943294,"byte_end":943327,"line_start":307,"line_end":307,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943670,"byte_end":943681,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"into_luma16","qualname":"<DynamicImage>::into_luma16","value":"pub fn into_luma16(Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943490,"byte_end":943537,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943542,"byte_end":943545,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943550,"byte_end":943620,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943625,"byte_end":943658,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5496},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944007,"byte_end":944023,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"into_luma_alpha8","qualname":"<DynamicImage>::into_luma_alpha8","value":"pub fn into_luma_alpha8(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943826,"byte_end":943874,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943879,"byte_end":943882,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943887,"byte_end":943957,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":943962,"byte_end":943995,"line_start":329,"line_end":329,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944357,"byte_end":944374,"line_start":341,"line_end":341,"column_start":12,"column_end":29},"name":"into_luma_alpha16","qualname":"<DynamicImage>::into_luma_alpha16","value":"pub fn into_luma_alpha16(Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944176,"byte_end":944224,"line_start":337,"line_end":337,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944229,"byte_end":944232,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944237,"byte_end":944307,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944312,"byte_end":944345,"line_start":340,"line_end":340,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5498},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944761,"byte_end":944765,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944531,"byte_end":944602,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944607,"byte_end":944610,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944615,"byte_end":944666,"line_start":350,"line_end":350,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944671,"byte_end":944749,"line_start":351,"line_end":351,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5499},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945022,"byte_end":945030,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"pub fn crop_imm(&Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":944939,"byte_end":945010,"line_start":356,"line_end":356,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5500},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945255,"byte_end":945262,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945200,"byte_end":945243,"line_start":361,"line_end":361,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945477,"byte_end":945488,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945414,"byte_end":945465,"line_start":369,"line_end":369,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5502},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945708,"byte_end":945716,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945652,"byte_end":945696,"line_start":377,"line_end":377,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5503},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945934,"byte_end":945946,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":945870,"byte_end":945922,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946173,"byte_end":946181,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946112,"byte_end":946161,"line_start":393,"line_end":393,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946404,"byte_end":946416,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946335,"byte_end":946392,"line_start":401,"line_end":401,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5506},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946665,"byte_end":946679,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946582,"byte_end":946653,"line_start":409,"line_end":409,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946930,"byte_end":946948,"line_start":418,"line_end":418,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":946839,"byte_end":946918,"line_start":417,"line_end":417,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947176,"byte_end":947184,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"pub fn as_rgb16(&Self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947120,"byte_end":947164,"line_start":425,"line_end":425,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947403,"byte_end":947415,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"pub fn as_mut_rgb16(&mut Self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947339,"byte_end":947391,"line_start":433,"line_end":433,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5510},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947639,"byte_end":947648,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"pub fn as_rgba16(&Self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947582,"byte_end":947627,"line_start":441,"line_end":441,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947870,"byte_end":947883,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"pub fn as_mut_rgba16(&mut Self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":947805,"byte_end":947858,"line_start":449,"line_end":449,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5512},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948108,"byte_end":948117,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"as_rgb32f","qualname":"<DynamicImage>::as_rgb32f","value":"pub fn as_rgb32f(&Self) -> Option<&Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948052,"byte_end":948096,"line_start":457,"line_end":457,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948338,"byte_end":948351,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"as_mut_rgb32f","qualname":"<DynamicImage>::as_mut_rgb32f","value":"pub fn as_mut_rgb32f(&mut Self) -> Option<&mut Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 32bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 32bit RGB image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948274,"byte_end":948326,"line_start":465,"line_end":465,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5514},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948577,"byte_end":948587,"line_start":474,"line_end":474,"column_start":12,"column_end":22},"name":"as_rgba32f","qualname":"<DynamicImage>::as_rgba32f","value":"pub fn as_rgba32f(&Self) -> Option<&Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 32bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 32bit RGBA image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948520,"byte_end":948565,"line_start":473,"line_end":473,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5515},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948811,"byte_end":948825,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"as_mut_rgba32f","qualname":"<DynamicImage>::as_mut_rgba32f","value":"pub fn as_mut_rgba32f(&mut Self) -> Option<&mut Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948746,"byte_end":948799,"line_start":481,"line_end":481,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5516},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949058,"byte_end":949067,"line_start":490,"line_end":490,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"pub fn as_luma16(&Self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":948996,"byte_end":949046,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949294,"byte_end":949307,"line_start":498,"line_end":498,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"pub fn as_mut_luma16(&mut Self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949224,"byte_end":949282,"line_start":497,"line_end":497,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5518},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949560,"byte_end":949575,"line_start":506,"line_end":506,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"pub fn as_luma_alpha16(&Self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949476,"byte_end":949548,"line_start":505,"line_end":505,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5519},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949830,"byte_end":949849,"line_start":514,"line_end":514,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"pub fn as_mut_luma_alpha16(&mut Self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":949738,"byte_end":949818,"line_start":513,"line_end":513,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5520},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":950108,"byte_end":950126,"line_start":522,"line_end":522,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"pub fn as_flat_samples_u8(&Self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":950024,"byte_end":950096,"line_start":521,"line_end":521,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":950613,"byte_end":950632,"line_start":533,"line_end":533,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"pub fn as_flat_samples_u16(&Self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":950528,"byte_end":950601,"line_start":532,"line_end":532,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5522},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951123,"byte_end":951142,"line_start":544,"line_end":544,"column_start":12,"column_end":31},"name":"as_flat_samples_f32","qualname":"<DynamicImage>::as_flat_samples_f32","value":"pub fn as_flat_samples_f32(&Self) -> Option<FlatSamples<&[f32]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 32bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 32bit per channel images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951039,"byte_end":951111,"line_start":543,"line_end":543,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5523},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951473,"byte_end":951481,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DynamicImage>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a native endian byte slice.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a native endian byte slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951400,"byte_end":951461,"line_start":552,"line_end":552,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5524},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951895,"byte_end":951905,"line_start":563,"line_end":563,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<DynamicImage>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector. If the `ImageBuffer`\n container is `Vec<u8>`, this operation is free. Otherwise, a copy\n is returned.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector. If the `ImageBuffer`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951719,"byte_end":951788,"line_start":560,"line_end":560,"column_start":5,"column_end":74}},{"value":"/ container is `Vec<u8>`, this operation is free. Otherwise, a copy","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951793,"byte_end":951862,"line_start":561,"line_end":561,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":951867,"byte_end":951883,"line_start":562,"line_end":562,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":952427,"byte_end":952435,"line_start":576,"line_end":576,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of this image's pixels as a byte vector.\n Deprecated, because it does nothing but hide an expensive clone operation.\n","sig":null,"attributes":[{"value":"/ Return a copy of this image's pixels as a byte vector.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":952142,"byte_end":952200,"line_start":570,"line_end":570,"column_start":5,"column_end":63}},{"value":"/ Deprecated, because it does nothing but hide an expensive clone operation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":952205,"byte_end":952283,"line_start":571,"line_end":571,"column_start":5,"column_end":83}},{"value":"deprecated(since = \"0.24.0\", note =\n             \"use `image.into_bytes()` or `image.as_bytes().to_vec()` instead\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":952288,"byte_end":952415,"line_start":572,"line_end":575,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":952547,"byte_end":952552,"line_start":581,"line_end":581,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":952500,"byte_end":952535,"line_start":580,"line_end":580,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5527},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953364,"byte_end":953369,"line_start":597,"line_end":597,"column_start":12,"column_end":17},"name":"width","qualname":"<DynamicImage>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the width of the underlying image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953307,"byte_end":953352,"line_start":596,"line_end":596,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5528},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953506,"byte_end":953512,"line_start":602,"line_end":602,"column_start":12,"column_end":18},"name":"height","qualname":"<DynamicImage>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the height of the underlying image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953448,"byte_end":953494,"line_start":601,"line_end":601,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953784,"byte_end":953793,"line_start":609,"line_end":609,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n Returns `Luma` images in most cases. However, for `f32` images,\n this will return a greyscale `Rgb/Rgba` image instead.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953592,"byte_end":953637,"line_start":606,"line_end":606,"column_start":5,"column_end":50}},{"value":"/ Returns `Luma` images in most cases. However, for `f32` images,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953642,"byte_end":953709,"line_start":607,"line_end":607,"column_start":5,"column_end":72}},{"value":"/ this will return a greyscale `Rgb/Rgba` image instead.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":953714,"byte_end":953772,"line_start":608,"line_end":608,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955146,"byte_end":955152,"line_start":638,"line_end":638,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955060,"byte_end":955096,"line_start":636,"line_end":636,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955101,"byte_end":955134,"line_start":637,"line_end":637,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5531},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955507,"byte_end":955513,"line_start":646,"line_end":646,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955238,"byte_end":955297,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955302,"byte_end":955365,"line_start":643,"line_end":643,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955370,"byte_end":955432,"line_start":644,"line_end":644,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955437,"byte_end":955495,"line_start":645,"line_end":645,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5532},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955969,"byte_end":955981,"line_start":656,"line_end":656,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955775,"byte_end":955834,"line_start":653,"line_end":653,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955839,"byte_end":955895,"line_start":654,"line_end":654,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":955900,"byte_end":955957,"line_start":655,"line_end":655,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5533},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956664,"byte_end":956673,"line_start":673,"line_end":673,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956197,"byte_end":956253,"line_start":665,"line_end":665,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956258,"byte_end":956321,"line_start":666,"line_end":666,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956326,"byte_end":956388,"line_start":667,"line_end":667,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956393,"byte_end":956451,"line_start":668,"line_end":668,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956456,"byte_end":956459,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956464,"byte_end":956527,"line_start":670,"line_end":670,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956532,"byte_end":956582,"line_start":671,"line_end":671,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956587,"byte_end":956652,"line_start":672,"line_end":672,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5534},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957273,"byte_end":957288,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956899,"byte_end":956944,"line_start":679,"line_end":679,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":956949,"byte_end":957005,"line_start":680,"line_end":680,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957010,"byte_end":957068,"line_start":681,"line_end":681,"column_start":5,"column_end":63}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957073,"byte_end":957136,"line_start":682,"line_end":682,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957141,"byte_end":957191,"line_start":683,"line_end":683,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957196,"byte_end":957261,"line_start":684,"line_end":684,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957800,"byte_end":957814,"line_start":695,"line_end":695,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by `nwidth` and `nheight`, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957430,"byte_end":957489,"line_start":689,"line_end":689,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957494,"byte_end":957557,"line_start":690,"line_end":690,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957562,"byte_end":957624,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957629,"byte_end":957691,"line_start":692,"line_end":692,"column_start":5,"column_end":67}},{"value":"/ specified by `nwidth` and `nheight`, then cropped to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957696,"byte_end":957752,"line_start":693,"line_end":693,"column_start":5,"column_end":61}},{"value":"/ fit within the other bound.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":957757,"byte_end":957788,"line_start":694,"line_end":694,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958630,"byte_end":958634,"line_start":718,"line_end":718,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n `sigma` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958522,"byte_end":958565,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/ `sigma` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958570,"byte_end":958618,"line_start":717,"line_end":717,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959004,"byte_end":959013,"line_start":727,"line_end":727,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n `sigma` is the amount to blur the image by.\n `threshold` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958746,"byte_end":958791,"line_start":722,"line_end":722,"column_start":5,"column_end":50}},{"value":"/ `sigma` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958796,"byte_end":958843,"line_start":723,"line_end":723,"column_start":5,"column_end":52}},{"value":"/ `threshold` is a control of how much to sharpen.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958848,"byte_end":958900,"line_start":724,"line_end":724,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958905,"byte_end":958908,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":958913,"byte_end":958992,"line_start":726,"line_end":726,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959222,"byte_end":959231,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959157,"byte_end":959210,"line_start":731,"line_end":731,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5539},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959637,"byte_end":959652,"line_start":743,"line_end":743,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n `contrast` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959438,"byte_end":959476,"line_start":740,"line_end":740,"column_start":5,"column_end":43}},{"value":"/ `contrast` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959481,"byte_end":959536,"line_start":741,"line_end":741,"column_start":5,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959541,"byte_end":959625,"line_start":742,"line_end":742,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":5540},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959948,"byte_end":959956,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n `value` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959760,"byte_end":959798,"line_start":747,"line_end":747,"column_start":5,"column_end":43}},{"value":"/ `value` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959803,"byte_end":959855,"line_start":748,"line_end":748,"column_start":5,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":959860,"byte_end":959936,"line_start":749,"line_end":749,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5541},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960304,"byte_end":960313,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960072,"byte_end":960106,"line_start":754,"line_end":754,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960111,"byte_end":960162,"line_start":755,"line_end":755,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960167,"byte_end":960236,"line_start":756,"line_end":756,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960241,"byte_end":960292,"line_start":757,"line_end":757,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5542},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960472,"byte_end":960477,"line_start":763,"line_end":763,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960430,"byte_end":960460,"line_start":762,"line_end":762,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5543},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960623,"byte_end":960628,"line_start":768,"line_end":768,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960579,"byte_end":960611,"line_start":767,"line_end":767,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5544},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960787,"byte_end":960795,"line_start":773,"line_end":773,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960732,"byte_end":960775,"line_start":772,"line_end":772,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5545},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960948,"byte_end":960957,"line_start":778,"line_end":778,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":960892,"byte_end":960936,"line_start":777,"line_end":777,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5546},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961111,"byte_end":961120,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961055,"byte_end":961099,"line_start":782,"line_end":782,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5547},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961414,"byte_end":961422,"line_start":791,"line_end":791,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write + Seek, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```.","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961218,"byte_end":961264,"line_start":787,"line_end":787,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961269,"byte_end":961272,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961277,"byte_end":961327,"line_start":789,"line_end":789,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":961332,"byte_end":961402,"line_start":790,"line_end":790,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5550},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963044,"byte_end":963048,"line_start":839,"line_end":839,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":962910,"byte_end":962963,"line_start":836,"line_end":836,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":962968,"byte_end":962971,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":962976,"byte_end":963032,"line_start":838,"line_end":838,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963395,"byte_end":963411,"line_start":851,"line_end":851,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963188,"byte_end":963243,"line_start":846,"line_end":846,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963248,"byte_end":963273,"line_start":847,"line_end":847,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963278,"byte_end":963281,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963286,"byte_end":963358,"line_start":849,"line_end":849,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963363,"byte_end":963383,"line_start":850,"line_end":850,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971287,"byte_end":971291,"line_start":1083,"line_end":1083,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":970985,"byte_end":971034,"line_start":1076,"line_end":1076,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971035,"byte_end":971103,"line_start":1077,"line_end":1077,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971104,"byte_end":971107,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971108,"byte_end":971204,"line_start":1079,"line_end":1079,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971205,"byte_end":971233,"line_start":1080,"line_end":1080,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971234,"byte_end":971237,"line_start":1081,"line_end":1081,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971238,"byte_end":971279,"line_start":1082,"line_end":1082,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5594},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971846,"byte_end":971862,"line_start":1098,"line_end":1098,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"pub fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971481,"byte_end":971548,"line_start":1091,"line_end":1091,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971549,"byte_end":971629,"line_start":1092,"line_end":1092,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971630,"byte_end":971633,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971634,"byte_end":971730,"line_start":1094,"line_end":1094,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971731,"byte_end":971792,"line_start":1095,"line_end":1095,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971793,"byte_end":971796,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":971797,"byte_end":971838,"line_start":1097,"line_end":1097,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972445,"byte_end":972456,"line_start":1113,"line_end":1113,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972062,"byte_end":972124,"line_start":1106,"line_end":1106,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972125,"byte_end":972128,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972129,"byte_end":972215,"line_start":1108,"line_end":1108,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972216,"byte_end":972277,"line_start":1109,"line_end":1109,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972278,"byte_end":972281,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972282,"byte_end":972373,"line_start":1111,"line_end":1111,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp, exr and tiff files are supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972374,"byte_end":972437,"line_start":1112,"line_end":1112,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973115,"byte_end":973138,"line_start":1135,"line_end":1135,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"pub fn save_buffer_with_format<P>(P, &[u8], u32, u32, color::ColorType,\n                                  ImageFormat) -> ImageResult<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972762,"byte_end":972823,"line_start":1127,"line_end":1127,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972824,"byte_end":972852,"line_start":1128,"line_end":1128,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972853,"byte_end":972856,"line_start":1129,"line_end":1129,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972857,"byte_end":972919,"line_start":1130,"line_end":1130,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972920,"byte_end":972952,"line_start":1131,"line_end":1131,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":972953,"byte_end":973013,"line_start":1132,"line_end":1132,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp, exr and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973014,"byte_end":973077,"line_start":1133,"line_end":1133,"column_start":1,"column_end":64}},{"value":"/ tiff files are supported.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973078,"byte_end":973107,"line_start":1134,"line_end":1134,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973932,"byte_end":973956,"line_start":1162,"line_end":1162,"column_start":8,"column_end":32},"name":"write_buffer_with_format","qualname":"::dynimage::write_buffer_with_format","value":"pub fn write_buffer_with_format<W,\n                                F>(&mut W, &[u8], u32, u32, color::ColorType,\n                                   F) -> ImageResult<()> where W: Write +\nSeek, F: Into<ImageOutputFormat>","parent":null,"children":[],"decl_id":null,"docs":" Writes the supplied buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the supplied buffer to a writer in the specified format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973457,"byte_end":973524,"line_start":1150,"line_end":1150,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973525,"byte_end":973528,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973529,"byte_end":973591,"line_start":1152,"line_end":1152,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973592,"byte_end":973624,"line_start":1153,"line_end":1153,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted writers if the buffer contains","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973625,"byte_end":973687,"line_start":1154,"line_end":1154,"column_start":1,"column_end":63}},{"value":"/ malformed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973688,"byte_end":973707,"line_start":1155,"line_end":1155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973708,"byte_end":973711,"line_start":1156,"line_end":1156,"column_start":1,"column_end":4}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973712,"byte_end":973777,"line_start":1157,"line_end":1157,"column_start":1,"column_end":66}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973778,"byte_end":973798,"line_start":1158,"line_end":1158,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973799,"byte_end":973802,"line_start":1159,"line_end":1159,"column_start":1,"column_end":4}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973803,"byte_end":973853,"line_start":1160,"line_end":1160,"column_start":1,"column_end":51}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":973854,"byte_end":973924,"line_start":1161,"line_end":1161,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974559,"byte_end":974575,"line_start":1186,"line_end":1186,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974315,"byte_end":974355,"line_start":1178,"line_end":1178,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974356,"byte_end":974359,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974360,"byte_end":974411,"line_start":1180,"line_end":1180,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974412,"byte_end":974454,"line_start":1181,"line_end":1181,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974455,"byte_end":974458,"line_start":1182,"line_end":1182,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974459,"byte_end":974505,"line_start":1183,"line_end":1183,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974506,"byte_end":974509,"line_start":1184,"line_end":1184,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974510,"byte_end":974551,"line_start":1185,"line_end":1185,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":975057,"byte_end":975085,"line_start":1201,"line_end":1201,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974730,"byte_end":974770,"line_start":1191,"line_end":1191,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974771,"byte_end":974774,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974775,"byte_end":974872,"line_start":1193,"line_end":1193,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974873,"byte_end":974907,"line_start":1194,"line_end":1194,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974908,"byte_end":974911,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974912,"byte_end":974958,"line_start":1196,"line_end":1196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974959,"byte_end":974962,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974963,"byte_end":974989,"line_start":1198,"line_end":1198,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":974990,"byte_end":975031,"line_start":1199,"line_end":1199,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":975032,"byte_end":975049,"line_start":1200,"line_end":1200,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8033},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979265,"byte_end":979268,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979234,"byte_end":979260,"line_start":29,"line_end":29,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8035},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979307,"byte_end":979311,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979275,"byte_end":979302,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8037},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979349,"byte_end":979352,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979318,"byte_end":979344,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8039},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979391,"byte_end":979395,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979359,"byte_end":979386,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8041},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979441,"byte_end":979444,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979402,"byte_end":979436,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8043},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979483,"byte_end":979487,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979451,"byte_end":979478,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8045},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979525,"byte_end":979528,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979494,"byte_end":979520,"line_start":47,"line_end":47,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8047},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979566,"byte_end":979569,"line_start":51,"line_end":51,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979535,"byte_end":979561,"line_start":50,"line_end":50,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8049},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979607,"byte_end":979610,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979576,"byte_end":979602,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8051},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979648,"byte_end":979651,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979617,"byte_end":979643,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8053},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979698,"byte_end":979701,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979658,"byte_end":979693,"line_start":59,"line_end":59,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8055},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979743,"byte_end":979750,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"OpenExr","qualname":"::image::ImageFormat::OpenExr","value":"ImageFormat::OpenExr","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in OpenEXR Format\n","sig":null,"attributes":[{"value":"/ An Image in OpenEXR Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979708,"byte_end":979738,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8057},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979793,"byte_end":979801,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979757,"byte_end":979788,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8059},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979841,"byte_end":979845,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":8032},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979808,"byte_end":979836,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":8032},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979216,"byte_end":979227,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n    Png,\n    Jpeg,\n    Gif,\n    WebP,\n    Pnm,\n    Tiff,\n    Tga,\n    Dds,\n    Bmp,\n    Ico,\n    Hdr,\n    OpenExr,\n    Farbfeld,\n    Avif,\n}","parent":null,"children":[{"krate":0,"index":8033},{"krate":0,"index":8035},{"krate":0,"index":8037},{"krate":0,"index":8039},{"krate":0,"index":8041},{"krate":0,"index":8043},{"krate":0,"index":8045},{"krate":0,"index":8047},{"krate":0,"index":8049},{"krate":0,"index":8051},{"krate":0,"index":8053},{"krate":0,"index":8055},{"krate":0,"index":8057},{"krate":0,"index":8059}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979035,"byte_end":979081,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979082,"byte_end":979137,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979189,"byte_end":979206,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5676},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":980172,"byte_end":980186,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ImageFormat>::from_extension","value":"pub fn from_extension<S>(S) -> Option<Self> where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by a path's file extension.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979873,"byte_end":979938,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979943,"byte_end":979946,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979951,"byte_end":979964,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979969,"byte_end":979972,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979977,"byte_end":979984,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979989,"byte_end":980016,"line_start":78,"line_end":78,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":980021,"byte_end":980024,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_extension(\"jpg\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":980029,"byte_end":980081,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(format, Some(ImageFormat::Jpeg));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":980086,"byte_end":980134,"line_start":81,"line_end":81,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":980139,"byte_end":980146,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":980151,"byte_end":980160,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981589,"byte_end":981598,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"pub fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981228,"byte_end":981295,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981300,"byte_end":981303,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981308,"byte_end":981321,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981326,"byte_end":981329,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981334,"byte_end":981341,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981346,"byte_end":981373,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981378,"byte_end":981381,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_path(\"images/ferris.png\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981386,"byte_end":981448,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981453,"byte_end":981494,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981499,"byte_end":981502,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), image::error::ImageError>(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981507,"byte_end":981551,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981556,"byte_end":981563,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":981568,"byte_end":981577,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5683},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982570,"byte_end":982584,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"from_mime_type","qualname":"<ImageFormat>::from_mime_type","value":"pub fn from_mime_type<M>(M) -> Option<Self> where M: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a MIME type.","sig":null,"attributes":[{"value":"/ Return the image format specified by a MIME type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982289,"byte_end":982342,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982347,"byte_end":982350,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982355,"byte_end":982368,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982373,"byte_end":982376,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982381,"byte_end":982388,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982393,"byte_end":982420,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982425,"byte_end":982428,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_mime_type(\"image/png\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982433,"byte_end":982500,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982505,"byte_end":982546,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":982551,"byte_end":982558,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5685},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":983669,"byte_end":983677,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"can_read","qualname":"<ImageFormat>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be decoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be decoded by the lib.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":983587,"byte_end":983643,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":983648,"byte_end":983657,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":984461,"byte_end":984470,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"can_write","qualname":"<ImageFormat>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be encoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be encoded by the lib.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":984379,"byte_end":984435,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":984440,"byte_end":984449,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985788,"byte_end":985802,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"pub fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985198,"byte_end":985257,"line_start":227,"line_end":227,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985262,"byte_end":985265,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985270,"byte_end":985357,"line_start":229,"line_end":229,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985362,"byte_end":985456,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985461,"byte_end":985556,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985561,"byte_end":985572,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985577,"byte_end":985580,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985585,"byte_end":985679,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":985684,"byte_end":985776,"line_start":235,"line_end":235,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8076},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986814,"byte_end":986817,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986755,"byte_end":986778,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986783,"byte_end":986809,"line_start":262,"line_end":262,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8078},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986908,"byte_end":986912,"line_start":267,"line_end":267,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986824,"byte_end":986848,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986853,"byte_end":986903,"line_start":266,"line_end":266,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8081},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986994,"byte_end":986997,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PnmSubtype)","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986923,"byte_end":986946,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986951,"byte_end":986989,"line_start":270,"line_end":270,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8084},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987075,"byte_end":987078,"line_start":275,"line_end":275,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987016,"byte_end":987039,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987044,"byte_end":987070,"line_start":274,"line_end":274,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8086},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987144,"byte_end":987147,"line_start":279,"line_end":279,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987085,"byte_end":987108,"line_start":277,"line_end":277,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987113,"byte_end":987139,"line_start":278,"line_end":278,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8088},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987213,"byte_end":987216,"line_start":283,"line_end":283,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987154,"byte_end":987177,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987182,"byte_end":987208,"line_start":282,"line_end":282,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8090},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987292,"byte_end":987300,"line_start":287,"line_end":287,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987223,"byte_end":987251,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987256,"byte_end":987287,"line_start":286,"line_end":286,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8092},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987366,"byte_end":987369,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageOutputFormat::Tga","value":"ImageOutputFormat::Tga","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987307,"byte_end":987330,"line_start":289,"line_end":289,"column_start":5,"column_end":28}},{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987335,"byte_end":987361,"line_start":290,"line_end":290,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8094},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987443,"byte_end":987450,"line_start":295,"line_end":295,"column_start":5,"column_end":12},"name":"OpenExr","qualname":"::image::ImageOutputFormat::OpenExr","value":"ImageOutputFormat::OpenExr","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in OpenEXR Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"openexr\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987376,"byte_end":987403,"line_start":293,"line_end":293,"column_start":5,"column_end":32}},{"value":"/ An Image in OpenEXR Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987408,"byte_end":987438,"line_start":294,"line_end":294,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8096},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987518,"byte_end":987522,"line_start":299,"line_end":299,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageOutputFormat::Tiff","value":"ImageOutputFormat::Tiff","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987457,"byte_end":987481,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987486,"byte_end":987513,"line_start":298,"line_end":298,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8098},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987854,"byte_end":987865,"line_start":308,"line_end":308,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987609,"byte_end":987681,"line_start":305,"line_end":305,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":8075},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986731,"byte_end":986748,"line_start":260,"line_end":260,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat {\n    Png,\n    Jpeg(u8),\n    Pnm(PnmSubtype),\n    Gif,\n    Ico,\n    Bmp,\n    Farbfeld,\n    Tga,\n    OpenExr,\n    Tiff,\n    Unsupported(String),\n}","parent":null,"children":[{"krate":0,"index":8076},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8084},{"krate":0,"index":8086},{"krate":0,"index":8088},{"krate":0,"index":8090},{"krate":0,"index":8092},{"krate":0,"index":8094},{"krate":0,"index":8096},{"krate":0,"index":8098}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986605,"byte_end":986664,"line_start":257,"line_end":257,"column_start":1,"column_end":60}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":986704,"byte_end":986721,"line_start":259,"line_end":259,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8112},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998720,"byte_end":998728,"line_start":595,"line_end":595,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":8113},{"krate":0,"index":8114}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998316,"byte_end":998366,"line_start":589,"line_end":589,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998367,"byte_end":998370,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998371,"byte_end":998468,"line_start":591,"line_end":591,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998469,"byte_end":998563,"line_start":592,"line_end":592,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998564,"byte_end":998663,"line_start":593,"line_end":593,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":5714},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999034,"byte_end":999041,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"pub fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998986,"byte_end":999022,"line_start":606,"line_end":606,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5715},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999214,"byte_end":999219,"line_start":614,"line_end":614,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"pub fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999089,"byte_end":999134,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999139,"byte_end":999142,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999147,"byte_end":999202,"line_start":613,"line_end":613,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5716},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999329,"byte_end":999338,"line_start":619,"line_end":619,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"pub fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999265,"byte_end":999317,"line_start":618,"line_end":618,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":5717},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999467,"byte_end":999479,"line_start":625,"line_end":625,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5728},{"krate":0,"index":5730}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999415,"byte_end":999456,"line_start":624,"line_end":624,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999556,"byte_end":999562,"line_start":627,"line_end":627,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999497,"byte_end":999546,"line_start":626,"line_end":626,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5720},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999652,"byte_end":999662,"line_start":630,"line_end":630,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999580,"byte_end":999644,"line_start":629,"line_end":629,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999767,"byte_end":999777,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"pub fn color_type(&Self) -> ColorType","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999690,"byte_end":999759,"line_start":632,"line_end":632,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999871,"byte_end":999890,"line_start":636,"line_end":636,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"pub fn original_color_type(&Self) -> ExtendedColorType","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999804,"byte_end":999863,"line_start":635,"line_end":635,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5723},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000231,"byte_end":1000242,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"pub fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999965,"byte_end":1000049,"line_start":640,"line_end":640,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000054,"byte_end":1000150,"line_start":641,"line_end":641,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000155,"byte_end":1000223,"line_start":642,"line_end":642,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000700,"byte_end":1000711,"line_start":651,"line_end":651,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"pub fn total_bytes(&Self) -> u64","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000284,"byte_end":1000343,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000348,"byte_end":1000351,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000356,"byte_end":1000429,"line_start":647,"line_end":647,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000434,"byte_end":1000510,"line_start":648,"line_end":648,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000515,"byte_end":1000607,"line_start":649,"line_end":649,"column_start":5,"column_end":97}},{"value":"/ into. If, however, the size does not fit in a u64 then u64::MAX is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000612,"byte_end":1000692,"line_start":650,"line_end":650,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001150,"byte_end":1001164,"line_start":660,"line_end":660,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"pub fn scanline_bytes(&Self) -> u64","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1000992,"byte_end":1001088,"line_start":658,"line_end":658,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001093,"byte_end":1001142,"line_start":659,"line_end":659,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5726},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002065,"byte_end":1002075,"line_start":685,"line_end":685,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(Self, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001219,"byte_end":1001258,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001263,"byte_end":1001266,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001271,"byte_end":1001359,"line_start":666,"line_end":666,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001364,"byte_end":1001457,"line_start":667,"line_end":667,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001462,"byte_end":1001560,"line_start":668,"line_end":668,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001565,"byte_end":1001635,"line_start":669,"line_end":669,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001640,"byte_end":1001643,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001648,"byte_end":1001660,"line_start":671,"line_end":671,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001665,"byte_end":1001668,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001673,"byte_end":1001733,"line_start":673,"line_end":673,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001738,"byte_end":1001741,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001746,"byte_end":1001760,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001765,"byte_end":1001768,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001773,"byte_end":1001788,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001793,"byte_end":1001832,"line_start":678,"line_end":678,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001837,"byte_end":1001901,"line_start":679,"line_end":679,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001906,"byte_end":1001971,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1001976,"byte_end":1002019,"line_start":681,"line_end":681,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002024,"byte_end":1002035,"line_start":682,"line_end":682,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002040,"byte_end":1002045,"line_start":683,"line_end":683,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002050,"byte_end":1002057,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002303,"byte_end":1002327,"line_start":691,"line_end":691,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"pub fn read_image_with_progress<F: Fn(Progress) -> ()>(Self, &mut [u8], F)\n-> ImageResult<()>","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002181,"byte_end":1002277,"line_start":689,"line_end":689,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1002282,"byte_end":1002295,"line_start":690,"line_end":690,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003915,"byte_end":1003925,"line_start":734,"line_end":734,"column_start":8,"column_end":18},"name":"set_limits","qualname":"::image::ImageDecoder::set_limits","value":"pub fn set_limits(&mut Self, crate::io::Limits) -> ImageResult<()>","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":" Set decoding limits for this decoder. See [`Limits`] for the different kinds of\n limits that is possible to set.","sig":null,"attributes":[{"value":"/ Set decoding limits for this decoder. See [`Limits`] for the different kinds of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003279,"byte_end":1003362,"line_start":723,"line_end":723,"column_start":5,"column_end":88}},{"value":"/ limits that is possible to set.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003367,"byte_end":1003402,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003407,"byte_end":1003410,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Note to implementors: make sure you call [`Limits::check_support`] so that","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003415,"byte_end":1003493,"line_start":726,"line_end":726,"column_start":5,"column_end":83}},{"value":"/ decoding fails if any unsupported strict limits are set. Also make sure","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003498,"byte_end":1003573,"line_start":727,"line_end":727,"column_start":5,"column_end":80}},{"value":"/ you call [`Limits::check_dimensions`] to check the `max_image_width` and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003578,"byte_end":1003654,"line_start":728,"line_end":728,"column_start":5,"column_end":81}},{"value":"/ `max_image_height` limits.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003659,"byte_end":1003689,"line_start":729,"line_end":729,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003694,"byte_end":1003697,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: ./io/struct.Limits.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003702,"byte_end":1003741,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/ [`Limits::check_support`]: ./io/struct.Limits.html#method.check_support","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003746,"byte_end":1003821,"line_start":732,"line_end":732,"column_start":5,"column_end":80}},{"value":"/ [`Limits::check_dimensions`]: ./io/struct.Limits.html#method.check_dimensions","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1003826,"byte_end":1003907,"line_start":733,"line_end":733,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":5731},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004250,"byte_end":1004266,"line_start":745,"line_end":745,"column_start":11,"column_end":27},"name":"ImageDecoderRect","qualname":"::image::ImageDecoderRect","value":"ImageDecoderRect<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":5733},{"krate":0,"index":5735}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004177,"byte_end":1004239,"line_start":744,"line_end":744,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004421,"byte_end":1004430,"line_start":747,"line_end":747,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderRect::read_rect","value":"pub fn read_rect(&mut Self, u32, u32, u32, u32, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004303,"byte_end":1004413,"line_start":746,"line_end":746,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005373,"byte_end":1005396,"line_start":770,"line_end":770,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderRect::read_rect_with_progress","value":"pub fn read_rect_with_progress<F: Fn(Progress) ->\n                               ()>(&mut Self, u32, u32, u32, u32, &mut [u8],\n                                   F) -> ImageResult<()>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004657,"byte_end":1004736,"line_start":758,"line_end":758,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004741,"byte_end":1004744,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004749,"byte_end":1004810,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004815,"byte_end":1004889,"line_start":761,"line_end":761,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004894,"byte_end":1004953,"line_start":762,"line_end":762,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004958,"byte_end":1004961,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004966,"byte_end":1005058,"line_start":764,"line_end":764,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005063,"byte_end":1005122,"line_start":765,"line_end":765,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005127,"byte_end":1005187,"line_start":766,"line_end":766,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005192,"byte_end":1005195,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005200,"byte_end":1005264,"line_start":768,"line_end":768,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005269,"byte_end":1005365,"line_start":769,"line_end":769,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":5737},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005627,"byte_end":1005643,"line_start":782,"line_end":782,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":5739}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005590,"byte_end":1005616,"line_start":781,"line_end":781,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005715,"byte_end":1005726,"line_start":784,"line_end":784,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"pub fn into_frames(Self) -> Frames","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005654,"byte_end":1005707,"line_start":783,"line_end":783,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005798,"byte_end":1005810,"line_start":788,"line_end":788,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":5741}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005751,"byte_end":1005787,"line_start":787,"line_end":787,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006359,"byte_end":1006370,"line_start":799,"line_end":799,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"pub fn write_image(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5740},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005817,"byte_end":1005869,"line_start":789,"line_end":789,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005874,"byte_end":1005877,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005882,"byte_end":1005953,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1005958,"byte_end":1006034,"line_start":792,"line_end":792,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006039,"byte_end":1006114,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006119,"byte_end":1006193,"line_start":794,"line_end":794,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006198,"byte_end":1006246,"line_start":795,"line_end":795,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006251,"byte_end":1006254,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006259,"byte_end":1006328,"line_start":797,"line_end":797,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006333,"byte_end":1006351,"line_start":798,"line_end":798,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8127},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006564,"byte_end":1006570,"line_start":810,"line_end":810,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":8130},{"krate":0,"index":8131},{"krate":0,"index":8132},{"krate":0,"index":8133},{"krate":0,"index":8134}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006507,"byte_end":1006535,"line_start":808,"line_end":808,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007488,"byte_end":1007504,"line_start":854,"line_end":854,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760}],"decl_id":null,"docs":" Trait to inspect an image.","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007270,"byte_end":1007300,"line_start":846,"line_end":846,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007301,"byte_end":1007304,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007305,"byte_end":1007312,"line_start":848,"line_end":848,"column_start":1,"column_end":8}},{"value":"/ use image::{GenericImageView, Rgb, RgbImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007313,"byte_end":1007362,"line_start":849,"line_end":849,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007363,"byte_end":1007366,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007367,"byte_end":1007406,"line_start":851,"line_end":851,"column_start":1,"column_end":40}},{"value":"/ let image: &dyn GenericImageView<Pixel=Rgb<u8>> = &buffer;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007407,"byte_end":1007469,"line_start":852,"line_end":852,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007470,"byte_end":1007477,"line_start":853,"line_end":853,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5751},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007543,"byte_end":1007548,"line_start":856,"line_end":856,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007511,"byte_end":1007533,"line_start":855,"line_end":855,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5752},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007609,"byte_end":1007619,"line_start":859,"line_end":859,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007562,"byte_end":1007601,"line_start":858,"line_end":858,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5753},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007683,"byte_end":1007688,"line_start":862,"line_end":862,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007647,"byte_end":1007675,"line_start":861,"line_end":861,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007803,"byte_end":1007809,"line_start":868,"line_end":868,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007766,"byte_end":1007795,"line_start":867,"line_end":867,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5755},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007936,"byte_end":1007942,"line_start":874,"line_end":874,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007887,"byte_end":1007928,"line_start":873,"line_end":873,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5756},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008059,"byte_end":1008068,"line_start":877,"line_end":877,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007980,"byte_end":1008051,"line_start":876,"line_end":876,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008365,"byte_end":1008374,"line_start":887,"line_end":887,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008216,"byte_end":1008279,"line_start":882,"line_end":882,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008284,"byte_end":1008287,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008292,"byte_end":1008304,"line_start":884,"line_end":884,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008309,"byte_end":1008312,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008317,"byte_end":1008357,"line_start":886,"line_end":886,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5758},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008719,"byte_end":1008735,"line_start":897,"line_end":897,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008419,"byte_end":1008482,"line_start":889,"line_end":889,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008487,"byte_end":1008490,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008495,"byte_end":1008570,"line_start":891,"line_end":891,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008575,"byte_end":1008587,"line_start":892,"line_end":892,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008592,"byte_end":1008595,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008600,"byte_end":1008655,"line_start":894,"line_end":894,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008660,"byte_end":1008663,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008668,"byte_end":1008704,"line_start":896,"line_end":896,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008967,"byte_end":1008973,"line_start":904,"line_end":904,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self> where Self: Sized","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008816,"byte_end":1008870,"line_start":901,"line_end":901,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008875,"byte_end":1008928,"line_start":902,"line_end":902,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1008933,"byte_end":1008959,"line_start":903,"line_end":903,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009456,"byte_end":1009460,"line_start":922,"line_end":922,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&Self> where Self: Sized","parent":{"krate":0,"index":5750},"children":[],"decl_id":null,"docs":" Returns a subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n The coordinates set the position of the top left corner of the view.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is an immutable view into this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009222,"byte_end":1009287,"line_start":919,"line_end":919,"column_start":5,"column_end":70}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009292,"byte_end":1009371,"line_start":920,"line_end":920,"column_start":5,"column_end":84}},{"value":"/ The coordinates set the position of the top left corner of the view.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009376,"byte_end":1009448,"line_start":921,"line_end":921,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":5761},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009802,"byte_end":1009814,"line_start":933,"line_end":933,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5768},{"krate":0,"index":5770}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009755,"byte_end":1009791,"line_start":932,"line_end":932,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5762},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010688,"byte_end":1010701,"line_start":955,"line_end":955,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009839,"byte_end":1009925,"line_start":934,"line_end":934,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009930,"byte_end":1009933,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009938,"byte_end":1009950,"line_start":936,"line_end":936,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009955,"byte_end":1009958,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009963,"byte_end":1010003,"line_start":938,"line_end":938,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010008,"byte_end":1010011,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ Panics for dynamic images (this method is deprecated and will be removed).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010016,"byte_end":1010094,"line_start":940,"line_end":940,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010099,"byte_end":1010102,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ## Known issues","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010107,"byte_end":1010126,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010131,"byte_end":1010134,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This requires the buffer to contain a unique set of continuous channels in the exact order","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010139,"byte_end":1010233,"line_start":944,"line_end":944,"column_start":5,"column_end":99}},{"value":"/ and byte representation that the pixel type requires. This is somewhat restrictive.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010238,"byte_end":1010325,"line_start":945,"line_end":945,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010330,"byte_end":1010333,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ TODO: Maybe use some kind of entry API? this would allow pixel type conversion on the fly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010338,"byte_end":1010431,"line_start":947,"line_end":947,"column_start":5,"column_end":98}},{"value":"/ while still doing only one array lookup:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010436,"byte_end":1010480,"line_start":948,"line_end":948,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010485,"byte_end":1010488,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010493,"byte_end":1010506,"line_start":950,"line_end":950,"column_start":5,"column_end":18}},{"value":"/ let px = image.pixel_entry_at(x,y);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010511,"byte_end":1010550,"line_start":951,"line_end":951,"column_start":5,"column_end":44}},{"value":"/ px.set_from_rgba(rgba)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010555,"byte_end":1010581,"line_start":952,"line_end":952,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010586,"byte_end":1010593,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.24.0\", note =\n             \"Use `get_pixel` and `put_pixel` instead.\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010598,"byte_end":1010680,"line_start":954,"line_end":954,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5763},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010899,"byte_end":1010908,"line_start":962,"line_end":962,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010755,"byte_end":1010813,"line_start":957,"line_end":957,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010818,"byte_end":1010821,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010826,"byte_end":1010838,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010843,"byte_end":1010846,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010851,"byte_end":1010891,"line_start":961,"line_end":961,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5764},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011286,"byte_end":1011302,"line_start":972,"line_end":972,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1010962,"byte_end":1011021,"line_start":964,"line_end":964,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011026,"byte_end":1011029,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011034,"byte_end":1011109,"line_start":966,"line_end":966,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011114,"byte_end":1011126,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011131,"byte_end":1011134,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011139,"byte_end":1011194,"line_start":969,"line_end":969,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011199,"byte_end":1011202,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011207,"byte_end":1011271,"line_start":971,"line_end":971,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5765},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011601,"byte_end":1011612,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011400,"byte_end":1011470,"line_start":976,"line_end":976,"column_start":5,"column_end":75}},{"value":"deprecated(since = \"0.24.0\", note =\n             \"Use iterator `pixels_mut` to blend the pixels directly\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011475,"byte_end":1011593,"line_start":977,"line_end":980,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012374,"byte_end":1012383,"line_start":998,"line_end":998,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> ImageResult<()> where\nO: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011666,"byte_end":1011730,"line_start":983,"line_end":983,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011735,"byte_end":1011738,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011743,"byte_end":1011804,"line_start":985,"line_end":985,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011809,"byte_end":1011842,"line_start":986,"line_end":986,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011847,"byte_end":1011850,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011855,"byte_end":1011940,"line_start":988,"line_end":988,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011945,"byte_end":1011948,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1011953,"byte_end":1012045,"line_start":990,"line_end":990,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012050,"byte_end":1012116,"line_start":991,"line_end":991,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012121,"byte_end":1012124,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012129,"byte_end":1012142,"line_start":993,"line_end":993,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012147,"byte_end":1012228,"line_start":994,"line_end":994,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012233,"byte_end":1012236,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012241,"byte_end":1012312,"line_start":996,"line_end":996,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1012317,"byte_end":1012366,"line_start":997,"line_end":997,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5768},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013430,"byte_end":1013441,"line_start":1026,"line_end":1026,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"pub fn copy_within(&mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013082,"byte_end":1013169,"line_start":1019,"line_end":1019,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013174,"byte_end":1013177,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013182,"byte_end":1013279,"line_start":1021,"line_end":1021,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013284,"byte_end":1013287,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013292,"byte_end":1013305,"line_start":1023,"line_end":1023,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013310,"byte_end":1013379,"line_start":1024,"line_end":1024,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1013384,"byte_end":1013422,"line_start":1025,"line_end":1025,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5770},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015325,"byte_end":1015334,"line_start":1069,"line_end":1069,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<&mut Self> where\nSelf: Sized","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015092,"byte_end":1015154,"line_start":1066,"line_end":1066,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015159,"byte_end":1015236,"line_start":1067,"line_end":1067,"column_start":5,"column_end":82}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015241,"byte_end":1015317,"line_start":1068,"line_end":1068,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":8139},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016835,"byte_end":1016843,"line_start":1101,"line_end":1101,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":8141}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015637,"byte_end":1015666,"line_start":1079,"line_end":1079,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015667,"byte_end":1015670,"line_start":1080,"line_end":1080,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015671,"byte_end":1015721,"line_start":1081,"line_end":1081,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015722,"byte_end":1015783,"line_start":1082,"line_end":1082,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015784,"byte_end":1015847,"line_start":1083,"line_end":1083,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015848,"byte_end":1015909,"line_start":1084,"line_end":1084,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015910,"byte_end":1015913,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Note that this does _not_ implement `GenericImage`, but it dereferences to one which allows you","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1015914,"byte_end":1016013,"line_start":1086,"line_end":1086,"column_start":1,"column_end":100}},{"value":"/ to use it as if it did. See [Design Considerations](#Design-Considerations) below for details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016014,"byte_end":1016112,"line_start":1087,"line_end":1087,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016113,"byte_end":1016116,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ # Design Considerations","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016117,"byte_end":1016144,"line_start":1089,"line_end":1089,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016145,"byte_end":1016148,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ For reasons relating to coherence, this is not itself a `GenericImage` or a `GenericImageView`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016149,"byte_end":1016248,"line_start":1091,"line_end":1091,"column_start":1,"column_end":100}},{"value":"/ In short, we want to reserve the ability of adding traits implemented for _all_ generic images","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016249,"byte_end":1016347,"line_start":1092,"line_end":1092,"column_start":1,"column_end":99}},{"value":"/ but in a different manner for `SubImage`. This may be required to ensure that stacking","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016348,"byte_end":1016438,"line_start":1093,"line_end":1093,"column_start":1,"column_end":91}},{"value":"/ sub-images comes at no double indirect cost.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016439,"byte_end":1016487,"line_start":1094,"line_end":1094,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016488,"byte_end":1016491,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ If, ultimately, this is not needed then a directly implementation of `GenericImage` can and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016492,"byte_end":1016587,"line_start":1096,"line_end":1096,"column_start":1,"column_end":96}},{"value":"/ will get added. This inconvenience may alternatively get resolved if Rust allows some forms of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016588,"byte_end":1016686,"line_start":1097,"line_end":1097,"column_start":1,"column_end":99}},{"value":"/ specialization, which might make this trick unnecessary and thus also allows for a direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016687,"byte_end":1016780,"line_start":1098,"line_end":1098,"column_start":1,"column_end":94}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016781,"byte_end":1016800,"line_start":1099,"line_end":1099,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8147},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017127,"byte_end":1017140,"line_start":1110,"line_end":1110,"column_start":12,"column_end":25},"name":"SubImageInner","qualname":"::image::SubImageInner","value":"SubImageInner {  }","parent":null,"children":[{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8153}],"decl_id":null,"docs":" The inner type of `SubImage` that implements `GenericImage{,View}`.","sig":null,"attributes":[{"value":"/ The inner type of `SubImage` that implements `GenericImage{,View}`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016881,"byte_end":1016952,"line_start":1105,"line_end":1105,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016953,"byte_end":1016956,"line_start":1106,"line_end":1106,"column_start":1,"column_end":4}},{"value":"/ This type is _nominally_ `pub` but it is not exported from the crate. It should be regarded as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1016957,"byte_end":1017055,"line_start":1107,"line_end":1107,"column_start":1,"column_end":99}},{"value":"/ an existential type in any case.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017056,"byte_end":1017092,"line_start":1108,"line_end":1108,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017609,"byte_end":1017612,"line_start":1127,"line_end":1127,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"pub fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017488,"byte_end":1017516,"line_start":1125,"line_end":1125,"column_start":5,"column_end":33}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017521,"byte_end":1017597,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017971,"byte_end":1017984,"line_start":1140,"line_end":1140,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017915,"byte_end":1017959,"line_start":1139,"line_end":1139,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018242,"byte_end":1018250,"line_start":1148,"line_end":1148,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"pub fn to_image(&Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImageView + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018187,"byte_end":1018230,"line_start":1147,"line_end":1147,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5782},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019695,"byte_end":1019699,"line_start":1191,"line_end":1191,"column_start":12,"column_end":16},"name":"view","qualname":"<SubImage<I>>::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a sub-view of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018898,"byte_end":1018933,"line_start":1173,"line_end":1173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018938,"byte_end":1018941,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018946,"byte_end":1019029,"line_start":1175,"line_end":1175,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019034,"byte_end":1019037,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ Note that this method is preferred to the one from `GenericImageView`. This is accessible","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019042,"byte_end":1019135,"line_start":1177,"line_end":1177,"column_start":5,"column_end":98}},{"value":"/ with the explicit method call syntax but it should rarely be needed due to causing an","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019140,"byte_end":1019229,"line_start":1178,"line_end":1178,"column_start":5,"column_end":94}},{"value":"/ extra level of indirection.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019234,"byte_end":1019265,"line_start":1179,"line_end":1179,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019270,"byte_end":1019273,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019278,"byte_end":1019285,"line_start":1181,"line_end":1181,"column_start":5,"column_end":12}},{"value":"/ use image::{GenericImageView, RgbImage, SubImage};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019290,"byte_end":1019344,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019349,"byte_end":1019388,"line_start":1183,"line_end":1183,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019393,"byte_end":1019396,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ let subimage: SubImage<&RgbImage> = buffer.view(0, 0, 10, 10);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019401,"byte_end":1019467,"line_start":1185,"line_end":1185,"column_start":5,"column_end":71}},{"value":"/ let subview: SubImage<&RgbImage> = subimage.view(0, 0, 10, 10);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019472,"byte_end":1019539,"line_start":1186,"line_end":1186,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019544,"byte_end":1019547,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ // Less efficient and NOT &RgbImage","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019552,"byte_end":1019591,"line_start":1188,"line_end":1188,"column_start":5,"column_end":44}},{"value":"/ let _: SubImage<&_> = GenericImageView::view(&*subimage, 0, 0, 10, 10);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019596,"byte_end":1019671,"line_start":1189,"line_end":1189,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1019676,"byte_end":1019683,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020170,"byte_end":1020175,"line_start":1201,"line_end":1201,"column_start":12,"column_end":17},"name":"inner","qualname":"<SubImage<I>>::inner","value":"pub fn inner(&Self) -> &I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a reference to the underlying image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020114,"byte_end":1020158,"line_start":1200,"line_end":1200,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020463,"byte_end":1020472,"line_start":1214,"line_end":1214,"column_start":12,"column_end":21},"name":"sub_image","qualname":"<SubImage<I>>::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<&mut I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a mutable sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a mutable sub-view of the image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020312,"byte_end":1020355,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020360,"byte_end":1020363,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020368,"byte_end":1020451,"line_start":1213,"line_end":1213,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020968,"byte_end":1020977,"line_start":1229,"line_end":1229,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage<I>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the underlying image.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020904,"byte_end":1020956,"line_start":1228,"line_end":1228,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039328,"byte_end":1039343,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":5840}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039215,"byte_end":1039293,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039294,"byte_end":1039317,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039414,"byte_end":1039422,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039374,"byte_end":1039406,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":5847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039944,"byte_end":1039953,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[{"krate":0,"index":5848},{"krate":0,"index":5849}],"decl_id":null,"docs":" The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n","sig":null,"attributes":[{"value":"/ The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039775,"byte_end":1039860,"line_start":35,"line_end":35,"column_start":1,"column_end":86}}]},{"kind":"Const","id":{"krate":0,"index":5848},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040211,"byte_end":1040228,"line_start":40,"line_end":40,"column_start":11,"column_end":28},"name":"DEFAULT_MAX_VALUE","qualname":"::traits::Primitive::DEFAULT_MAX_VALUE","value":"Self","parent":{"krate":0,"index":5847},"children":[],"decl_id":null,"docs":" The maximum value for this type of primitive within the context of color.\n For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.\n","sig":null,"attributes":[{"value":"/ The maximum value for this type of primitive within the context of color.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040019,"byte_end":1040096,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040101,"byte_end":1040200,"line_start":39,"line_end":39,"column_start":5,"column_end":104}}]},{"kind":"Const","id":{"krate":0,"index":5849},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040433,"byte_end":1040450,"line_start":44,"line_end":44,"column_start":11,"column_end":28},"name":"DEFAULT_MIN_VALUE","qualname":"::traits::Primitive::DEFAULT_MIN_VALUE","value":"Self","parent":{"krate":0,"index":5847},"children":[],"decl_id":null,"docs":" The minimum value for this type of primitive within the context of color.\n For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.\n","sig":null,"attributes":[{"value":"/ The minimum value for this type of primitive within the context of color.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040241,"byte_end":1040318,"line_start":42,"line_end":42,"column_start":5,"column_end":82}},{"value":"/ For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040323,"byte_end":1040422,"line_start":43,"line_end":43,"column_start":5,"column_end":104}}]},{"kind":"Trait","id":{"krate":0,"index":5851},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041364,"byte_end":1041375,"line_start":72,"line_end":72,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":5852},{"krate":0,"index":5853},{"krate":0,"index":5854}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041221,"byte_end":1041282,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041283,"byte_end":1041353,"line_start":71,"line_end":71,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":5852},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041414,"byte_end":1041420,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Copy + NumCast + Num + PartialOrd<Self::Larger> + Clone + Bounded + AddAssign;","parent":{"krate":0,"index":5851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5853},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041509,"byte_end":1041519,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":5851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041787,"byte_end":1041796,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"to_larger","qualname":"::traits::Enlargeable::to_larger","value":"pub fn to_larger(Self) -> Self::Larger","parent":{"krate":0,"index":5851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1042699,"byte_end":1042703,"line_start":130,"line_end":130,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5881}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1042628,"byte_end":1042688,"line_start":129,"line_end":129,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1042734,"byte_end":1042739,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5881},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1042760,"byte_end":1042764,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"pub fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043635,"byte_end":1043653,"line_start":171,"line_end":171,"column_start":11,"column_end":29},"name":"PixelWithColorType","qualname":"::traits::PixelWithColorType","value":"PixelWithColorType: Pixel + self::private::SealedPixelWithColorType","parent":null,"children":[{"krate":0,"index":5892}],"decl_id":null,"docs":" The pixel with an associated `ColorType`.\n Not all possible pixels represent one of the predefined `ColorType`s.\n","sig":null,"attributes":[{"value":"/ The pixel with an associated `ColorType`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043505,"byte_end":1043550,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/ Not all possible pixels represent one of the predefined `ColorType`s.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043551,"byte_end":1043624,"line_start":170,"line_end":170,"column_start":1,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":5892},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043939,"byte_end":1043949,"line_start":176,"line_end":176,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::PixelWithColorType::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":5891},"children":[],"decl_id":null,"docs":" This pixel has the format of one of the predefined `ColorType`s,\n such as `Rgb8`, `La16` or `Rgba32F`.\n This is needed for automatically detecting\n a color format when saving an image as a file.\n","sig":null,"attributes":[{"value":"/ This pixel has the format of one of the predefined `ColorType`s,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043709,"byte_end":1043777,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ such as `Rgb8`, `La16` or `Rgba32F`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043782,"byte_end":1043822,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ This is needed for automatically detecting","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043827,"byte_end":1043873,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/ a color format when saving an image as a file.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043878,"byte_end":1043928,"line_start":175,"line_end":175,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045023,"byte_end":1045047,"line_start":216,"line_end":216,"column_start":15,"column_end":39},"name":"SealedPixelWithColorType","qualname":"::traits::private::SealedPixelWithColorType","value":"SealedPixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045687,"byte_end":1045692,"line_start":235,"line_end":235,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5942},{"krate":0,"index":5944},{"krate":0,"index":5947},{"krate":0,"index":5950},{"krate":0,"index":5953},{"krate":0,"index":5956},{"krate":0,"index":5958},{"krate":0,"index":5960},{"krate":0,"index":5961}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045562,"byte_end":1045586,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045587,"byte_end":1045590,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045591,"byte_end":1045676,"line_start":234,"line_end":234,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":5927},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045792,"byte_end":1045800,"line_start":237,"line_end":237,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" The scalar type that is used to store each channel in this pixel.\n","sig":null,"attributes":[{"value":"/ The scalar type that is used to store each channel in this pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045713,"byte_end":1045782,"line_start":236,"line_end":236,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045875,"byte_end":1045888,"line_start":240,"line_end":240,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045818,"byte_end":1045864,"line_start":239,"line_end":239,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5929},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045945,"byte_end":1045953,"line_start":243,"line_end":243,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045899,"byte_end":1045937,"line_start":242,"line_end":242,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5930},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046041,"byte_end":1046053,"line_start":246,"line_end":246,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045988,"byte_end":1046033,"line_start":245,"line_end":245,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":5931},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046219,"byte_end":1046230,"line_start":250,"line_end":250,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046096,"byte_end":1046160,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046165,"byte_end":1046208,"line_start":249,"line_end":249,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5932},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046487,"byte_end":1046496,"line_start":255,"line_end":255,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value\n","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046251,"byte_end":1046316,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046321,"byte_end":1046396,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"deprecated(since = \"0.24.0\", note = \"Use `channels()` or `channels_mut()`\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046401,"byte_end":1046479,"line_start":254,"line_end":254,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5933},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046926,"byte_end":1046939,"line_start":270,"line_end":270,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\n                     Self::Subpixel) -> Self","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.\n","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046632,"byte_end":1046688,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046693,"byte_end":1046760,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"deprecated(since = \"0.24.0\", note =\n             \"Use the constructor of the pixel, for example `Rgba::new(r,g,b,a)` or `Pixel::from_slice`\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1046765,"byte_end":1046918,"line_start":266,"line_end":269,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5934},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047293,"byte_end":1047303,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047069,"byte_end":1047101,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047106,"byte_end":1047109,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047114,"byte_end":1047198,"line_start":279,"line_end":279,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047203,"byte_end":1047285,"line_start":280,"line_end":280,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047583,"byte_end":1047597,"line_start":287,"line_end":287,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047345,"byte_end":1047391,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047396,"byte_end":1047399,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047404,"byte_end":1047488,"line_start":285,"line_end":285,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047493,"byte_end":1047575,"line_start":286,"line_end":286,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5936},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047684,"byte_end":1047690,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047647,"byte_end":1047676,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047786,"byte_end":1047793,"line_start":293,"line_end":293,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047727,"byte_end":1047778,"line_start":292,"line_end":292,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047869,"byte_end":1047876,"line_start":296,"line_end":296,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047831,"byte_end":1047861,"line_start":295,"line_end":295,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047974,"byte_end":1047987,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1047914,"byte_end":1047966,"line_start":298,"line_end":298,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048095,"byte_end":1048098,"line_start":302,"line_end":302,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048026,"byte_end":1048087,"line_start":301,"line_end":301,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048259,"byte_end":1048264,"line_start":307,"line_end":307,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048190,"byte_end":1048251,"line_start":306,"line_end":306,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048489,"byte_end":1048503,"line_start":313,"line_end":313,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048352,"byte_end":1048424,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048429,"byte_end":1048481,"line_start":312,"line_end":312,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048809,"byte_end":1048825,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048656,"byte_end":1048728,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048733,"byte_end":1048801,"line_start":319,"line_end":319,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5950},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049054,"byte_end":1049071,"line_start":326,"line_end":326,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"pub fn map_without_alpha<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1048974,"byte_end":1049046,"line_start":325,"line_end":325,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5953},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049363,"byte_end":1049382,"line_start":337,"line_end":337,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"pub fn apply_without_alpha<F>(&mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049259,"byte_end":1049331,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049336,"byte_end":1049355,"line_start":336,"line_end":336,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5956},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049625,"byte_end":1049629,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049523,"byte_end":1049587,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049592,"byte_end":1049617,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049869,"byte_end":1049875,"line_start":352,"line_end":352,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049751,"byte_end":1049815,"line_start":350,"line_end":350,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049820,"byte_end":1049861,"line_start":351,"line_end":351,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5960},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1050022,"byte_end":1050028,"line_start":357,"line_end":357,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1049993,"byte_end":1050014,"line_start":356,"line_end":356,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1050139,"byte_end":1050144,"line_start":360,"line_end":360,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1050046,"byte_end":1050131,"line_start":359,"line_end":359,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1050253,"byte_end":1050268,"line_start":365,"line_end":365,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16337,"byte_end":16353,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17018,"byte_end":17031,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17784,"byte_end":17797,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18551,"byte_end":18565,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18944,"byte_end":18954,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19290,"byte_end":19300,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19416,"byte_end":19431,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19560,"byte_end":19575,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19825,"byte_end":19841,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":20144,"byte_end":20154,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":20615,"byte_end":20625,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":21078,"byte_end":21094,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":22467,"byte_end":22483,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":22510,"byte_end":22524,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":23397,"byte_end":23411,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":23616,"byte_end":23629,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24012,"byte_end":24025,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24230,"byte_end":24243,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24721,"byte_end":24734,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24939,"byte_end":24949,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":25453,"byte_end":25463,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":25490,"byte_end":25505,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72855,"byte_end":72862,"line_start":414,"line_end":414,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":73629,"byte_end":73637,"line_start":449,"line_end":449,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":81144,"byte_end":81156,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":89582,"byte_end":89594,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":116582,"byte_end":116593,"line_start":94,"line_end":94,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":117701,"byte_end":117711,"line_start":127,"line_end":127,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126329,"byte_end":126335,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128399,"byte_end":128405,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129229,"byte_end":129235,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108584,"byte_end":108596,"line_start":17,"line_end":17,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110644,"byte_end":110650,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110875,"byte_end":110881,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137121,"byte_end":137133,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149809,"byte_end":149812,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150072,"byte_end":150083,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167541,"byte_end":167552,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173528,"byte_end":173532,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179136,"byte_end":179143,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":183574,"byte_end":183585,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":184209,"byte_end":184220,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":184838,"byte_end":184842,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":186000,"byte_end":186007,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":187184,"byte_end":187191,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":188044,"byte_end":188054,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":188206,"byte_end":188229,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":188437,"byte_end":188460,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":189136,"byte_end":189141,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":190076,"byte_end":190081,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":190106,"byte_end":190116,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":199368,"byte_end":199379,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":201303,"byte_end":201315,"line_start":164,"line_end":164,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":203484,"byte_end":203494,"line_start":208,"line_end":208,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":203650,"byte_end":203662,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":204009,"byte_end":204026,"line_start":229,"line_end":229,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":211901,"byte_end":211909,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":213295,"byte_end":213304,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":214589,"byte_end":214604,"line_start":579,"line_end":579,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":216460,"byte_end":216470,"line_start":631,"line_end":631,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":250260,"byte_end":250269,"line_start":1484,"line_end":1484,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":250689,"byte_end":250699,"line_start":1498,"line_end":1498,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":251475,"byte_end":251485,"line_start":1528,"line_end":1528,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256086,"byte_end":256096,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":264338,"byte_end":264348,"line_start":242,"line_end":242,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":269770,"byte_end":269782,"line_start":35,"line_end":35,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":270451,"byte_end":270461,"line_start":52,"line_end":52,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":270617,"byte_end":270629,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":271098,"byte_end":271109,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":271833,"byte_end":271839,"line_start":109,"line_end":109,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":273539,"byte_end":273549,"line_start":162,"line_end":162,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":275867,"byte_end":275877,"line_start":223,"line_end":223,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278747,"byte_end":278757,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279714,"byte_end":279724,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":281750,"byte_end":281760,"line_start":120,"line_end":120,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":282658,"byte_end":282668,"line_start":152,"line_end":152,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283694,"byte_end":283703,"line_start":192,"line_end":192,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283963,"byte_end":283973,"line_start":204,"line_end":204,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309797,"byte_end":309811,"line_start":41,"line_end":41,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":311546,"byte_end":311560,"line_start":91,"line_end":91,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":312339,"byte_end":312353,"line_start":117,"line_end":117,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315030,"byte_end":315045,"line_start":191,"line_end":191,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315338,"byte_end":315353,"line_start":200,"line_end":200,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315765,"byte_end":315780,"line_start":220,"line_end":220,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316646,"byte_end":316661,"line_start":254,"line_end":254,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":317693,"byte_end":317708,"line_start":286,"line_end":286,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322981,"byte_end":322991,"line_start":54,"line_end":54,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323467,"byte_end":323476,"line_start":68,"line_end":68,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323889,"byte_end":323899,"line_start":82,"line_end":82,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":328596,"byte_end":328612,"line_start":209,"line_end":209,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":329223,"byte_end":329239,"line_start":230,"line_end":230,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":333800,"byte_end":333810,"line_start":342,"line_end":342,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334102,"byte_end":334111,"line_start":357,"line_end":357,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334774,"byte_end":334780,"line_start":380,"line_end":380,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335163,"byte_end":335173,"line_start":397,"line_end":397,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":340531,"byte_end":340541,"line_start":545,"line_end":545,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":344137,"byte_end":344149,"line_start":52,"line_end":52,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":345916,"byte_end":345926,"line_start":89,"line_end":89,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":346082,"byte_end":346094,"line_start":95,"line_end":95,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":346596,"byte_end":346604,"line_start":115,"line_end":115,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347195,"byte_end":347205,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":348579,"byte_end":348588,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":349004,"byte_end":349014,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":349558,"byte_end":349568,"line_start":214,"line_end":214,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350698,"byte_end":350708,"line_start":266,"line_end":266,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353014,"byte_end":353024,"line_start":331,"line_end":331,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2205},{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":359237,"byte_end":359247,"line_start":498,"line_end":498,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":360141,"byte_end":360164,"line_start":526,"line_end":526,"column_start":15,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":360454,"byte_end":360477,"line_start":539,"line_end":539,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":362283,"byte_end":362306,"line_start":590,"line_end":590,"column_start":37,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368727,"byte_end":368738,"line_start":762,"line_end":762,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379553,"byte_end":379563,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":382146,"byte_end":382157,"line_start":90,"line_end":90,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":382283,"byte_end":382294,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":382995,"byte_end":383015,"line_start":125,"line_end":125,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":383274,"byte_end":383294,"line_start":135,"line_end":135,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":396920,"byte_end":396932,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398182,"byte_end":398192,"line_start":75,"line_end":75,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398348,"byte_end":398360,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398601,"byte_end":398620,"line_start":92,"line_end":92,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398860,"byte_end":398879,"line_start":101,"line_end":101,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":400160,"byte_end":400170,"line_start":146,"line_end":146,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":402513,"byte_end":402521,"line_start":218,"line_end":218,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":403834,"byte_end":403843,"line_start":266,"line_end":266,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2492},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":404263,"byte_end":404273,"line_start":280,"line_end":280,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415453,"byte_end":415461,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417157,"byte_end":417167,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":419421,"byte_end":419431,"line_start":141,"line_end":141,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":421916,"byte_end":421927,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423710,"byte_end":423720,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":424133,"byte_end":424144,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":425925,"byte_end":425934,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":426227,"byte_end":426237,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":465437,"byte_end":465446,"line_start":186,"line_end":186,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2798},{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468921,"byte_end":468933,"line_start":318,"line_end":318,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469271,"byte_end":469283,"line_start":330,"line_end":330,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469913,"byte_end":469924,"line_start":355,"line_end":355,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2831},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480511,"byte_end":480522,"line_start":658,"line_end":658,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503569,"byte_end":503583,"line_start":52,"line_end":52,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":506241,"byte_end":506255,"line_start":111,"line_end":111,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":515823,"byte_end":515837,"line_start":347,"line_end":347,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":516143,"byte_end":516157,"line_start":355,"line_end":355,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526834,"byte_end":526843,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":527635,"byte_end":527644,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":529037,"byte_end":529047,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533847,"byte_end":533857,"line_start":219,"line_end":219,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535918,"byte_end":535929,"line_start":283,"line_end":283,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":541600,"byte_end":541611,"line_start":430,"line_end":430,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":541749,"byte_end":541762,"line_start":434,"line_end":434,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544189,"byte_end":544199,"line_start":513,"line_end":513,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":548674,"byte_end":548684,"line_start":614,"line_end":614,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":550431,"byte_end":550441,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551381,"byte_end":551396,"line_start":680,"line_end":680,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551482,"byte_end":551492,"line_start":686,"line_end":686,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551582,"byte_end":551602,"line_start":692,"line_end":692,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551908,"byte_end":551928,"line_start":704,"line_end":704,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\autobreak.rs","byte_start":560214,"byte_end":560223,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3277}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\autobreak.rs","byte_start":561484,"byte_end":561493,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3280},{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\autobreak.rs","byte_start":562119,"byte_end":562128,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":565967,"byte_end":565979,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":569261,"byte_end":569271,"line_start":158,"line_end":158,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":569427,"byte_end":569439,"line_start":164,"line_end":164,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":569915,"byte_end":569928,"line_start":186,"line_end":186,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":570520,"byte_end":570535,"line_start":208,"line_end":208,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":571555,"byte_end":571565,"line_start":251,"line_end":251,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583123,"byte_end":583124,"line_start":564,"line_end":564,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583267,"byte_end":583276,"line_start":568,"line_end":568,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583689,"byte_end":583699,"line_start":582,"line_end":582,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":585432,"byte_end":585442,"line_start":631,"line_end":631,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":587679,"byte_end":587681,"line_start":692,"line_end":692,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":588187,"byte_end":588190,"line_start":710,"line_end":710,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":589187,"byte_end":589193,"line_start":736,"line_end":736,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":590479,"byte_end":590484,"line_start":774,"line_end":774,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591130,"byte_end":591142,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591267,"byte_end":591280,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591596,"byte_end":591608,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591918,"byte_end":591933,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":609968,"byte_end":609978,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":617866,"byte_end":617876,"line_start":291,"line_end":291,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":618109,"byte_end":618127,"line_start":303,"line_end":303,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":618997,"byte_end":619012,"line_start":331,"line_end":331,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3669}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":619573,"byte_end":619590,"line_start":352,"line_end":352,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":623610,"byte_end":623628,"line_start":446,"line_end":446,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":626077,"byte_end":626090,"line_start":510,"line_end":510,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":626401,"byte_end":626413,"line_start":523,"line_end":523,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":627830,"byte_end":627841,"line_start":568,"line_end":568,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":629552,"byte_end":629563,"line_start":622,"line_end":622,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":629682,"byte_end":629693,"line_start":628,"line_end":628,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3702}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":629794,"byte_end":629807,"line_start":634,"line_end":634,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634664,"byte_end":634681,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":635193,"byte_end":635203,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":636173,"byte_end":636182,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":640856,"byte_end":640870,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":641549,"byte_end":641558,"line_start":320,"line_end":320,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":641751,"byte_end":641760,"line_start":329,"line_end":329,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":641954,"byte_end":641963,"line_start":338,"line_end":338,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":642158,"byte_end":642167,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":643238,"byte_end":643246,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3845},{"krate":0,"index":3846}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":644426,"byte_end":644436,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":657044,"byte_end":657054,"line_start":414,"line_end":414,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":659967,"byte_end":659976,"line_start":497,"line_end":497,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":660621,"byte_end":660633,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3935}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661000,"byte_end":661010,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661166,"byte_end":661178,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661267,"byte_end":661277,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":662801,"byte_end":662811,"line_start":88,"line_end":88,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3950}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\header.rs","byte_start":667665,"byte_end":667674,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\header.rs","byte_start":669592,"byte_end":669598,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":673310,"byte_end":673321,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":676083,"byte_end":676093,"line_start":107,"line_end":107,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4113},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":677974,"byte_end":677984,"line_start":151,"line_end":151,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":678404,"byte_end":678415,"line_start":165,"line_end":165,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":681921,"byte_end":681932,"line_start":258,"line_end":258,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4139},{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":683886,"byte_end":683897,"line_start":310,"line_end":310,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4143}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":685096,"byte_end":685108,"line_start":28,"line_end":28,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4221}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":685245,"byte_end":685260,"line_start":31,"line_end":31,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":685985,"byte_end":685995,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686152,"byte_end":686164,"line_start":60,"line_end":60,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686405,"byte_end":686416,"line_start":73,"line_end":73,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4251}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":689871,"byte_end":689881,"line_start":178,"line_end":178,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":690294,"byte_end":690305,"line_start":192,"line_end":192,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\huffman.rs","byte_start":700241,"byte_end":700252,"line_start":28,"line_end":28,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":708481,"byte_end":708493,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4382}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":709496,"byte_end":709506,"line_start":105,"line_end":105,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":709663,"byte_end":709675,"line_start":111,"line_end":111,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":709978,"byte_end":709993,"line_start":125,"line_end":125,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":726770,"byte_end":726781,"line_start":616,"line_end":616,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":727201,"byte_end":727211,"line_start":633,"line_end":633,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4405},{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":727742,"byte_end":727751,"line_start":654,"line_end":654,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":728811,"byte_end":728824,"line_start":699,"line_end":699,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":730905,"byte_end":730918,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4426}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":745479,"byte_end":745500,"line_start":394,"line_end":394,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":774012,"byte_end":774024,"line_start":689,"line_end":689,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4568}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":775148,"byte_end":775158,"line_start":717,"line_end":717,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4570}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":775315,"byte_end":775327,"line_start":723,"line_end":723,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":775448,"byte_end":775458,"line_start":734,"line_end":734,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":779181,"byte_end":779186,"line_start":884,"line_end":884,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":781402,"byte_end":781412,"line_start":978,"line_end":978,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4638},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":819260,"byte_end":819268,"line_start":2074,"line_end":2074,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4653},{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":819885,"byte_end":819893,"line_start":2097,"line_end":2097,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4656}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":819958,"byte_end":819968,"line_start":2103,"line_end":2103,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":820257,"byte_end":820267,"line_start":2115,"line_end":2115,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4660}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":820334,"byte_end":820343,"line_start":2121,"line_end":2121,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4662}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":820880,"byte_end":820889,"line_start":2139,"line_end":2139,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844119,"byte_end":844125,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4714},{"krate":0,"index":4715}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844715,"byte_end":844721,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4718},{"krate":0,"index":4719}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845240,"byte_end":845245,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846318,"byte_end":846323,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":852512,"byte_end":852520,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4745}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856050,"byte_end":856056,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4854},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856300,"byte_end":856306,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4860}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856455,"byte_end":856461,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4864}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856670,"byte_end":856676,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856823,"byte_end":856829,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4871}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857231,"byte_end":857240,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857496,"byte_end":857505,"line_start":96,"line_end":96,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4885}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857654,"byte_end":857663,"line_start":105,"line_end":105,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4889}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857911,"byte_end":857920,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858473,"byte_end":858477,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4901}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":859395,"byte_end":859399,"line_start":162,"line_end":162,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4905},{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":859809,"byte_end":859813,"line_start":178,"line_end":178,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4910}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":859962,"byte_end":859966,"line_start":187,"line_end":187,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860333,"byte_end":860337,"line_start":201,"line_end":201,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860482,"byte_end":860486,"line_start":209,"line_end":209,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4920}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":861060,"byte_end":861067,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4928}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862007,"byte_end":862014,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4932},{"krate":0,"index":4933}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862437,"byte_end":862444,"line_start":270,"line_end":270,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862593,"byte_end":862600,"line_start":279,"line_end":279,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4941}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862982,"byte_end":862989,"line_start":293,"line_end":293,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4944}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863432,"byte_end":863447,"line_start":315,"line_end":315,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4955},{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863850,"byte_end":863865,"line_start":333,"line_end":333,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4961}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863991,"byte_end":864006,"line_start":342,"line_end":342,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4964}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":864182,"byte_end":864197,"line_start":351,"line_end":351,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4967}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":864735,"byte_end":864748,"line_start":375,"line_end":375,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4977},{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865286,"byte_end":865299,"line_start":399,"line_end":399,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4983}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865423,"byte_end":865436,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865606,"byte_end":865619,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4989}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":866144,"byte_end":866162,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":866573,"byte_end":866591,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5006}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":866722,"byte_end":866740,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5009}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867287,"byte_end":867303,"line_start":492,"line_end":492,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5019},{"krate":0,"index":5020}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867850,"byte_end":867866,"line_start":516,"line_end":516,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5025}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867995,"byte_end":868011,"line_start":525,"line_end":525,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5028}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870882,"byte_end":870893,"line_start":615,"line_end":615,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5035},{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878650,"byte_end":878661,"line_start":835,"line_end":835,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5068}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881981,"byte_end":881992,"line_start":932,"line_end":932,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5072}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882757,"byte_end":882768,"line_start":960,"line_end":960,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883535,"byte_end":883546,"line_start":988,"line_end":988,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5082}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":884479,"byte_end":884490,"line_start":1019,"line_end":1019,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5088}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":884759,"byte_end":884770,"line_start":1034,"line_end":1034,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":884998,"byte_end":885009,"line_start":1046,"line_end":1046,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5097}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":885239,"byte_end":885250,"line_start":1056,"line_end":1056,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5101},{"krate":0,"index":5102}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":885485,"byte_end":885496,"line_start":1068,"line_end":1068,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5106}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":885721,"byte_end":885732,"line_start":1078,"line_end":1078,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":886091,"byte_end":886102,"line_start":1093,"line_end":1093,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":886791,"byte_end":886802,"line_start":1120,"line_end":1120,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889465,"byte_end":889476,"line_start":1192,"line_end":1192,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5129},{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5133},{"krate":0,"index":5134}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891878,"byte_end":891887,"line_start":1267,"line_end":1267,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5139}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":893265,"byte_end":893276,"line_start":1305,"line_end":1305,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5147}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904943,"byte_end":904952,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5193}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908604,"byte_end":908621,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5195}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":909942,"byte_end":909959,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5197}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915479,"byte_end":915480,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5204}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":917722,"byte_end":917723,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5228}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":918746,"byte_end":918750,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5237}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919024,"byte_end":919028,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919264,"byte_end":919268,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919562,"byte_end":919566,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5249}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919893,"byte_end":919898,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":920231,"byte_end":920236,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":920576,"byte_end":920581,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5261}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":920916,"byte_end":920921,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5265}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":921240,"byte_end":921244,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5269}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":921638,"byte_end":921642,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5273}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":922027,"byte_end":922031,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5277}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":922425,"byte_end":922429,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5281}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":922832,"byte_end":922835,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5285}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":923183,"byte_end":923186,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":923532,"byte_end":923535,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":923874,"byte_end":923877,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":924325,"byte_end":924330,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5302}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":925341,"byte_end":925345,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5305}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":925455,"byte_end":925459,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":927671,"byte_end":927674,"line_start":786,"line_end":786,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5311}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":927892,"byte_end":927897,"line_start":798,"line_end":798,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":928076,"byte_end":928080,"line_start":807,"line_end":807,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":928274,"byte_end":928278,"line_start":818,"line_end":818,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":928496,"byte_end":928499,"line_start":828,"line_end":828,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5325}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937112,"byte_end":937124,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497},{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5506},{"krate":0,"index":5507},{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5531},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5550},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963615,"byte_end":963627,"line_start":859,"line_end":859,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5555}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963749,"byte_end":963761,"line_start":865,"line_end":865,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5557}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963883,"byte_end":963895,"line_start":871,"line_end":871,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5559}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964010,"byte_end":964022,"line_start":877,"line_end":877,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5561}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964141,"byte_end":964153,"line_start":883,"line_end":883,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5563}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964280,"byte_end":964292,"line_start":889,"line_end":889,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5565}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964419,"byte_end":964431,"line_start":895,"line_end":895,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5567}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964551,"byte_end":964563,"line_start":901,"line_end":901,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964685,"byte_end":964697,"line_start":907,"line_end":907,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5571}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964820,"byte_end":964832,"line_start":913,"line_end":913,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5573}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964977,"byte_end":964989,"line_start":919,"line_end":919,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5575}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":965164,"byte_end":965176,"line_start":925,"line_end":925,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5577}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":965351,"byte_end":965363,"line_start":932,"line_end":932,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":965861,"byte_end":965873,"line_start":949,"line_end":949,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":968286,"byte_end":968298,"line_start":994,"line_end":994,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5588}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979855,"byte_end":979866,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5676},{"krate":0,"index":5679},{"krate":0,"index":5683},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987905,"byte_end":987922,"line_start":311,"line_end":311,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":989525,"byte_end":989540,"line_start":355,"line_end":355,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5697},{"krate":0,"index":5698}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998773,"byte_end":998781,"line_start":600,"line_end":600,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5716}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006714,"byte_end":1006720,"line_start":818,"line_end":818,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5745},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007188,"byte_end":1007194,"line_start":840,"line_end":840,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017470,"byte_end":1017478,"line_start":1124,"line_end":1124,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018827,"byte_end":1018835,"line_start":1168,"line_end":1168,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5782},{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020242,"byte_end":1020250,"line_start":1206,"line_end":1206,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5790}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021066,"byte_end":1021074,"line_start":1234,"line_end":1234,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5793},{"krate":0,"index":5794}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021225,"byte_end":1021233,"line_start":1244,"line_end":1244,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021396,"byte_end":1021409,"line_start":1254,"line_end":1254,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021882,"byte_end":1021895,"line_start":1275,"line_end":1275,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043993,"byte_end":1043996,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5894}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044084,"byte_end":1044087,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5896}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044177,"byte_end":1044180,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5898}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044272,"byte_end":1044276,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5900}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044365,"byte_end":1044369,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5902}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044460,"byte_end":1044464,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044557,"byte_end":1044561,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5906}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044647,"byte_end":1044651,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5908}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044739,"byte_end":1044744,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5910}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044831,"byte_end":1044836,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045089,"byte_end":1045092,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045138,"byte_end":1045141,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045188,"byte_end":1045191,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045239,"byte_end":1045243,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045289,"byte_end":1045293,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045340,"byte_end":1045344,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045392,"byte_end":1045396,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045442,"byte_end":1045447,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045494,"byte_end":1045498,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045545,"byte_end":1045550,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5039,"byte_end":5044,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":144}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5381,"byte_end":5385,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5426,"byte_end":5434,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":257}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\mod.rs","byte_start":32250,"byte_end":32258,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":448}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5460,"byte_end":5462,"line_start":171,"line_end":171,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":714}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":5508,"byte_end":5512,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":926}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7823,"byte_end":7826,"line_start":221,"line_end":221,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1142}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":7868,"byte_end":7871,"line_start":223,"line_end":223,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1491}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8081,"byte_end":8084,"line_start":226,"line_end":226,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1578}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8131,"byte_end":8139,"line_start":228,"line_end":228,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1733}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8181,"byte_end":8184,"line_start":230,"line_end":230,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1868}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8226,"byte_end":8229,"line_start":232,"line_end":232,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2041}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8271,"byte_end":8274,"line_start":234,"line_end":234,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2353}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8317,"byte_end":8321,"line_start":236,"line_end":236,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2571}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8367,"byte_end":8374,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2905}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8416,"byte_end":8419,"line_start":240,"line_end":240,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3000}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8461,"byte_end":8464,"line_start":242,"line_end":242,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3224}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8506,"byte_end":8509,"line_start":244,"line_end":244,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3762}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8552,"byte_end":8556,"line_start":246,"line_end":246,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4024}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src/lib.rs","byte_start":8599,"byte_end":8603,"line_start":248,"line_end":248,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4144}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\mod.rs","byte_start":684289,"byte_end":684292,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4448}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":16337,"byte_end":16353,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17018,"byte_end":17031,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":17784,"byte_end":17797,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18551,"byte_end":18565,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":18944,"byte_end":18954,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19290,"byte_end":19300,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19416,"byte_end":19431,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19560,"byte_end":19575,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":19825,"byte_end":19841,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6005},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":20144,"byte_end":20154,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":20615,"byte_end":20625,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5984},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":21078,"byte_end":21094,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6005},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":22467,"byte_end":22483,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6005},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":22510,"byte_end":22524,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":23397,"byte_end":23411,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6036},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":23616,"byte_end":23629,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6031},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24012,"byte_end":24025,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6031},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24230,"byte_end":24243,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6062},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24721,"byte_end":24734,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6062},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":24939,"byte_end":24949,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":25453,"byte_end":25463,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6067},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\error.rs","byte_start":25490,"byte_end":25505,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":72855,"byte_end":72862,"line_start":414,"line_end":414,"column_start":19,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6136},"to":{"krate":0,"index":535}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\colorops.rs","byte_start":73629,"byte_end":73637,"line_start":449,"line_end":449,"column_start":32,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":58,"index":26},"to":{"krate":0,"index":535}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":81144,"byte_end":81156,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":607},"to":{"krate":55,"index":294}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\imageops\\sample.rs","byte_start":89582,"byte_end":89594,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":116582,"byte_end":116593,"line_start":94,"line_end":94,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":802},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\free_functions.rs","byte_start":117701,"byte_end":117711,"line_start":127,"line_end":127,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":813},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":126329,"byte_end":126335,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":128399,"byte_end":128405,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\reader.rs","byte_start":129229,"byte_end":129235,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":108584,"byte_end":108596,"line_start":17,"line_end":17,"column_start":18,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110644,"byte_end":110650,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\io\\mod.rs","byte_start":110875,"byte_end":110881,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":137121,"byte_end":137133,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":149809,"byte_end":149812,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":150072,"byte_end":150083,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":167541,"byte_end":167552,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":173528,"byte_end":173532,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":179136,"byte_end":179143,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":183574,"byte_end":183585,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6195},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":184209,"byte_end":184220,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6195},"to":{"krate":2,"index":3304}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":184838,"byte_end":184842,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6248},"to":{"krate":0,"index":5750}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":186000,"byte_end":186007,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6261},"to":{"krate":0,"index":5750}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":187184,"byte_end":187191,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6261},"to":{"krate":0,"index":5761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":188044,"byte_end":188054,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":188206,"byte_end":188229,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6323},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":188437,"byte_end":188460,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6323},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":189136,"byte_end":189141,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6274},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":190076,"byte_end":190081,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6274},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\flat.rs","byte_start":190106,"byte_end":190116,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6298},"to":{"krate":2,"index":2702}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":199368,"byte_end":199379,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":201303,"byte_end":201315,"line_start":164,"line_end":164,"column_start":23,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6381},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":203484,"byte_end":203494,"line_start":208,"line_end":208,"column_start":29,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":203650,"byte_end":203662,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6381},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":204009,"byte_end":204026,"line_start":229,"line_end":229,"column_start":23,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6442},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":211901,"byte_end":211909,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":213295,"byte_end":213304,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":214589,"byte_end":214604,"line_start":579,"line_end":579,"column_start":32,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1352},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":216460,"byte_end":216470,"line_start":631,"line_end":631,"column_start":22,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":250260,"byte_end":250269,"line_start":1484,"line_end":1484,"column_start":18,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1402},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":250689,"byte_end":250699,"line_start":1498,"line_end":1498,"column_start":52,"column_end":62},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1317},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\decoder.rs","byte_start":251475,"byte_end":251485,"line_start":1528,"line_end":1528,"column_start":56,"column_end":66},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1317},"to":{"krate":0,"index":5731}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":256086,"byte_end":256096,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\bmp\\encoder.rs","byte_start":264338,"byte_end":264348,"line_start":242,"line_end":242,"column_start":37,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1463},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":269770,"byte_end":269782,"line_start":35,"line_end":35,"column_start":23,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6496},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":270451,"byte_end":270461,"line_start":52,"line_end":52,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":270617,"byte_end":270629,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6496},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":271098,"byte_end":271109,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":271833,"byte_end":271839,"line_start":109,"line_end":109,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":273539,"byte_end":273549,"line_start":162,"line_end":162,"column_start":15,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dds.rs","byte_start":275867,"byte_end":275877,"line_start":223,"line_end":223,"column_start":45,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1562},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":278747,"byte_end":278757,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":279714,"byte_end":279724,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":281750,"byte_end":281760,"line_start":120,"line_end":120,"column_start":45,"column_end":55},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1634},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":282658,"byte_end":282668,"line_start":152,"line_end":152,"column_start":56,"column_end":66},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1634},"to":{"krate":0,"index":5731}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283694,"byte_end":283703,"line_start":192,"line_end":192,"column_start":24,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1662},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\dxt.rs","byte_start":283963,"byte_end":283973,"line_start":204,"line_end":204,"column_start":16,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":309797,"byte_end":309811,"line_start":41,"line_end":41,"column_start":15,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":311546,"byte_end":311560,"line_start":91,"line_end":91,"column_start":24,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":312339,"byte_end":312353,"line_start":117,"line_end":117,"column_start":31,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":4383}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315030,"byte_end":315045,"line_start":191,"line_end":191,"column_start":15,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315338,"byte_end":315353,"line_start":200,"line_end":200,"column_start":45,"column_end":60},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1834},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":315765,"byte_end":315780,"line_start":220,"line_end":220,"column_start":56,"column_end":71},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1834},"to":{"krate":0,"index":5731}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":316646,"byte_end":316661,"line_start":254,"line_end":254,"column_start":16,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\farbfeld.rs","byte_start":317693,"byte_end":317708,"line_start":286,"line_end":286,"column_start":33,"column_end":48},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1856},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":322981,"byte_end":322991,"line_start":54,"line_end":54,"column_start":15,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323467,"byte_end":323476,"line_start":68,"line_end":68,"column_start":18,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1967},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":323889,"byte_end":323899,"line_start":82,"line_end":82,"column_start":45,"column_end":55},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1961},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":328596,"byte_end":328612,"line_start":209,"line_end":209,"column_start":15,"column_end":31},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":329223,"byte_end":329239,"line_start":230,"line_end":230,"column_start":28,"column_end":44},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":333800,"byte_end":333810,"line_start":342,"line_end":342,"column_start":49,"column_end":59},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1961},"to":{"krate":0,"index":5737}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334102,"byte_end":334111,"line_start":357,"line_end":357,"column_start":6,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":334774,"byte_end":334780,"line_start":380,"line_end":380,"column_start":6,"column_end":12},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":335163,"byte_end":335173,"line_start":397,"line_end":397,"column_start":16,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\gif.rs","byte_start":340531,"byte_end":340541,"line_start":545,"line_end":545,"column_start":6,"column_end":16},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":344137,"byte_end":344149,"line_start":52,"line_end":52,"column_start":23,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6579},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":345916,"byte_end":345926,"line_start":89,"line_end":89,"column_start":29,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":346082,"byte_end":346094,"line_start":95,"line_end":95,"column_start":23,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6579},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":346596,"byte_end":346604,"line_start":115,"line_end":115,"column_start":23,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6623},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":347195,"byte_end":347205,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":348579,"byte_end":348588,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2158},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":349004,"byte_end":349014,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6652},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":349558,"byte_end":349568,"line_start":214,"line_end":214,"column_start":59,"column_end":69},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6652},"to":{"krate":0,"index":5731}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":350698,"byte_end":350708,"line_start":266,"line_end":266,"column_start":6,"column_end":16},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":353014,"byte_end":353024,"line_start":331,"line_end":331,"column_start":18,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":359237,"byte_end":359247,"line_start":498,"line_end":498,"column_start":32,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":7427}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":360141,"byte_end":360164,"line_start":526,"line_end":526,"column_start":15,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":360454,"byte_end":360477,"line_start":539,"line_end":539,"column_start":28,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":362283,"byte_end":362306,"line_start":590,"line_end":590,"column_start":37,"column_end":60},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\decoder.rs","byte_start":368727,"byte_end":368738,"line_start":762,"line_end":762,"column_start":6,"column_end":17},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":379553,"byte_end":379563,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":382146,"byte_end":382157,"line_start":90,"line_end":90,"column_start":10,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":382283,"byte_end":382294,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":382995,"byte_end":383015,"line_start":125,"line_end":125,"column_start":10,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\hdr\\encoder.rs","byte_start":383274,"byte_end":383294,"line_start":135,"line_end":135,"column_start":23,"column_end":43},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2335},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":396920,"byte_end":396932,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6718},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398182,"byte_end":398192,"line_start":75,"line_end":75,"column_start":29,"column_end":39},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398348,"byte_end":398360,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6718},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398601,"byte_end":398620,"line_start":92,"line_end":92,"column_start":23,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6754},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":398860,"byte_end":398879,"line_start":101,"line_end":101,"column_start":28,"column_end":47},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6754},"to":{"krate":2,"index":2907}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":400160,"byte_end":400170,"line_start":146,"line_end":146,"column_start":22,"column_end":32},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":402513,"byte_end":402521,"line_start":218,"line_end":218,"column_start":6,"column_end":14},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":403834,"byte_end":403843,"line_start":266,"line_end":266,"column_start":18,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2485},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\decoder.rs","byte_start":404263,"byte_end":404273,"line_start":280,"line_end":280,"column_start":52,"column_end":62},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2453},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":415453,"byte_end":415461,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":417157,"byte_end":417167,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\ico\\encoder.rs","byte_start":419421,"byte_end":419431,"line_start":141,"line_end":141,"column_start":33,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2545},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":421916,"byte_end":421927,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":423710,"byte_end":423720,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2640},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":424133,"byte_end":424144,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2631},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":425925,"byte_end":425934,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\decoder.rs","byte_start":426227,"byte_end":426237,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":465437,"byte_end":465446,"line_start":186,"line_end":186,"column_start":16,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":468921,"byte_end":468933,"line_start":318,"line_end":318,"column_start":6,"column_end":18},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469271,"byte_end":469283,"line_start":330,"line_end":330,"column_start":18,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6826},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":469913,"byte_end":469924,"line_start":355,"line_end":355,"column_start":16,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480511,"byte_end":480522,"line_start":658,"line_end":658,"column_start":33,"column_end":44},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2804},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":503569,"byte_end":503583,"line_start":52,"line_end":52,"column_start":22,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":506241,"byte_end":506255,"line_start":111,"line_end":111,"column_start":52,"column_end":66},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6841},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":515823,"byte_end":515837,"line_start":347,"line_end":347,"column_start":9,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\openexr.rs","byte_start":516143,"byte_end":516157,"line_start":355,"line_end":355,"column_start":26,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6850},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":526834,"byte_end":526843,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":527635,"byte_end":527644,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3118},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":529037,"byte_end":529047,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":533847,"byte_end":533857,"line_start":219,"line_end":219,"column_start":45,"column_end":55},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3130},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":535918,"byte_end":535929,"line_start":283,"line_end":283,"column_start":15,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":541600,"byte_end":541611,"line_start":430,"line_end":430,"column_start":49,"column_end":60},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3160},"to":{"krate":0,"index":5737}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":541749,"byte_end":541762,"line_start":434,"line_end":434,"column_start":36,"column_end":49},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":544189,"byte_end":544199,"line_start":513,"line_end":513,"column_start":16,"column_end":26},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":548674,"byte_end":548684,"line_start":614,"line_end":614,"column_start":33,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3186},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":550431,"byte_end":550441,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551381,"byte_end":551396,"line_start":680,"line_end":680,"column_start":18,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6857},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551482,"byte_end":551492,"line_start":686,"line_end":686,"column_start":18,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6879},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551582,"byte_end":551602,"line_start":692,"line_end":692,"column_start":23,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6903},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\png.rs","byte_start":551908,"byte_end":551928,"line_start":704,"line_end":704,"column_start":28,"column_end":48},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6903},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\autobreak.rs","byte_start":560214,"byte_end":560223,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\autobreak.rs","byte_start":561484,"byte_end":561493,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3267},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\autobreak.rs","byte_start":562119,"byte_end":562128,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3267},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":565967,"byte_end":565979,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6919},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":569261,"byte_end":569271,"line_start":158,"line_end":158,"column_start":29,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":569427,"byte_end":569439,"line_start":164,"line_end":164,"column_start":23,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6919},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":569915,"byte_end":569928,"line_start":186,"line_end":186,"column_start":18,"column_end":31},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6976},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":570520,"byte_end":570535,"line_start":208,"line_end":208,"column_start":18,"column_end":33},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7003},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":571555,"byte_end":571565,"line_start":251,"line_end":251,"column_start":18,"column_end":28},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":575286,"byte_end":575293,"line_start":351,"line_end":351,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":4390},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583123,"byte_end":583124,"line_start":564,"line_end":564,"column_start":26,"column_end":27},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3461},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583267,"byte_end":583276,"line_start":568,"line_end":568,"column_start":18,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3462},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":583689,"byte_end":583699,"line_start":582,"line_end":582,"column_start":45,"column_end":55},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3427},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":585432,"byte_end":585442,"line_start":631,"line_end":631,"column_start":15,"column_end":25},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":587679,"byte_end":587681,"line_start":692,"line_end":692,"column_start":17,"column_end":19},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3417},"to":{"krate":0,"index":3413}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":588187,"byte_end":588190,"line_start":710,"line_end":710,"column_start":17,"column_end":20},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3419},"to":{"krate":0,"index":3413}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":589187,"byte_end":589193,"line_start":736,"line_end":736,"column_start":17,"column_end":23},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3421},"to":{"krate":0,"index":3413}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":590479,"byte_end":590484,"line_start":774,"line_end":774,"column_start":17,"column_end":22},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3423},"to":{"krate":0,"index":3413}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591130,"byte_end":591142,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7099},"to":{"krate":0,"index":3425}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591267,"byte_end":591280,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7108},"to":{"krate":0,"index":3425}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591596,"byte_end":591608,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7118},"to":{"krate":0,"index":3425}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\decoder.rs","byte_start":591918,"byte_end":591933,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7128},"to":{"krate":0,"index":3425}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":609968,"byte_end":609978,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":617866,"byte_end":617876,"line_start":291,"line_end":291,"column_start":33,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3612},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":618109,"byte_end":618127,"line_start":303,"line_end":303,"column_start":10,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":618997,"byte_end":619012,"line_start":331,"line_end":331,"column_start":10,"column_end":25},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":619573,"byte_end":619590,"line_start":352,"line_end":352,"column_start":10,"column_end":27},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":623610,"byte_end":623628,"line_start":446,"line_end":446,"column_start":10,"column_end":28},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":626077,"byte_end":626090,"line_start":510,"line_end":510,"column_start":10,"column_end":23},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":626401,"byte_end":626413,"line_start":523,"line_end":523,"column_start":10,"column_end":22},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":627830,"byte_end":627841,"line_start":568,"line_end":568,"column_start":10,"column_end":21},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":629552,"byte_end":629563,"line_start":622,"line_end":622,"column_start":29,"column_end":40},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7046},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":629682,"byte_end":629693,"line_start":628,"line_end":628,"column_start":30,"column_end":41},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7046},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\encoder.rs","byte_start":629794,"byte_end":629807,"line_start":634,"line_end":634,"column_start":10,"column_end":23},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":634664,"byte_end":634681,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":635193,"byte_end":635203,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":636173,"byte_end":636182,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":640856,"byte_end":640870,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3747},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":641549,"byte_end":641558,"line_start":320,"line_end":320,"column_start":29,"column_end":38},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":641751,"byte_end":641760,"line_start":329,"line_end":329,"column_start":30,"column_end":39},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":641954,"byte_end":641963,"line_start":338,"line_end":338,"column_start":29,"column_end":38},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\pnm\\header.rs","byte_start":642158,"byte_end":642167,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":643238,"byte_end":643246,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":644426,"byte_end":644436,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":657044,"byte_end":657054,"line_start":414,"line_end":414,"column_start":52,"column_end":62},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3847},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\decoder.rs","byte_start":659967,"byte_end":659976,"line_start":497,"line_end":497,"column_start":31,"column_end":40},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3890},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":660621,"byte_end":660633,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7158},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661000,"byte_end":661010,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661166,"byte_end":661178,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":7158},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":661267,"byte_end":661277,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\encoder.rs","byte_start":662801,"byte_end":662811,"line_start":88,"line_end":88,"column_start":33,"column_end":43},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3939},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\header.rs","byte_start":667665,"byte_end":667674,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tga\\header.rs","byte_start":669592,"byte_end":669598,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":673310,"byte_end":673321,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":676083,"byte_end":676093,"line_start":107,"line_end":107,"column_start":6,"column_end":16},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":677974,"byte_end":677984,"line_start":151,"line_end":151,"column_start":18,"column_end":28},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4115},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":678404,"byte_end":678415,"line_start":165,"line_end":165,"column_start":52,"column_end":63},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4102},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":681921,"byte_end":681932,"line_start":258,"line_end":258,"column_start":23,"column_end":34},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\tiff.rs","byte_start":683886,"byte_end":683897,"line_start":310,"line_end":310,"column_start":40,"column_end":51},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4132},"to":{"krate":0,"index":5740}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":685096,"byte_end":685108,"line_start":28,"line_end":28,"column_start":23,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7201},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":685245,"byte_end":685260,"line_start":31,"line_end":31,"column_start":31,"column_end":46},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":685985,"byte_end":685995,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686152,"byte_end":686164,"line_start":60,"line_end":60,"column_start":23,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":686405,"byte_end":686416,"line_start":73,"line_end":73,"column_start":15,"column_end":26},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":689871,"byte_end":689881,"line_start":178,"line_end":178,"column_start":18,"column_end":28},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4254},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\decoder.rs","byte_start":690294,"byte_end":690305,"line_start":192,"line_end":192,"column_start":45,"column_end":56},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4238},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\huffman.rs","byte_start":700241,"byte_end":700252,"line_start":28,"line_end":28,"column_start":6,"column_end":17},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":708481,"byte_end":708493,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7250},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":709496,"byte_end":709506,"line_start":105,"line_end":105,"column_start":29,"column_end":39},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":709663,"byte_end":709675,"line_start":111,"line_end":111,"column_start":23,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7250},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":709978,"byte_end":709993,"line_start":125,"line_end":125,"column_start":15,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":726770,"byte_end":726781,"line_start":616,"line_end":616,"column_start":6,"column_end":17},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":727201,"byte_end":727211,"line_start":633,"line_end":633,"column_start":6,"column_end":16},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":7294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":727742,"byte_end":727751,"line_start":654,"line_end":654,"column_start":6,"column_end":15},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless.rs","byte_start":728811,"byte_end":728824,"line_start":699,"line_end":699,"column_start":6,"column_end":19},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":730905,"byte_end":730918,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":745479,"byte_end":745500,"line_start":394,"line_end":394,"column_start":6,"column_end":27},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":7335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":774012,"byte_end":774024,"line_start":689,"line_end":689,"column_start":23,"column_end":35},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":7441},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":775148,"byte_end":775158,"line_start":717,"line_end":717,"column_start":29,"column_end":39},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5984},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":775315,"byte_end":775327,"line_start":723,"line_end":723,"column_start":23,"column_end":35},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":775448,"byte_end":775458,"line_start":734,"line_end":734,"column_start":6,"column_end":16},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":779181,"byte_end":779186,"line_start":884,"line_end":884,"column_start":6,"column_end":11},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":7482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":781402,"byte_end":781412,"line_start":978,"line_end":978,"column_start":15,"column_end":25},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":819260,"byte_end":819268,"line_start":2074,"line_end":2074,"column_start":6,"column_end":14},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":7344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":819885,"byte_end":819893,"line_start":2097,"line_end":2097,"column_start":18,"column_end":26},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":7344},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":819958,"byte_end":819968,"line_start":2103,"line_end":2103,"column_start":6,"column_end":16},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":7371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":820257,"byte_end":820267,"line_start":2115,"line_end":2115,"column_start":18,"column_end":28},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":7371},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":820334,"byte_end":820343,"line_start":2121,"line_end":2121,"column_start":6,"column_end":15},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":7395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\codecs\\webp\\vp8.rs","byte_start":820880,"byte_end":820889,"line_start":2139,"line_end":2139,"column_start":18,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":7395},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844119,"byte_end":844125,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":844715,"byte_end":844721,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":845240,"byte_end":845245,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":7516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":846318,"byte_end":846323,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":7523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\animation.rs","byte_start":852512,"byte_end":852520,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":2,"index":45892},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856050,"byte_end":856056,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856300,"byte_end":856306,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856455,"byte_end":856461,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":7471}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856670,"byte_end":856676,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":856823,"byte_end":856829,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857231,"byte_end":857240,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4872},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857496,"byte_end":857505,"line_start":96,"line_end":96,"column_start":47,"column_end":56},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4872},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857654,"byte_end":857663,"line_start":105,"line_end":105,"column_start":49,"column_end":58},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4872},"to":{"krate":2,"index":7471}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":857911,"byte_end":857920,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4872},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":858473,"byte_end":858477,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":859395,"byte_end":859399,"line_start":162,"line_end":162,"column_start":38,"column_end":42},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":859809,"byte_end":859813,"line_start":178,"line_end":178,"column_start":47,"column_end":51},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":859962,"byte_end":859966,"line_start":187,"line_end":187,"column_start":49,"column_end":53},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":7471}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860333,"byte_end":860337,"line_start":201,"line_end":201,"column_start":26,"column_end":30},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":860482,"byte_end":860486,"line_start":209,"line_end":209,"column_start":31,"column_end":35},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4894},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":861060,"byte_end":861067,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862007,"byte_end":862014,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862437,"byte_end":862444,"line_start":270,"line_end":270,"column_start":47,"column_end":54},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862593,"byte_end":862600,"line_start":279,"line_end":279,"column_start":49,"column_end":56},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":7471}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":862982,"byte_end":862989,"line_start":293,"line_end":293,"column_start":31,"column_end":38},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863432,"byte_end":863447,"line_start":315,"line_end":315,"column_start":38,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863850,"byte_end":863865,"line_start":333,"line_end":333,"column_start":47,"column_end":62},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":863991,"byte_end":864006,"line_start":342,"line_end":342,"column_start":26,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":864182,"byte_end":864197,"line_start":351,"line_end":351,"column_start":31,"column_end":46},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4945},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":864735,"byte_end":864748,"line_start":375,"line_end":375,"column_start":38,"column_end":51},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4968},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865286,"byte_end":865299,"line_start":399,"line_end":399,"column_start":47,"column_end":60},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4968},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865423,"byte_end":865436,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4968},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":865606,"byte_end":865619,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4968},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":866144,"byte_end":866162,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4990},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":866573,"byte_end":866591,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4990},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":866722,"byte_end":866740,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4990},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867287,"byte_end":867303,"line_start":492,"line_end":492,"column_start":38,"column_end":54},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5010},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867850,"byte_end":867866,"line_start":516,"line_end":516,"column_start":47,"column_end":63},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5010},"to":{"krate":2,"index":7496}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":867995,"byte_end":868011,"line_start":525,"line_end":525,"column_start":31,"column_end":47},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5010},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":870882,"byte_end":870893,"line_start":615,"line_end":615,"column_start":20,"column_end":31},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":878650,"byte_end":878661,"line_start":835,"line_end":835,"column_start":20,"column_end":31},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":881981,"byte_end":881992,"line_start":932,"line_end":932,"column_start":20,"column_end":31},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":882757,"byte_end":882768,"line_start":960,"line_end":960,"column_start":20,"column_end":31},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":883535,"byte_end":883546,"line_start":988,"line_end":988,"column_start":20,"column_end":31},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":884479,"byte_end":884490,"line_start":1019,"line_end":1019,"column_start":32,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":7539},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":884759,"byte_end":884770,"line_start":1034,"line_end":1034,"column_start":30,"column_end":41},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":7539},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":884998,"byte_end":885009,"line_start":1046,"line_end":1046,"column_start":33,"column_end":44},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7539},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":885239,"byte_end":885250,"line_start":1056,"line_end":1056,"column_start":42,"column_end":53},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7539},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":885485,"byte_end":885496,"line_start":1068,"line_end":1068,"column_start":45,"column_end":56},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7539},"to":{"krate":2,"index":3304}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":885721,"byte_end":885732,"line_start":1078,"line_end":1078,"column_start":30,"column_end":41},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7539},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":886091,"byte_end":886102,"line_start":1093,"line_end":1093,"column_start":41,"column_end":52},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7539},"to":{"krate":0,"index":5750}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":886791,"byte_end":886802,"line_start":1120,"line_end":1120,"column_start":37,"column_end":48},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7539},"to":{"krate":0,"index":5761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":889465,"byte_end":889476,"line_start":1192,"line_end":1192,"column_start":16,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":891878,"byte_end":891887,"line_start":1267,"line_end":1267,"column_start":6,"column_end":15},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\buffer.rs","byte_start":893265,"byte_end":893276,"line_start":1305,"line_end":1305,"column_start":67,"column_end":78},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":7539},"to":{"krate":0,"index":5135}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":904943,"byte_end":904952,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":7570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":908604,"byte_end":908621,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":7605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":909942,"byte_end":909959,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7605},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":915479,"byte_end":915480,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5203},"to":{"krate":0,"index":5199}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":917722,"byte_end":917723,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5227},"to":{"krate":0,"index":5222}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":918746,"byte_end":918750,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919024,"byte_end":919028,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919264,"byte_end":919268,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919562,"byte_end":919566,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":919893,"byte_end":919898,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":920231,"byte_end":920236,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":920576,"byte_end":920581,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":920916,"byte_end":920921,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":921240,"byte_end":921244,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":921638,"byte_end":921642,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":922027,"byte_end":922031,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":922425,"byte_end":922429,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":922832,"byte_end":922835,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":923183,"byte_end":923186,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":923532,"byte_end":923535,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":923874,"byte_end":923877,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5219}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":924325,"byte_end":924330,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5298}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":925341,"byte_end":925345,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5298}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":925455,"byte_end":925459,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5298}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":927671,"byte_end":927674,"line_start":786,"line_end":786,"column_start":30,"column_end":33},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5298}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":927892,"byte_end":927897,"line_start":798,"line_end":798,"column_start":31,"column_end":36},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5312}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":928076,"byte_end":928080,"line_start":807,"line_end":807,"column_start":31,"column_end":35},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5312}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":928274,"byte_end":928278,"line_start":818,"line_end":818,"column_start":31,"column_end":35},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5312}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\color.rs","byte_start":928496,"byte_end":928499,"line_start":828,"line_end":828,"column_start":31,"column_end":34},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5312}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":937112,"byte_end":937124,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":7978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963615,"byte_end":963627,"line_start":859,"line_end":859,"column_start":26,"column_end":38},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963749,"byte_end":963761,"line_start":865,"line_end":865,"column_start":31,"column_end":43},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":963883,"byte_end":963895,"line_start":871,"line_end":871,"column_start":25,"column_end":37},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964010,"byte_end":964022,"line_start":877,"line_end":877,"column_start":26,"column_end":38},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964141,"byte_end":964153,"line_start":883,"line_end":883,"column_start":28,"column_end":40},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964280,"byte_end":964292,"line_start":889,"line_end":889,"column_start":33,"column_end":45},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964419,"byte_end":964431,"line_start":895,"line_end":895,"column_start":27,"column_end":39},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964551,"byte_end":964563,"line_start":901,"line_end":901,"column_start":28,"column_end":40},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964685,"byte_end":964697,"line_start":907,"line_end":907,"column_start":28,"column_end":40},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964820,"byte_end":964832,"line_start":913,"line_end":913,"column_start":29,"column_end":41},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":964977,"byte_end":964989,"line_start":919,"line_end":919,"column_start":49,"column_end":61},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":965164,"byte_end":965176,"line_start":925,"line_end":925,"column_start":50,"column_end":62},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":965351,"byte_end":965363,"line_start":932,"line_end":932,"column_start":27,"column_end":39},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7978},"to":{"krate":0,"index":5750}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":965861,"byte_end":965873,"line_start":949,"line_end":949,"column_start":23,"column_end":35},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7978},"to":{"krate":0,"index":5761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\dynimage.rs","byte_start":968286,"byte_end":968298,"line_start":994,"line_end":994,"column_start":18,"column_end":30},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":979855,"byte_end":979866,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":987905,"byte_end":987922,"line_start":311,"line_end":311,"column_start":28,"column_end":45},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":989525,"byte_end":989540,"line_start":355,"line_end":355,"column_start":6,"column_end":21},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":998773,"byte_end":998781,"line_start":600,"line_end":600,"column_start":6,"column_end":14},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":999485,"byte_end":999490,"line_start":625,"line_end":625,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":5717}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004272,"byte_end":1004284,"line_start":745,"line_end":745,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":5717},"to":{"krate":0,"index":5731}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1004291,"byte_end":1004296,"line_start":745,"line_end":745,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":5731}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1006714,"byte_end":1006720,"line_start":818,"line_end":818,"column_start":44,"column_end":50},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8127},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1007188,"byte_end":1007194,"line_start":840,"line_end":840,"column_start":27,"column_end":33},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":8127},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1009816,"byte_end":1009832,"line_start":933,"line_end":933,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":5750},"to":{"krate":0,"index":5761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1017470,"byte_end":1017478,"line_start":1124,"line_end":1124,"column_start":9,"column_end":17},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":8139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1018827,"byte_end":1018835,"line_start":1168,"line_end":1168,"column_start":9,"column_end":17},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":8139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1020242,"byte_end":1020250,"line_start":1206,"line_end":1206,"column_start":9,"column_end":17},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":8139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021066,"byte_end":1021074,"line_start":1234,"line_end":1234,"column_start":19,"column_end":27},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":8139},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021225,"byte_end":1021233,"line_start":1244,"line_end":1244,"column_start":22,"column_end":30},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":8139},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021396,"byte_end":1021409,"line_start":1254,"line_end":1254,"column_start":30,"column_end":43},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":8147},"to":{"krate":0,"index":5750}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\image.rs","byte_start":1021882,"byte_end":1021895,"line_start":1275,"line_end":1275,"column_start":26,"column_end":39},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":8147},"to":{"krate":0,"index":5761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039352,"byte_end":1039367,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":5963},"to":{"krate":0,"index":5839}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039955,"byte_end":1039959,"line_start":37,"line_end":37,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":5847}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039962,"byte_end":1039969,"line_start":37,"line_end":37,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":55,"index":345},"to":{"krate":0,"index":5847}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039972,"byte_end":1039975,"line_start":37,"line_end":37,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":55,"index":923},"to":{"krate":0,"index":5847}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039978,"byte_end":1039988,"line_start":37,"line_end":37,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2702},"to":{"krate":0,"index":5847}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1039997,"byte_end":1040002,"line_start":37,"line_end":37,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":5847}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1040005,"byte_end":1040012,"line_start":37,"line_end":37,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":55,"index":230},"to":{"krate":0,"index":5847}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041377,"byte_end":1041382,"line_start":72,"line_end":72,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":5851}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041385,"byte_end":1041392,"line_start":72,"line_end":72,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":55,"index":230},"to":{"krate":0,"index":5851}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1041395,"byte_end":1041402,"line_start":72,"line_end":72,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":55,"index":345},"to":{"krate":0,"index":5851}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1042705,"byte_end":1042712,"line_start":130,"line_end":130,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":55,"index":230},"to":{"krate":0,"index":5879}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1042715,"byte_end":1042722,"line_start":130,"line_end":130,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":55,"index":345},"to":{"krate":0,"index":5879}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043655,"byte_end":1043660,"line_start":171,"line_end":171,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":5926},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043678,"byte_end":1043702,"line_start":171,"line_end":171,"column_start":54,"column_end":78},"kind":"SuperTrait","from":{"krate":0,"index":5915},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1043993,"byte_end":1043996,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044084,"byte_end":1044087,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044177,"byte_end":1044180,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044272,"byte_end":1044276,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044365,"byte_end":1044369,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044460,"byte_end":1044464,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044557,"byte_end":1044561,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044647,"byte_end":1044651,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044739,"byte_end":1044744,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1044831,"byte_end":1044836,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5891}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045089,"byte_end":1045092,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045138,"byte_end":1045141,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045188,"byte_end":1045191,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7862},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045239,"byte_end":1045243,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045289,"byte_end":1045293,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045340,"byte_end":1045344,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045392,"byte_end":1045396,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045442,"byte_end":1045447,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045494,"byte_end":1045498,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7891},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045545,"byte_end":1045550,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7949},"to":{"krate":0,"index":5915}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045694,"byte_end":1045698,"line_start":235,"line_end":235,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":5926}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.1\\./src\\traits.rs","byte_start":1045701,"byte_end":1045706,"line_start":235,"line_end":235,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":5926}}]}