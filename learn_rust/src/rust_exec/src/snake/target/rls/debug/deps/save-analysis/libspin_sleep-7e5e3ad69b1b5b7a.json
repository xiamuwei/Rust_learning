{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1","program":"C:\\Users\\Administrator\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","spin_sleep","--edition=2018","C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7e5e3ad69b1b5b7a","-C","extra-filename=-7e5e3ad69b1b5b7a","--out-dir","d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","-L","dependency=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","--extern","once_cell=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libonce_cell-bfaf79db76a26fb6.rmeta","--extern","winapi=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libwinapi-d17138a632b50705.rmeta","--cap-lints","allow","-L","native=C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-x86_64-pc-windows-gnu-0.4.0\\lib","--error-format=json","--sysroot","C:\\Users\\Administrator\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libspin_sleep-7e5e3ad69b1b5b7a.rmeta"},"prelude":{"crate_id":{"name":"spin_sleep","disambiguator":[11268313161229092909,0]},"crate_root":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src","external_crates":[{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[14055050308901652574,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5406660558723523310,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6038961408070452265,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6202505720861038248,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289845166519128743,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[39020721113303181,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12376455831296353094,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11449565758146872379,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14009155214127162348,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14302345610359121259,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[443988361779617849,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1060626961105550716,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10057676532539598168,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":14,"id":{"name":"gimli","disambiguator":[10097761641719977187,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":15,"id":{"name":"object","disambiguator":[15541071652604932095,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":16,"id":{"name":"memchr","disambiguator":[8355012413122137596,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16122166454175645634,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":18,"id":{"name":"winapi","disambiguator":[10582244069707213425,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","num":19,"id":{"name":"once_cell","disambiguator":[17745475188986840423,0]}}],"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":11855,"line_start":1,"line_end":346,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1967,"byte_end":1968,"line_start":52,"line_end":52,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":11855,"line_start":1,"line_end":346,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":46},{"krate":0,"index":56},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":74},{"krate":0,"index":129},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":75}],"decl_id":null,"docs":" Accurate sleeping. Only use native sleep as far as it can be trusted, then spin.","sig":null,"attributes":[{"value":"/ Accurate sleeping. Only use native sleep as far as it can be trusted, then spin.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":84,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":85,"byte_end":88,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The problem with `thread::sleep` is it isn't always very accurate, and this accuracy varies","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":89,"byte_end":184,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ on platform and state. Spinning is as accurate as we can get, but consumes the CPU","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":185,"byte_end":271,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ rather ungracefully.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":272,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":297,"byte_end":300,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This library adds a middle ground, using a configurable native accuracy setting allowing","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":301,"byte_end":393,"line_start":7,"line_end":7,"column_start":1,"column_end":93}},{"value":"/ `thread::sleep` to wait the bulk of a sleep time, and spin the final section to guarantee","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":394,"byte_end":487,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ accuracy.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":488,"byte_end":501,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":502,"byte_end":505,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example: Replace `thread::sleep`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":506,"byte_end":544,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":545,"byte_end":548,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The simplest usage with default native accuracy is a drop in replacement for `thread::sleep`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":549,"byte_end":646,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":647,"byte_end":660,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":661,"byte_end":691,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ spin_sleep::sleep(Duration::new(1, 12_550_000));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":692,"byte_end":744,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":745,"byte_end":752,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":753,"byte_end":756,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example: Configure","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":757,"byte_end":781,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ More advanced usage, including setting a custom native accuracy, can be achieved by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":782,"byte_end":869,"line_start":20,"line_end":20,"column_start":1,"column_end":88}},{"value":"/ constructing a `SpinSleeper`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":870,"byte_end":903,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":904,"byte_end":917,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":918,"byte_end":948,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ // Create a new sleeper that trusts native thread::sleep with 100μs accuracy","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":949,"byte_end":1030,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ let spin_sleeper = spin_sleep::SpinSleeper::new(100_000)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1031,"byte_end":1091,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/     .with_spin_strategy(spin_sleep::SpinStrategy::YieldThread);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1092,"byte_end":1159,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1160,"byte_end":1163,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Sleep for 1.01255 seconds, this will:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1164,"byte_end":1208,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/ //  - thread:sleep for 1.01245 seconds, i.e., 100μs less than the requested duration","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1209,"byte_end":1298,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ //  - spin until total 1.01255 seconds have elapsed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1299,"byte_end":1354,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ spin_sleeper.sleep(Duration::new(1, 12_550_000));","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1355,"byte_end":1408,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1409,"byte_end":1416,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1417,"byte_end":1420,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Sleep can also be requested in `f64` seconds or `u64` nanoseconds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1421,"byte_end":1490,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ (useful when used with `time` crate)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1491,"byte_end":1531,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1532,"byte_end":1535,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1536,"byte_end":1549,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1550,"byte_end":1580,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ # let spin_sleeper = spin_sleep::SpinSleeper::new(100_000);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1581,"byte_end":1644,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ spin_sleeper.sleep_s(1.01255);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1645,"byte_end":1679,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ spin_sleeper.sleep_ns(1_012_550_000);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1680,"byte_end":1721,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1722,"byte_end":1729,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1730,"byte_end":1733,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ OS-specific default settings should be good enough for most cases.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1734,"byte_end":1804,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1805,"byte_end":1812,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use spin_sleep::SpinSleeper;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1813,"byte_end":1847,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/ let sleeper = SpinSleeper::default();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1848,"byte_end":1889,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/ # let _ = sleeper;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1890,"byte_end":1912,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":1913,"byte_end":1920,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12971,"byte_end":12981,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"LoopHelper","qualname":"::loop_helper::LoopHelper","value":"LoopHelper {  }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Tool for loop rate reporting and control.","sig":null,"attributes":[{"value":"/ Tool for loop rate reporting and control.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":11908,"byte_end":11953,"line_start":4,"line_end":4,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":11954,"byte_end":11957,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Can report mean rate per second of a loop over a configured","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":11958,"byte_end":12021,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ report interval with [`LoopHelper::report_rate`](struct.LoopHelper.html#method.report_rate).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12022,"byte_end":12118,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12119,"byte_end":12122,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Can limit a loop rate to a desired target using","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12123,"byte_end":12174,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/ [`LoopHelper::loop_sleep`](struct.LoopHelper.html#method.loop_sleep).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12175,"byte_end":12248,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12249,"byte_end":12252,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12253,"byte_end":12266,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12267,"byte_end":12270,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12271,"byte_end":12284,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use spin_sleep::LoopHelper;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12285,"byte_end":12316,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12317,"byte_end":12320,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut loop_helper = LoopHelper::builder()","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12321,"byte_end":12368,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/     .report_interval_s(0.5) // report every half a second","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12369,"byte_end":12430,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/     .build_with_target_rate(250.0); // limit to 250 FPS if possible","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12431,"byte_end":12502,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12503,"byte_end":12506,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut current_fps = None;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12507,"byte_end":12538,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12539,"byte_end":12542,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12543,"byte_end":12553,"line_start":23,"line_end":23,"column_start":1,"column_end":11}},{"value":"/     let delta = loop_helper.loop_start(); // or .loop_start_s() for f64 seconds","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12554,"byte_end":12637,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12638,"byte_end":12641,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // compute_something(delta);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12642,"byte_end":12678,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12679,"byte_end":12682,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     if let Some(fps) = loop_helper.report_rate() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12683,"byte_end":12737,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/         current_fps = Some(fps.round());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12738,"byte_end":12782,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12783,"byte_end":12792,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12793,"byte_end":12796,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // render_fps(current_fps);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12797,"byte_end":12832,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12833,"byte_end":12836,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     loop_helper.loop_sleep(); // sleeps to achieve a 250 FPS rate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12837,"byte_end":12906,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12907,"byte_end":12912,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":12913,"byte_end":12920,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13283,"byte_end":13300,"line_start":51,"line_end":51,"column_start":12,"column_end":29},"name":"LoopHelperBuilder","qualname":"::loop_helper::LoopHelperBuilder","value":"LoopHelperBuilder {  }","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" Builds [`LoopHelper`](struct.LoopHelper.html).\n","sig":null,"attributes":[{"value":"/ Builds [`LoopHelper`](struct.LoopHelper.html).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13176,"byte_end":13226,"line_start":49,"line_end":49,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13549,"byte_end":13566,"line_start":59,"line_end":59,"column_start":12,"column_end":29},"name":"report_interval_s","qualname":"<LoopHelperBuilder>::report_interval_s","value":"pub fn report_interval_s(Self, Seconds) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the interval between\n [`LoopHelper::report_rate`](/struct.LoopHelper.html#method.report_rate) reports in seconds.\n","sig":null,"attributes":[{"value":"/ Sets the interval between","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13408,"byte_end":13437,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"/ [`LoopHelper::report_rate`](/struct.LoopHelper.html#method.report_rate) reports in seconds.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13442,"byte_end":13537,"line_start":58,"line_end":58,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13830,"byte_end":13845,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"report_interval","qualname":"<LoopHelperBuilder>::report_interval","value":"pub fn report_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the interval between\n [`LoopHelper::report_rate`](/struct.LoopHelper.html#method.report_rate) reports.\n","sig":null,"attributes":[{"value":"/ Sets the interval between","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13700,"byte_end":13729,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ [`LoopHelper::report_rate`](/struct.LoopHelper.html#method.report_rate) reports.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13734,"byte_end":13818,"line_start":65,"line_end":65,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14350,"byte_end":14368,"line_start":77,"line_end":77,"column_start":12,"column_end":30},"name":"native_accuracy_ns","qualname":"<LoopHelperBuilder>::native_accuracy_ns","value":"pub fn native_accuracy_ns(Self, SubsecondNanoseconds) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the native sleep accuracy.\n See [`SpinSleeper::new`](struct.SpinSleeper.html#method.new) for details.","sig":null,"attributes":[{"value":"/ Sets the native sleep accuracy.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13957,"byte_end":13992,"line_start":71,"line_end":71,"column_start":5,"column_end":40}},{"value":"/ See [`SpinSleeper::new`](struct.SpinSleeper.html#method.new) for details.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13997,"byte_end":14074,"line_start":72,"line_end":72,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14079,"byte_end":14082,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Defaults to a platform specific opinionated value, that can change from release to release.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14087,"byte_end":14182,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/ Set this to ensure consistent behaviour across releases. However, consider that this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14187,"byte_end":14275,"line_start":75,"line_end":75,"column_start":5,"column_end":93}},{"value":"/ value *should* be tuned & tested for a given platform.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14280,"byte_end":14338,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14809,"byte_end":14834,"line_start":86,"line_end":86,"column_start":12,"column_end":37},"name":"build_without_target_rate","qualname":"<LoopHelperBuilder>::build_without_target_rate","value":"pub fn build_without_target_rate(Self) -> LoopHelper","parent":null,"children":[],"decl_id":null,"docs":" Builds a [`LoopHelper`](struct.LoopHelper.html) without targeting a rate.\n This means all calls to\n [`LoopHelper::loop_sleep`](struct.LoopHelper.html#method.loop_sleep) will simply return\n immediately. Normally used when only interested in the LoopHelper rate reporting.\n","sig":null,"attributes":[{"value":"/ Builds a [`LoopHelper`](struct.LoopHelper.html) without targeting a rate.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14502,"byte_end":14579,"line_start":82,"line_end":82,"column_start":5,"column_end":82}},{"value":"/ This means all calls to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14584,"byte_end":14611,"line_start":83,"line_end":83,"column_start":5,"column_end":32}},{"value":"/ [`LoopHelper::loop_sleep`](struct.LoopHelper.html#method.loop_sleep) will simply return","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14616,"byte_end":14707,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ immediately. Normally used when only interested in the LoopHelper rate reporting.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14712,"byte_end":14797,"line_start":85,"line_end":85,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15139,"byte_end":15161,"line_start":93,"line_end":93,"column_start":12,"column_end":34},"name":"build_with_target_rate","qualname":"<LoopHelperBuilder>::build_with_target_rate","value":"pub fn build_with_target_rate<R: Into<RatePerSecond>>(Self, R) -> LoopHelper","parent":null,"children":[],"decl_id":null,"docs":" Builds a [`LoopHelper`](struct.LoopHelper.html) targeting an input `target_rate`.\n Note: The `target_rate` only affects\n [`LoopHelper::loop_sleep`](struct.LoopHelper.html#method.loop_sleep).\n","sig":null,"attributes":[{"value":"/ Builds a [`LoopHelper`](struct.LoopHelper.html) targeting an input `target_rate`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":14919,"byte_end":15004,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/ Note: The `target_rate` only affects","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15009,"byte_end":15049,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/ [`LoopHelper::loop_sleep`](struct.LoopHelper.html#method.loop_sleep).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15054,"byte_end":15127,"line_start":92,"line_end":92,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15866,"byte_end":15873,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"builder","qualname":"<LoopHelper>::builder","value":"pub fn builder() -> LoopHelperBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`LoopHelperBuilder`](struct.LoopHelperBuilder.html) with which to build a\n `LoopHelper`.\n","sig":null,"attributes":[{"value":"/ Returns a [`LoopHelperBuilder`](struct.LoopHelperBuilder.html) with which to build a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15744,"byte_end":15832,"line_start":112,"line_end":112,"column_start":5,"column_end":93}},{"value":"/ `LoopHelper`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15837,"byte_end":15854,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16167,"byte_end":16177,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"loop_start","qualname":"<LoopHelper>::loop_start","value":"pub fn loop_start(&mut Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Notifies the helper that a new loop has begun.\n Returns the delta, the duration since the last call to `loop_start` or `loop_start_s`.\n","sig":null,"attributes":[{"value":"/ Notifies the helper that a new loop has begun.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16010,"byte_end":16060,"line_start":121,"line_end":121,"column_start":5,"column_end":55}},{"value":"/ Returns the delta, the duration since the last call to `loop_start` or `loop_start_s`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16065,"byte_end":16155,"line_start":122,"line_end":122,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16625,"byte_end":16637,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"loop_start_s","qualname":"<LoopHelper>::loop_start_s","value":"pub fn loop_start_s(&mut Self) -> Seconds","parent":null,"children":[],"decl_id":null,"docs":" Notifies the helper that a new loop has begun.\n Returns the delta, the seconds since the last call to `loop_start` or `loop_start_s`.\n","sig":null,"attributes":[{"value":"/ Notifies the helper that a new loop has begun.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16469,"byte_end":16519,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/ Returns the delta, the seconds since the last call to `loop_start` or `loop_start_s`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16524,"byte_end":16613,"line_start":133,"line_end":133,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17106,"byte_end":17116,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"loop_sleep","qualname":"<LoopHelper>::loop_sleep","value":"pub fn loop_sleep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Generally called at the end of a loop to sleep until the desired delta (configured with\n [`build_with_target_rate`](struct.LoopHelperBuilder.html#method.build_with_target_rate))\n has elapsed. Uses a [`SpinSleeper`](struct.SpinSleeper.html) to sleep the thread to provide\n improved accuracy. If the delta has already elapsed this method returns immediately.\n","sig":null,"attributes":[{"value":"/ Generally called at the end of a loop to sleep until the desired delta (configured with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16713,"byte_end":16804,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/ [`build_with_target_rate`](struct.LoopHelperBuilder.html#method.build_with_target_rate))","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16809,"byte_end":16901,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ has elapsed. Uses a [`SpinSleeper`](struct.SpinSleeper.html) to sleep the thread to provide","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":16906,"byte_end":17001,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ improved accuracy. If the delta has already elapsed this method returns immediately.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17006,"byte_end":17094,"line_start":141,"line_end":141,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17772,"byte_end":17790,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"loop_sleep_no_spin","qualname":"<LoopHelper>::loop_sleep_no_spin","value":"pub fn loop_sleep_no_spin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Generally called at the end of a loop to sleep until the desired delta (configured with\n [`build_with_target_rate`](struct.LoopHelperBuilder.html#method.build_with_target_rate))\n has elapsed. Does *not* use a  [`SpinSleeper`](struct.SpinSleeper.html), instead directly\n calls `thread::sleep` and will never spin. This is less accurate than\n [`loop_sleep`](struct.LoopHelper.html#method.loop_sleep) but less CPU intensive.\n","sig":null,"attributes":[{"value":"/ Generally called at the end of a loop to sleep until the desired delta (configured with","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17307,"byte_end":17398,"line_start":149,"line_end":149,"column_start":5,"column_end":96}},{"value":"/ [`build_with_target_rate`](struct.LoopHelperBuilder.html#method.build_with_target_rate))","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17403,"byte_end":17495,"line_start":150,"line_end":150,"column_start":5,"column_end":97}},{"value":"/ has elapsed. Does *not* use a  [`SpinSleeper`](struct.SpinSleeper.html), instead directly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17500,"byte_end":17593,"line_start":151,"line_end":151,"column_start":5,"column_end":98}},{"value":"/ calls `thread::sleep` and will never spin. This is less accurate than","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17598,"byte_end":17671,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ [`loop_sleep`](struct.LoopHelper.html#method.loop_sleep) but less CPU intensive.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17676,"byte_end":17760,"line_start":153,"line_end":153,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":18142,"byte_end":18153,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"report_rate","qualname":"<LoopHelper>::report_rate","value":"pub fn report_rate(&mut Self) -> Option<RatePerSecond>","parent":null,"children":[],"decl_id":null,"docs":" Returns the mean rate per second recorded since the last report. Returns `None` if\n the last report was within the configured `report_interval`.\n","sig":null,"attributes":[{"value":"/ Returns the mean rate per second recorded since the last report. Returns `None` if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":17975,"byte_end":18061,"line_start":161,"line_end":161,"column_start":5,"column_end":91}},{"value":"/ the last report was within the configured `report_interval`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":18066,"byte_end":18130,"line_start":162,"line_end":162,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":18655,"byte_end":18670,"line_start":177,"line_end":177,"column_start":12,"column_end":27},"name":"set_target_rate","qualname":"<LoopHelper>::set_target_rate","value":"pub fn set_target_rate<R: Into<RatePerSecond>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the target loop rate\n","sig":null,"attributes":[{"value":"/ Changes the target loop rate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":18611,"byte_end":18643,"line_start":176,"line_end":176,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":18866,"byte_end":18877,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"target_rate","qualname":"<LoopHelper>::target_rate","value":"pub fn target_rate(&Self) -> RatePerSecond","parent":null,"children":[],"decl_id":null,"docs":" Returns the current target loop rate\n","sig":null,"attributes":[{"value":"/ Returns the current target loop rate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":18814,"byte_end":18854,"line_start":181,"line_end":181,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2105,"byte_end":2112,"line_start":59,"line_end":59,"column_start":10,"column_end":17},"name":"Seconds","qualname":"::Seconds","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" Marker alias to show the meaning of a `f64` in certain methods.\n","sig":null,"attributes":[{"value":"/ Marker alias to show the meaning of a `f64` in certain methods.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2028,"byte_end":2095,"line_start":58,"line_end":58,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2197,"byte_end":2210,"line_start":61,"line_end":61,"column_start":10,"column_end":23},"name":"RatePerSecond","qualname":"::RatePerSecond","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" Marker alias to show the meaning of a `f64` in certain methods.\n","sig":null,"attributes":[{"value":"/ Marker alias to show the meaning of a `f64` in certain methods.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2120,"byte_end":2187,"line_start":60,"line_end":60,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2295,"byte_end":2306,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"name":"Nanoseconds","qualname":"::Nanoseconds","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Marker alias to show the meaning of a `u64` in certain methods.\n","sig":null,"attributes":[{"value":"/ Marker alias to show the meaning of a `u64` in certain methods.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2218,"byte_end":2285,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2391,"byte_end":2411,"line_start":65,"line_end":65,"column_start":10,"column_end":30},"name":"SubsecondNanoseconds","qualname":"::SubsecondNanoseconds","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Marker alias to show the meaning of a `u32` in certain methods.\n","sig":null,"attributes":[{"value":"/ Marker alias to show the meaning of a `u32` in certain methods.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2314,"byte_end":2381,"line_start":64,"line_end":64,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2554,"byte_end":2565,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"SpinSleeper","qualname":"::SpinSleeper","value":"SpinSleeper {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" Accuracy container for spin sleeping. See [crate docs](index.html).\n","sig":null,"attributes":[{"value":"/ Accuracy container for spin sleeping. See [crate docs](index.html).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":2420,"byte_end":2491,"line_start":67,"line_end":67,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4065,"byte_end":4077,"line_start":115,"line_end":115,"column_start":8,"column_end":20},"name":"native_sleep","qualname":"::native_sleep","value":"pub fn native_sleep(Duration)","parent":null,"children":[],"decl_id":null,"docs":" Asks the OS to put the current thread to sleep for at least the specified amount of time.","sig":null,"attributes":[{"value":"/ Asks the OS to put the current thread to sleep for at least the specified amount of time.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":3711,"byte_end":3804,"line_start":108,"line_end":108,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":3805,"byte_end":3808,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Equivalent to [`std::thread::sleep`], with the following exceptions:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":3809,"byte_end":3881,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/ * **Windows**: Automatically selects the best native sleep accuracy generally achieving ~1ms","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":3882,"byte_end":3978,"line_start":111,"line_end":111,"column_start":1,"column_end":97}},{"value":"/ native sleep accuracy, instead of default ~16ms.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":3979,"byte_end":4031,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4032,"byte_end":4047,"line_start":113,"line_end":113,"column_start":1,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4048,"byte_end":4057,"line_start":114,"line_end":114,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4900,"byte_end":4903,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<SpinSleeper>::new","value":"pub fn new(SubsecondNanoseconds) -> SpinSleeper","parent":null,"children":[],"decl_id":null,"docs":" Constructs new SpinSleeper with the input native sleep accuracy.\n The lower the `native_accuracy_ns` the more we effectively trust the accuracy of the\n [`native_sleep`] function.\n","sig":null,"attributes":[{"value":"/ Constructs new SpinSleeper with the input native sleep accuracy.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4678,"byte_end":4746,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/ The lower the `native_accuracy_ns` the more we effectively trust the accuracy of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4751,"byte_end":4839,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/ [`native_sleep`] function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4844,"byte_end":4874,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4879,"byte_end":4888,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5135,"byte_end":5153,"line_start":150,"line_end":150,"column_start":12,"column_end":30},"name":"native_accuracy_ns","qualname":"<SpinSleeper>::native_accuracy_ns","value":"pub fn native_accuracy_ns(Self) -> SubsecondNanoseconds","parent":null,"children":[],"decl_id":null,"docs":" Returns configured native_accuracy_ns.\n","sig":null,"attributes":[{"value":"/ Returns configured native_accuracy_ns.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5081,"byte_end":5123,"line_start":149,"line_end":149,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5278,"byte_end":5291,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"spin_strategy","qualname":"<SpinSleeper>::spin_strategy","value":"pub fn spin_strategy(Self) -> SpinStrategy","parent":null,"children":[],"decl_id":null,"docs":" Returns configured spin strategy.\n","sig":null,"attributes":[{"value":"/ Returns configured spin strategy.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5229,"byte_end":5266,"line_start":154,"line_end":154,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5635,"byte_end":5653,"line_start":167,"line_end":167,"column_start":12,"column_end":30},"name":"with_spin_strategy","qualname":"<SpinSleeper>::with_spin_strategy","value":"pub fn with_spin_strategy(Self, SpinStrategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a spin sleeper with the given [`SpinStrategy`].","sig":null,"attributes":[{"value":"/ Returns a spin sleeper with the given [`SpinStrategy`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5354,"byte_end":5413,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5418,"byte_end":5421,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5426,"byte_end":5439,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5444,"byte_end":5457,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/ use spin_sleep::{SpinSleeper, SpinStrategy};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5462,"byte_end":5510,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5515,"byte_end":5518,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let sleeper = SpinSleeper::default().with_spin_strategy(SpinStrategy::SpinLoopHint);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5523,"byte_end":5611,"line_start":165,"line_end":165,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5616,"byte_end":5623,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5948,"byte_end":5953,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"sleep","qualname":"<SpinSleeper>::sleep","value":"pub fn sleep(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Puts the [current thread to sleep](fn.native_sleep.html) for the duration less the\n configured native accuracy. Then spins until the specified duration has elapsed.\n","sig":null,"attributes":[{"value":"/ Puts the [current thread to sleep](fn.native_sleep.html) for the duration less the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5761,"byte_end":5847,"line_start":172,"line_end":172,"column_start":5,"column_end":91}},{"value":"/ configured native accuracy. Then spins until the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":5852,"byte_end":5936,"line_start":173,"line_end":173,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":6668,"byte_end":6675,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"sleep_s","qualname":"<SpinSleeper>::sleep_s","value":"pub fn sleep_s(Self, Seconds)","parent":null,"children":[],"decl_id":null,"docs":" Puts the [current thread to sleep](fn.native_sleep.html) for the give seconds-duration\n less the configured native accuracy. Then spins until the specified duration has elapsed.\n","sig":null,"attributes":[{"value":"/ Puts the [current thread to sleep](fn.native_sleep.html) for the give seconds-duration","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":6468,"byte_end":6558,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/ less the configured native accuracy. Then spins until the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":6563,"byte_end":6656,"line_start":190,"line_end":190,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7012,"byte_end":7020,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"sleep_ns","qualname":"<SpinSleeper>::sleep_ns","value":"pub fn sleep_ns(Self, Nanoseconds)","parent":null,"children":[],"decl_id":null,"docs":" Puts the [current thread to sleep](fn.native_sleep.html) for the give nanoseconds-duration\n less the configured native accuracy. Then spins until the specified duration has elapsed.\n","sig":null,"attributes":[{"value":"/ Puts the [current thread to sleep](fn.native_sleep.html) for the give nanoseconds-duration","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":6808,"byte_end":6902,"line_start":197,"line_end":197,"column_start":5,"column_end":99}},{"value":"/ less the configured native accuracy. Then spins until the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":6907,"byte_end":7000,"line_start":198,"line_end":198,"column_start":5,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7534,"byte_end":7539,"line_start":211,"line_end":211,"column_start":8,"column_end":13},"name":"sleep","qualname":"::sleep","value":"pub fn sleep(Duration)","parent":null,"children":[],"decl_id":null,"docs":" Puts the [current thread to sleep](fn.native_sleep.html) for the duration less the\n default native accuracy. Then spins until the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Puts the [current thread to sleep](fn.native_sleep.html) for the duration less the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7231,"byte_end":7317,"line_start":206,"line_end":206,"column_start":1,"column_end":87}},{"value":"/ default native accuracy. Then spins until the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7318,"byte_end":7399,"line_start":207,"line_end":207,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7400,"byte_end":7403,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Convenience function for `SpinSleeper::default().sleep(duration)`. Can directly take the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7404,"byte_end":7496,"line_start":209,"line_end":209,"column_start":1,"column_end":93}},{"value":"/ place of `thread::sleep`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7497,"byte_end":7526,"line_start":210,"line_end":210,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7793,"byte_end":7804,"line_start":220,"line_end":220,"column_start":5,"column_end":16},"name":"YieldThread","qualname":"::SpinStrategy::YieldThread","value":"SpinStrategy::YieldThread","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Call [`std::thread::yield_now`] while spinning.\n","sig":null,"attributes":[{"value":"/ Call [`std::thread::yield_now`] while spinning.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7737,"byte_end":7788,"line_start":219,"line_end":219,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7864,"byte_end":7876,"line_start":222,"line_end":222,"column_start":5,"column_end":17},"name":"SpinLoopHint","qualname":"::SpinStrategy::SpinLoopHint","value":"SpinStrategy::SpinLoopHint","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Call [`std::hint::spin_loop`] while spinning.\n","sig":null,"attributes":[{"value":"/ Call [`std::hint::spin_loop`] while spinning.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7810,"byte_end":7859,"line_start":221,"line_end":221,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7718,"byte_end":7730,"line_start":218,"line_end":218,"column_start":10,"column_end":22},"name":"SpinStrategy","qualname":"::SpinStrategy","value":"pub enum SpinStrategy { YieldThread, SpinLoopHint, }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132}],"decl_id":null,"docs":" What to do while spinning.\n","sig":null,"attributes":[{"value":"/ What to do while spinning.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7609,"byte_end":7639,"line_start":215,"line_end":215,"column_start":1,"column_end":31}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7691,"byte_end":7708,"line_start":217,"line_end":217,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13384,"byte_end":13401,"line_start":56,"line_end":56,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15727,"byte_end":15737,"line_start":111,"line_end":111,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4323,"byte_end":4334,"line_start":124,"line_end":124,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4660,"byte_end":4671,"line_start":137,"line_end":137,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7986,"byte_end":7998,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":13384,"byte_end":13401,"line_start":56,"line_end":56,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\loop_helper.rs","byte_start":15727,"byte_end":15737,"line_start":111,"line_end":111,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4323,"byte_end":4334,"line_start":124,"line_end":124,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":4660,"byte_end":4671,"line_start":137,"line_end":137,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin_sleep-1.1.1\\src\\lib.rs","byte_start":7986,"byte_end":7998,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":129},"to":{"krate":2,"index":2982}}]}