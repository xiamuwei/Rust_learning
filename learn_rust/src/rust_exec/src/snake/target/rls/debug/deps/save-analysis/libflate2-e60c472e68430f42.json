{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23","program":"C:\\Users\\Administrator\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","flate2","--edition=2018","C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"miniz_oxide\"","--cfg","feature=\"rust_backend\"","-C","metadata=e60c472e68430f42","-C","extra-filename=-e60c472e68430f42","--out-dir","d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","-L","dependency=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps","--extern","cfg_if=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libcfg_if-2b3e2526711865f9.rmeta","--extern","crc32fast=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libcrc32fast-10a12acdd8416c45.rmeta","--extern","libc=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\liblibc-3170299637343e81.rmeta","--extern","miniz_oxide=d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libminiz_oxide-23866f9ee181be67.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Administrator\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\gorepository\\Rust_learning\\learn_rust\\src\\rust_exec\\src\\snake\\target\\rls\\debug\\deps\\libflate2-e60c472e68430f42.rmeta"},"prelude":{"crate_id":{"name":"flate2","disambiguator":[9423306969696454481,0]},"crate_root":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src","external_crates":[{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[14055050308901652574,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5406660558723523310,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6038961408070452265,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6202505720861038248,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289845166519128743,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[39020721113303181,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12376455831296353094,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11449565758146872379,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14009155214127162348,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14302345610359121259,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[443988361779617849,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1060626961105550716,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10057676532539598168,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":14,"id":{"name":"gimli","disambiguator":[10097761641719977187,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":15,"id":{"name":"object","disambiguator":[15541071652604932095,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":16,"id":{"name":"memchr","disambiguator":[8355012413122137596,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16122166454175645634,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","num":18,"id":{"name":"crc32fast","disambiguator":[15681895629810548398,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","num":19,"id":{"name":"cfg_if","disambiguator":[7870163325803878118,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","num":20,"id":{"name":"miniz_oxide","disambiguator":[17411890250125992976,0]}},{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","num":21,"id":{"name":"adler","disambiguator":[2136645346904313700,0]}}],"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":0,"byte_end":7577,"line_start":1,"line_end":210,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3637,"byte_end":3640,"line_start":86,"line_end":86,"column_start":22,"column_end":25},"alias_span":null,"name":"Crc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3642,"byte_end":3651,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":null,"name":"CrcReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3653,"byte_end":3662,"line_start":86,"line_end":86,"column_start":38,"column_end":47},"alias_span":null,"name":"CrcWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3684,"byte_end":3693,"line_start":87,"line_end":87,"column_start":20,"column_end":29},"alias_span":null,"name":"GzBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3714,"byte_end":3722,"line_start":88,"line_end":88,"column_start":20,"column_end":28},"alias_span":null,"name":"GzHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3745,"byte_end":3753,"line_start":89,"line_end":89,"column_start":22,"column_end":30},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3755,"byte_end":3768,"line_start":89,"line_end":89,"column_start":32,"column_end":45},"alias_span":null,"name":"CompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3770,"byte_end":3780,"line_start":89,"line_end":89,"column_start":47,"column_end":57},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3782,"byte_end":3797,"line_start":89,"line_end":89,"column_start":59,"column_end":74},"alias_span":null,"name":"DecompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3782,"byte_end":3797,"line_start":89,"line_end":89,"column_start":59,"column_end":74},"alias_span":null,"name":"DecompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3799,"byte_end":3805,"line_start":89,"line_end":89,"column_start":76,"column_end":82},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3829,"byte_end":3842,"line_start":90,"line_end":90,"column_start":22,"column_end":35},"alias_span":null,"name":"FlushCompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3844,"byte_end":3859,"line_start":90,"line_end":90,"column_start":37,"column_end":52},"alias_span":null,"name":"FlushDecompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4161,"byte_end":4175,"line_start":106,"line_end":106,"column_start":35,"column_end":49},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4211,"byte_end":4225,"line_start":107,"line_end":107,"column_start":35,"column_end":49},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4256,"byte_end":4265,"line_start":108,"line_end":108,"column_start":30,"column_end":39},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4296,"byte_end":4305,"line_start":109,"line_end":109,"column_start":30,"column_end":39},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4336,"byte_end":4350,"line_start":110,"line_end":110,"column_start":30,"column_end":44},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4383,"byte_end":4394,"line_start":111,"line_end":111,"column_start":32,"column_end":43},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4427,"byte_end":4438,"line_start":112,"line_end":112,"column_start":32,"column_end":43},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":973}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4663,"byte_end":4677,"line_start":120,"line_end":120,"column_start":36,"column_end":50},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4714,"byte_end":4728,"line_start":121,"line_end":121,"column_start":36,"column_end":50},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4760,"byte_end":4769,"line_start":122,"line_end":122,"column_start":31,"column_end":40},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4801,"byte_end":4810,"line_start":123,"line_end":123,"column_start":31,"column_end":40},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4844,"byte_end":4855,"line_start":124,"line_end":124,"column_start":33,"column_end":44},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4889,"byte_end":4900,"line_start":125,"line_end":125,"column_start":33,"column_end":44},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":995}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5135,"byte_end":5149,"line_start":133,"line_end":133,"column_start":38,"column_end":52},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5188,"byte_end":5202,"line_start":134,"line_end":134,"column_start":38,"column_end":52},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5236,"byte_end":5245,"line_start":135,"line_end":135,"column_start":33,"column_end":42},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5279,"byte_end":5288,"line_start":136,"line_end":136,"column_start":33,"column_end":42},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5322,"byte_end":5336,"line_start":137,"line_end":137,"column_start":33,"column_end":47},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5372,"byte_end":5383,"line_start":138,"line_end":138,"column_start":35,"column_end":46},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":1014}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5419,"byte_end":5430,"line_start":139,"line_end":139,"column_start":35,"column_end":46},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":1014}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":0,"byte_end":7577,"line_start":1,"line_end":210,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":79},{"krate":0,"index":127},{"krate":0,"index":285},{"krate":0,"index":318},{"krate":0,"index":660},{"krate":0,"index":734},{"krate":0,"index":816},{"krate":0,"index":973},{"krate":0,"index":995},{"krate":0,"index":1014},{"krate":0,"index":1036},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1039},{"krate":0,"index":1045}],"decl_id":null,"docs":" A DEFLATE-based stream compression/decompression library","sig":null,"attributes":[{"value":"/ A DEFLATE-based stream compression/decompression library","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":0,"byte_end":60,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":61,"byte_end":64,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides support for compression and decompression of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":65,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ DEFLATE-based streams:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":136,"byte_end":162,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":163,"byte_end":166,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * the DEFLATE format itself","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":167,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/ * the zlib format","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":199,"byte_end":220,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/ * gzip","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":221,"byte_end":231,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":232,"byte_end":235,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These three formats are all closely related and largely only differ in their","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":236,"byte_end":316,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ headers/footers. This crate has three types in each submodule for dealing","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":317,"byte_end":394,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ with these three formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":395,"byte_end":424,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":425,"byte_end":428,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":429,"byte_end":449,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":450,"byte_end":453,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In addition to supporting three formats, this crate supports three different","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":454,"byte_end":534,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ backends, controlled through this crate's features:","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":535,"byte_end":590,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":591,"byte_end":594,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `default`, or `rust_backend` - this implementation uses the `miniz_oxide`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":595,"byte_end":674,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/   crate which is a port of `miniz.c` (below) to Rust. This feature does not","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":675,"byte_end":754,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   require a C compiler and only requires Rust code.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":755,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":811,"byte_end":814,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `miniz-sys` - when enabled this feature will enable this crate to instead","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":815,"byte_end":894,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/   use `miniz.c`, distributed with `miniz-sys`, to implement","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":895,"byte_end":958,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/   compression/decompression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":959,"byte_end":991,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":992,"byte_end":995,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `zlib` - finally, this feature will enable linking against the `libz`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":996,"byte_end":1071,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   library, typically found on most Linux systems by default. If the library","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1072,"byte_end":1151,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/   isn't found to already be on the system it will be compiled from source","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1152,"byte_end":1229,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/   (this is a C library).","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1230,"byte_end":1258,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1259,"byte_end":1262,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ There's various tradeoffs associated with each implementation, but in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1263,"byte_end":1336,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ general you probably won't have to tweak the defaults. The default choice is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1337,"byte_end":1417,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ selected to avoid the need for a C compiler at build time. The `miniz-sys`","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1418,"byte_end":1496,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ feature is largely a historical artifact at this point and is unlikely to be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1497,"byte_end":1577,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ needed, and `zlib` is often useful if you're already using `zlib` for other","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1578,"byte_end":1657,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ C dependencies. The compression ratios and performance of each of these","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1658,"byte_end":1733,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ feature should be roughly comparable, but you'll likely want to run your own","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1734,"byte_end":1814,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ tests if you're curious about the performance.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1815,"byte_end":1865,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1866,"byte_end":1869,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1870,"byte_end":1888,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1889,"byte_end":1892,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This crate consists mainly of three modules, [`read`], [`write`], and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1893,"byte_end":1966,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ [`bufread`]. Each module contains a number of types used to encode and","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":1967,"byte_end":2041,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ decode various streams of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2042,"byte_end":2077,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2078,"byte_end":2081,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ All types in the [`write`] module work on instances of [`Write`][write],","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2082,"byte_end":2158,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ whereas all types in the [`read`] module work on instances of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2159,"byte_end":2224,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ [`Read`][read] and [`bufread`] works with [`BufRead`][bufread]. If you","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2225,"byte_end":2299,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ are decoding directly from a `&[u8]`, use the [`bufread`] types.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2300,"byte_end":2368,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2369,"byte_end":2372,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2373,"byte_end":2380,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2381,"byte_end":2414,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2415,"byte_end":2443,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2444,"byte_end":2460,"line_start":55,"line_end":55,"column_start":1,"column_end":17}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2461,"byte_end":2489,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # fn main() { let _ = run(); }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2494,"byte_end":2528,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ # fn run() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2529,"byte_end":2563,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/ let mut encoder = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2564,"byte_end":2637,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(b\"Example\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2638,"byte_end":2673,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2674,"byte_end":2686,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2687,"byte_end":2694,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2695,"byte_end":2702,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2703,"byte_end":2706,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2707,"byte_end":2710,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Other various types are provided at the top-level of the crate for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2711,"byte_end":2781,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ management and dealing with encoders/decoders. Also note that types which","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2782,"byte_end":2859,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ operate over a specific trait often implement the mirroring trait as well.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2860,"byte_end":2938,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ For example a `flate2::read::DeflateDecoder<T>` *also* implements the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":2939,"byte_end":3012,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ `Write` trait if `T: Write`. That is, the \"dual trait\" is forwarded directly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3013,"byte_end":3093,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ to the underlying object if available.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3094,"byte_end":3136,"line_start":72,"line_end":72,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3137,"byte_end":3140,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`read`]: read/index.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3141,"byte_end":3170,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ [`bufread`]: bufread/index.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3171,"byte_end":3206,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ [`write`]: write/index.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3207,"byte_end":3238,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ [read]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3239,"byte_end":3299,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/ [write]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3300,"byte_end":3362,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/ [bufread]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3363,"byte_end":3429,"line_start":79,"line_end":79,"column_start":1,"column_end":67}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3484,"byte_end":3506,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3507,"byte_end":3546,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"allow(trivial_numeric_casts)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3547,"byte_end":3579,"line_start":83,"line_end":83,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10589,"byte_end":10592,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"decl_id":null,"docs":" The CRC calculated by a [`CrcReader`].","sig":null,"attributes":[{"value":"/ The CRC calculated by a [`CrcReader`].","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10473,"byte_end":10515,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10516,"byte_end":10519,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`CrcReader`]: struct.CrcReader.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10520,"byte_end":10560,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10784,"byte_end":10793,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"CrcReader","qualname":"::crc::CrcReader","value":"CrcReader {  }","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"decl_id":null,"docs":" A wrapper around a [`Read`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Read`] that calculates the CRC.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10632,"byte_end":10688,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10689,"byte_end":10692,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10693,"byte_end":10755,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10957,"byte_end":10960,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc>::new","value":"pub fn new() -> Crc","parent":null,"children":[],"decl_id":null,"docs":" Create a new CRC.\n","sig":null,"attributes":[{"value":"/ Create a new CRC.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10924,"byte_end":10945,"line_start":33,"line_end":33,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11113,"byte_end":11116,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"sum","qualname":"<Crc>::sum","value":"pub fn sum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current crc32 checksum.\n","sig":null,"attributes":[{"value":"/ Returns the current crc32 checksum.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11062,"byte_end":11101,"line_start":41,"line_end":41,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11340,"byte_end":11346,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"amount","qualname":"<Crc>::amount","value":"pub fn amount(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes that have been used to calculate the CRC.\n This value is only accurate if the amount is lower than 2<sup>32</sup>.\n","sig":null,"attributes":[{"value":"/ The number of bytes that have been used to calculate the CRC.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11183,"byte_end":11248,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ This value is only accurate if the amount is lower than 2<sup>32</sup>.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11253,"byte_end":11328,"line_start":47,"line_end":47,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11447,"byte_end":11453,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc>::update","value":"pub fn update(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Update the CRC with the bytes in `data`.\n","sig":null,"attributes":[{"value":"/ Update the CRC with the bytes in `data`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11391,"byte_end":11435,"line_start":52,"line_end":52,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11616,"byte_end":11621,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the CRC.\n","sig":null,"attributes":[{"value":"/ Reset the CRC.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11586,"byte_end":11604,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11776,"byte_end":11783,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"combine","qualname":"<Crc>::combine","value":"pub fn combine(&mut Self, &Crc)","parent":null,"children":[],"decl_id":null,"docs":" Combine the CRC with the CRC for the subsequent block of bytes.\n","sig":null,"attributes":[{"value":"/ Combine the CRC with the CRC for the subsequent block of bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11697,"byte_end":11764,"line_start":64,"line_end":64,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11993,"byte_end":11996,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcReader<R>>::new","value":"pub fn new(R) -> CrcReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcReader.\n","sig":null,"attributes":[{"value":"/ Create a new CrcReader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11954,"byte_end":11981,"line_start":72,"line_end":72,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12185,"byte_end":12188,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcReader<R>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcReader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12138,"byte_end":12173,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12300,"byte_end":12310,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12235,"byte_end":12288,"line_start":87,"line_end":87,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12432,"byte_end":12439,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader by reference.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader by reference.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12354,"byte_end":12420,"line_start":92,"line_end":92,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12574,"byte_end":12581,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the reader that is wrapped by this CrcReader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12486,"byte_end":12562,"line_start":97,"line_end":97,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12688,"byte_end":12693,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcReader<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcReader.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcReader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12640,"byte_end":12676,"line_start":102,"line_end":102,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13419,"byte_end":13428,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"CrcWriter","qualname":"::crc::CrcWriter","value":"CrcWriter {  }","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"decl_id":null,"docs":" A wrapper around a [`Write`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Write`] that calculates the CRC.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13264,"byte_end":13321,"line_start":128,"line_end":128,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13322,"byte_end":13325,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13326,"byte_end":13390,"line_start":130,"line_end":130,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13539,"byte_end":13542,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcWriter<W>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcWriter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13492,"byte_end":13527,"line_start":138,"line_end":138,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13654,"byte_end":13664,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Get the writer that is wrapped by this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get the writer that is wrapped by this CrcWriter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13589,"byte_end":13642,"line_start":143,"line_end":143,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13786,"byte_end":13793,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Get the writer that is wrapped by this CrcWriter by reference.\n","sig":null,"attributes":[{"value":"/ Get the writer that is wrapped by this CrcWriter by reference.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13708,"byte_end":13774,"line_start":148,"line_end":148,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13928,"byte_end":13935,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the writer that is wrapped by this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the writer that is wrapped by this CrcWriter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13840,"byte_end":13916,"line_start":153,"line_end":153,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14042,"byte_end":14047,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcWriter<W>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcWriter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13994,"byte_end":14030,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14169,"byte_end":14172,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcWriter<W>>::new","value":"pub fn new(W) -> CrcWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcWriter.\n","sig":null,"attributes":[{"value":"/ Create a new CrcWriter.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14130,"byte_end":14157,"line_start":165,"line_end":165,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21842,"byte_end":21856,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::bufread::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":20874,"byte_end":20911,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":20912,"byte_end":20915,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading uncompressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":20916,"byte_end":20994,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader, and emitting compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":20995,"byte_end":21056,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21057,"byte_end":21060,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21061,"byte_end":21129,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21130,"byte_end":21133,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21134,"byte_end":21148,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21149,"byte_end":21152,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21153,"byte_end":21160,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21161,"byte_end":21189,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21190,"byte_end":21206,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21207,"byte_end":21235,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::DeflateEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21236,"byte_end":21276,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21277,"byte_end":21299,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21300,"byte_end":21327,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21328,"byte_end":21331,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21332,"byte_end":21349,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", open_hello_world().unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21350,"byte_end":21405,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21406,"byte_end":21413,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21414,"byte_end":21419,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21420,"byte_end":21490,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21491,"byte_end":21541,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/    let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21542,"byte_end":21597,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/    let b = BufReader::new(f);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21598,"byte_end":21631,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/    let mut deflater = DeflateEncoder::new(b, Compression::fast());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21632,"byte_end":21702,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/    let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21703,"byte_end":21738,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/    deflater.read_to_end(&mut buffer)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21739,"byte_end":21781,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/    Ok(buffer)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21782,"byte_end":21799,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21800,"byte_end":21805,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21806,"byte_end":21813,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22071,"byte_end":22074,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21938,"byte_end":22012,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22017,"byte_end":22059,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22740,"byte_end":22745,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22361,"byte_end":22430,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22435,"byte_end":22458,"line_start":62,"line_end":62,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22463,"byte_end":22466,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22471,"byte_end":22546,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22551,"byte_end":22623,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22628,"byte_end":22697,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22702,"byte_end":22728,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22915,"byte_end":22922,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22854,"byte_end":22903,"line_start":73,"line_end":73,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23167,"byte_end":23174,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22967,"byte_end":23024,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23029,"byte_end":23032,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23037,"byte_end":23109,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23114,"byte_end":23155,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23302,"byte_end":23312,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23231,"byte_end":23290,"line_start":86,"line_end":86,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23583,"byte_end":23591,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23354,"byte_end":23427,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23432,"byte_end":23435,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23440,"byte_end":23516,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23521,"byte_end":23571,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23825,"byte_end":23834,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23648,"byte_end":23713,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23718,"byte_end":23721,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23726,"byte_end":23795,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23800,"byte_end":23813,"line_start":102,"line_end":102,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25369,"byte_end":25383,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::bufread::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24300,"byte_end":24339,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24340,"byte_end":24343,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24344,"byte_end":24420,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24421,"byte_end":24484,"line_start":127,"line_end":127,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24485,"byte_end":24488,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24489,"byte_end":24557,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24558,"byte_end":24561,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24562,"byte_end":24576,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24577,"byte_end":24580,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24581,"byte_end":24588,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24589,"byte_end":24617,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24618,"byte_end":24634,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24635,"byte_end":24665,"line_start":136,"line_end":136,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24666,"byte_end":24706,"line_start":137,"line_end":137,"column_start":1,"column_end":41}},{"value":"/ use flate2::bufread::DeflateDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24707,"byte_end":24747,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24748,"byte_end":24751,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24752,"byte_end":24769,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24770,"byte_end":24847,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24848,"byte_end":24894,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24895,"byte_end":24936,"line_start":143,"line_end":143,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24937,"byte_end":24992,"line_start":144,"line_end":144,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24993,"byte_end":25000,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25001,"byte_end":25084,"line_start":146,"line_end":146,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25085,"byte_end":25118,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25119,"byte_end":25179,"line_start":148,"line_end":148,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25180,"byte_end":25238,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25239,"byte_end":25272,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25273,"byte_end":25313,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25314,"byte_end":25326,"line_start":152,"line_end":152,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25327,"byte_end":25332,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25333,"byte_end":25340,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25671,"byte_end":25674,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25571,"byte_end":25643,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25648,"byte_end":25659,"line_start":167,"line_end":167,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26214,"byte_end":26219,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25842,"byte_end":25911,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25916,"byte_end":25939,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25944,"byte_end":25947,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25952,"byte_end":26022,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26027,"byte_end":26095,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26100,"byte_end":26171,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26176,"byte_end":26202,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26506,"byte_end":26516,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder's data","sig":null,"attributes":[{"value":"/ Resets the state of this decoder's data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26328,"byte_end":26371,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26376,"byte_end":26379,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder. It will continue","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26384,"byte_end":26456,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ reading from the same stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26461,"byte_end":26494,"line_start":192,"line_end":192,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26636,"byte_end":26643,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26575,"byte_end":26624,"line_start":197,"line_end":197,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26888,"byte_end":26895,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26688,"byte_end":26745,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26750,"byte_end":26753,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26758,"byte_end":26830,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26835,"byte_end":26876,"line_start":205,"line_end":205,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27023,"byte_end":27033,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":26952,"byte_end":27011,"line_start":210,"line_end":210,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27302,"byte_end":27310,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27075,"byte_end":27142,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27147,"byte_end":27150,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27155,"byte_end":27223,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27228,"byte_end":27290,"line_start":218,"line_end":218,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27446,"byte_end":27455,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27367,"byte_end":27434,"line_start":223,"line_end":223,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28943,"byte_end":28957,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::read::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1082}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28016,"byte_end":28053,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28054,"byte_end":28057,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28058,"byte_end":28135,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28136,"byte_end":28208,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28209,"byte_end":28212,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28213,"byte_end":28275,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28276,"byte_end":28279,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28280,"byte_end":28294,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28295,"byte_end":28298,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28299,"byte_end":28306,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28307,"byte_end":28335,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28336,"byte_end":28352,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28353,"byte_end":28381,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::DeflateEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28382,"byte_end":28419,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28420,"byte_end":28423,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28424,"byte_end":28441,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", deflateencoder_read_hello_world().unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28442,"byte_end":28512,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28513,"byte_end":28520,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28521,"byte_end":28526,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ // Return a vector containing the Deflate compressed version of hello world","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28527,"byte_end":28606,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ fn deflateencoder_read_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28607,"byte_end":28672,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/    let mut ret_vec = [0;100];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28673,"byte_end":28706,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/    let c = b\"hello world\";","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28707,"byte_end":28737,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/    let mut deflater = DeflateEncoder::new(&c[..], Compression::fast());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28738,"byte_end":28813,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/    let count = deflater.read(&mut ret_vec)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28814,"byte_end":28862,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/    Ok(ret_vec[0..count].to_vec())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28863,"byte_end":28900,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28901,"byte_end":28906,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":28907,"byte_end":28914,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29187,"byte_end":29190,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29054,"byte_end":29128,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29133,"byte_end":29175,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29927,"byte_end":29932,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29398,"byte_end":29467,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29472,"byte_end":29495,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29500,"byte_end":29503,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29508,"byte_end":29583,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29588,"byte_end":29660,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29665,"byte_end":29734,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29739,"byte_end":29765,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29770,"byte_end":29773,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29778,"byte_end":29850,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29855,"byte_end":29915,"line_start":60,"line_end":60,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30128,"byte_end":30135,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30067,"byte_end":30116,"line_start":66,"line_end":66,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30401,"byte_end":30408,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30201,"byte_end":30258,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30263,"byte_end":30266,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30271,"byte_end":30343,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30348,"byte_end":30389,"line_start":74,"line_end":74,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30749,"byte_end":30759,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30482,"byte_end":30541,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30546,"byte_end":30549,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30554,"byte_end":30629,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30634,"byte_end":30707,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30712,"byte_end":30737,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31058,"byte_end":31066,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30829,"byte_end":30902,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30907,"byte_end":30910,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30915,"byte_end":30991,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":30996,"byte_end":31046,"line_start":91,"line_end":91,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31301,"byte_end":31310,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31124,"byte_end":31189,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31194,"byte_end":31197,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31202,"byte_end":31271,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31276,"byte_end":31289,"line_start":99,"line_end":99,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32816,"byte_end":32830,"line_start":153,"line_end":153,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::read::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1088}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31746,"byte_end":31785,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31786,"byte_end":31789,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31790,"byte_end":31862,"line_start":123,"line_end":123,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31863,"byte_end":31940,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31941,"byte_end":31944,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31945,"byte_end":32007,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32008,"byte_end":32011,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32012,"byte_end":32026,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32027,"byte_end":32030,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32031,"byte_end":32038,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32039,"byte_end":32067,"line_start":131,"line_end":131,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32068,"byte_end":32084,"line_start":132,"line_end":132,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32085,"byte_end":32115,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32116,"byte_end":32156,"line_start":134,"line_end":134,"column_start":1,"column_end":41}},{"value":"/ use flate2::read::DeflateDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32157,"byte_end":32194,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32195,"byte_end":32198,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32199,"byte_end":32216,"line_start":137,"line_end":137,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32217,"byte_end":32294,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32295,"byte_end":32341,"line_start":139,"line_end":139,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32342,"byte_end":32383,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32384,"byte_end":32439,"line_start":141,"line_end":141,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32440,"byte_end":32447,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32448,"byte_end":32531,"line_start":143,"line_end":143,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32532,"byte_end":32565,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32566,"byte_end":32626,"line_start":145,"line_end":145,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32627,"byte_end":32685,"line_start":146,"line_end":146,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32686,"byte_end":32719,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32720,"byte_end":32760,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32761,"byte_end":32773,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32774,"byte_end":32779,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32780,"byte_end":32787,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33027,"byte_end":33030,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32927,"byte_end":32999,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33004,"byte_end":33015,"line_start":159,"line_end":159,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33348,"byte_end":33360,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DeflateDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33131,"byte_end":33200,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33205,"byte_end":33208,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that the capacity of the intermediate buffer is never increased,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33213,"byte_end":33286,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ and it is recommended for it to be large.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33291,"byte_end":33336,"line_start":167,"line_end":167,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34080,"byte_end":34085,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33558,"byte_end":33627,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33632,"byte_end":33655,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33660,"byte_end":33663,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33668,"byte_end":33738,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33743,"byte_end":33811,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33816,"byte_end":33887,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33892,"byte_end":33918,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33923,"byte_end":33926,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33931,"byte_end":34003,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34008,"byte_end":34068,"line_start":185,"line_end":185,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34281,"byte_end":34288,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34220,"byte_end":34269,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34554,"byte_end":34561,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34354,"byte_end":34411,"line_start":196,"line_end":196,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34416,"byte_end":34419,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34424,"byte_end":34496,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34501,"byte_end":34542,"line_start":199,"line_end":199,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34902,"byte_end":34912,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34635,"byte_end":34694,"line_start":204,"line_end":204,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34699,"byte_end":34702,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34707,"byte_end":34782,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34787,"byte_end":34860,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34865,"byte_end":34890,"line_start":208,"line_end":208,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35209,"byte_end":35217,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":34982,"byte_end":35049,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35054,"byte_end":35057,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35062,"byte_end":35130,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35135,"byte_end":35197,"line_start":216,"line_end":216,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35354,"byte_end":35363,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35275,"byte_end":35342,"line_start":221,"line_end":221,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36586,"byte_end":36600,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::write::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1094}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":35892,"byte_end":35929,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":35930,"byte_end":35933,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":35934,"byte_end":36007,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36008,"byte_end":36081,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36082,"byte_end":36085,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36086,"byte_end":36150,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36151,"byte_end":36154,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36155,"byte_end":36169,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36170,"byte_end":36173,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36174,"byte_end":36181,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36182,"byte_end":36210,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36211,"byte_end":36239,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36240,"byte_end":36278,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36279,"byte_end":36282,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36283,"byte_end":36361,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36362,"byte_end":36379,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36380,"byte_end":36383,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36384,"byte_end":36456,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36457,"byte_end":36498,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36499,"byte_end":36541,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36542,"byte_end":36549,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36550,"byte_end":36557,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36930,"byte_end":36933,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new(W, crate::Compression) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36692,"byte_end":36764,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36769,"byte_end":36810,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36815,"byte_end":36818,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36823,"byte_end":36898,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36903,"byte_end":36918,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37167,"byte_end":37174,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37105,"byte_end":37155,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37451,"byte_end":37458,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37230,"byte_end":37288,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37293,"byte_end":37296,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37301,"byte_end":37377,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37382,"byte_end":37439,"line_start":54,"line_end":54,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38336,"byte_end":38341,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37522,"byte_end":37592,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37597,"byte_end":37620,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37625,"byte_end":37628,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37633,"byte_end":37707,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37712,"byte_end":37787,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37792,"byte_end":37836,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37841,"byte_end":37844,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37849,"byte_end":37925,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":37930,"byte_end":37998,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38003,"byte_end":38077,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38082,"byte_end":38151,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38156,"byte_end":38159,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38164,"byte_end":38176,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38181,"byte_end":38184,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38189,"byte_end":38260,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38265,"byte_end":38324,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39101,"byte_end":39111,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38486,"byte_end":38561,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38566,"byte_end":38569,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38574,"byte_end":38647,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38652,"byte_end":38728,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38733,"byte_end":38776,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38781,"byte_end":38784,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38789,"byte_end":38801,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38806,"byte_end":38809,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38814,"byte_end":38888,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38893,"byte_end":38916,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38921,"byte_end":38924,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38929,"byte_end":38941,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38946,"byte_end":38949,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":38954,"byte_end":39025,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39030,"byte_end":39089,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39946,"byte_end":39952,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39182,"byte_end":39236,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39241,"byte_end":39244,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39249,"byte_end":39321,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39326,"byte_end":39385,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39390,"byte_end":39393,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39398,"byte_end":39474,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39479,"byte_end":39554,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39559,"byte_end":39629,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39634,"byte_end":39707,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39712,"byte_end":39761,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39766,"byte_end":39769,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39774,"byte_end":39786,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39791,"byte_end":39794,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39799,"byte_end":39870,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":39875,"byte_end":39934,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40637,"byte_end":40649,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<DeflateEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40059,"byte_end":40113,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40118,"byte_end":40121,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40126,"byte_end":40202,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40207,"byte_end":40241,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40246,"byte_end":40310,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40315,"byte_end":40385,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40390,"byte_end":40452,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40457,"byte_end":40460,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40465,"byte_end":40477,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40482,"byte_end":40485,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40490,"byte_end":40561,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40566,"byte_end":40625,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40976,"byte_end":40984,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40755,"byte_end":40829,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40834,"byte_end":40837,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40842,"byte_end":40914,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":40919,"byte_end":40964,"line_start":140,"line_end":140,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41227,"byte_end":41236,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41047,"byte_end":41112,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41117,"byte_end":41120,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41125,"byte_end":41197,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41202,"byte_end":41215,"line_start":148,"line_end":148,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42862,"byte_end":42876,"line_start":204,"line_end":204,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::write::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1100}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41680,"byte_end":41719,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41720,"byte_end":41723,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41724,"byte_end":41804,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41805,"byte_end":41851,"line_start":173,"line_end":173,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41852,"byte_end":41855,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41856,"byte_end":41919,"line_start":175,"line_end":175,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41920,"byte_end":41923,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41924,"byte_end":41938,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41939,"byte_end":41942,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41943,"byte_end":41950,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41951,"byte_end":41979,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41980,"byte_end":41996,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41997,"byte_end":42027,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42028,"byte_end":42068,"line_start":183,"line_end":183,"column_start":1,"column_end":41}},{"value":"/ use flate2::write::DeflateDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42069,"byte_end":42107,"line_start":184,"line_end":184,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42108,"byte_end":42111,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42112,"byte_end":42129,"line_start":186,"line_end":186,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42130,"byte_end":42207,"line_start":187,"line_end":187,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42208,"byte_end":42254,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42255,"byte_end":42296,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_writer(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42297,"byte_end":42352,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42353,"byte_end":42360,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42361,"byte_end":42444,"line_start":192,"line_end":192,"column_start":1,"column_end":84}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42445,"byte_end":42481,"line_start":193,"line_end":193,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42482,"byte_end":42542,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42543,"byte_end":42578,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/    let mut deflater = DeflateDecoder::new(writer);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42579,"byte_end":42633,"line_start":196,"line_end":196,"column_start":1,"column_end":55}},{"value":"/    deflater.write_all(&bytes[..])?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42634,"byte_end":42673,"line_start":197,"line_end":197,"column_start":1,"column_end":40}},{"value":"/    writer = deflater.finish()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42674,"byte_end":42709,"line_start":198,"line_end":198,"column_start":1,"column_end":36}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42710,"byte_end":42794,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42795,"byte_end":42819,"line_start":200,"line_end":200,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42820,"byte_end":42825,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42826,"byte_end":42833,"line_start":202,"line_end":202,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43165,"byte_end":43168,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<W>>::new","value":"pub fn new(W) -> DeflateDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42970,"byte_end":43045,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43050,"byte_end":43053,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43058,"byte_end":43133,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43138,"byte_end":43153,"line_start":212,"line_end":212,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43370,"byte_end":43377,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43308,"byte_end":43358,"line_start":219,"line_end":219,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43654,"byte_end":43661,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43433,"byte_end":43491,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43496,"byte_end":43499,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43504,"byte_end":43580,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43585,"byte_end":43642,"line_start":227,"line_end":227,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44442,"byte_end":44447,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43725,"byte_end":43795,"line_start":232,"line_end":232,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43800,"byte_end":43823,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43828,"byte_end":43831,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43836,"byte_end":43910,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43915,"byte_end":43976,"line_start":236,"line_end":236,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43981,"byte_end":43984,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This will then reset the internal state of this decoder and replace the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":43989,"byte_end":44064,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44069,"byte_end":44139,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44144,"byte_end":44217,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44222,"byte_end":44248,"line_start":241,"line_end":241,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44253,"byte_end":44256,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44261,"byte_end":44273,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44278,"byte_end":44281,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, and if that I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44286,"byte_end":44358,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ returns an error then that will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44363,"byte_end":44430,"line_start":246,"line_end":246,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45188,"byte_end":45198,"line_start":268,"line_end":268,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44609,"byte_end":44684,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44689,"byte_end":44692,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44697,"byte_end":44770,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44775,"byte_end":44851,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44856,"byte_end":44899,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44904,"byte_end":44907,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44912,"byte_end":44924,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44929,"byte_end":44932,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":44937,"byte_end":45011,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45016,"byte_end":45039,"line_start":262,"line_end":262,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45044,"byte_end":45047,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45052,"byte_end":45064,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45069,"byte_end":45072,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45077,"byte_end":45147,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45152,"byte_end":45176,"line_start":267,"line_end":267,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46012,"byte_end":46018,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45269,"byte_end":45323,"line_start":272,"line_end":272,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45328,"byte_end":45331,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45336,"byte_end":45412,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45417,"byte_end":45451,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45456,"byte_end":45459,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45464,"byte_end":45540,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45545,"byte_end":45620,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45625,"byte_end":45695,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45700,"byte_end":45773,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45778,"byte_end":45827,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45832,"byte_end":45835,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45840,"byte_end":45852,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45857,"byte_end":45860,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45865,"byte_end":45936,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":45941,"byte_end":46000,"line_start":286,"line_end":286,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46380,"byte_end":46388,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46125,"byte_end":46195,"line_start":292,"line_end":292,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46200,"byte_end":46218,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46223,"byte_end":46226,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46231,"byte_end":46297,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46302,"byte_end":46368,"line_start":296,"line_end":296,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46558,"byte_end":46567,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46451,"byte_end":46523,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46528,"byte_end":46546,"line_start":302,"line_end":302,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65824,"byte_end":65833,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::bufread::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":64862,"byte_end":64890,"line_start":127,"line_end":127,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":64891,"byte_end":64894,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will read uncompressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":64895,"byte_end":64978,"line_start":129,"line_end":129,"column_start":1,"column_end":84}},{"value":"/ from the underlying reader and expose the compressed version as a [`BufRead`]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":64979,"byte_end":65060,"line_start":130,"line_end":130,"column_start":1,"column_end":82}},{"value":"/ interface.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65061,"byte_end":65075,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65076,"byte_end":65079,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65080,"byte_end":65148,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65149,"byte_end":65152,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65153,"byte_end":65167,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65168,"byte_end":65171,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65172,"byte_end":65179,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65180,"byte_end":65208,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65209,"byte_end":65225,"line_start":139,"line_end":139,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65226,"byte_end":65254,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65255,"byte_end":65290,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65291,"byte_end":65313,"line_start":142,"line_end":142,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65314,"byte_end":65341,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65342,"byte_end":65345,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65346,"byte_end":65425,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ // File wrapped in a BufReader implements BufRead","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65426,"byte_end":65479,"line_start":146,"line_end":146,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65480,"byte_end":65483,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65484,"byte_end":65534,"line_start":148,"line_end":148,"column_start":1,"column_end":51}},{"value":"/     let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65535,"byte_end":65591,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/     let b = BufReader::new(f);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65592,"byte_end":65626,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"/     let mut gz = GzEncoder::new(b, Compression::fast());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65627,"byte_end":65687,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/     let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65688,"byte_end":65724,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/     gz.read_to_end(&mut buffer)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65725,"byte_end":65762,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"/     Ok(buffer)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65763,"byte_end":65781,"line_start":154,"line_end":154,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65782,"byte_end":65787,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":65788,"byte_end":65795,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66593,"byte_end":66596,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66252,"byte_end":66321,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66326,"byte_end":66329,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66334,"byte_end":66405,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66410,"byte_end":66461,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66466,"byte_end":66469,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66474,"byte_end":66544,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66549,"byte_end":66581,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67351,"byte_end":67358,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67289,"byte_end":67339,"line_start":207,"line_end":207,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67625,"byte_end":67632,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67424,"byte_end":67482,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67487,"byte_end":67490,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67495,"byte_end":67567,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67572,"byte_end":67613,"line_start":215,"line_end":215,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67775,"byte_end":67785,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67706,"byte_end":67763,"line_start":220,"line_end":220,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70149,"byte_end":70158,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::bufread::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69119,"byte_end":69147,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69148,"byte_end":69151,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69152,"byte_end":69228,"line_start":275,"line_end":275,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69229,"byte_end":69292,"line_start":276,"line_end":276,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69293,"byte_end":69296,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69297,"byte_end":69365,"line_start":278,"line_end":278,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69366,"byte_end":69369,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69370,"byte_end":69384,"line_start":280,"line_end":280,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69385,"byte_end":69388,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69389,"byte_end":69396,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69397,"byte_end":69425,"line_start":283,"line_end":283,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69426,"byte_end":69442,"line_start":284,"line_end":284,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69443,"byte_end":69473,"line_start":285,"line_end":285,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69474,"byte_end":69509,"line_start":286,"line_end":286,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::GzDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69510,"byte_end":69545,"line_start":287,"line_end":287,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69546,"byte_end":69549,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69550,"byte_end":69567,"line_start":289,"line_end":289,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69568,"byte_end":69639,"line_start":290,"line_end":290,"column_start":1,"column_end":72}},{"value":"/ #   e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69640,"byte_end":69685,"line_start":291,"line_end":291,"column_start":1,"column_end":46}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69686,"byte_end":69726,"line_start":292,"line_end":292,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69727,"byte_end":69781,"line_start":293,"line_end":293,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69782,"byte_end":69789,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69790,"byte_end":69795,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69796,"byte_end":69874,"line_start":296,"line_end":296,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69875,"byte_end":69911,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69912,"byte_end":69915,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69916,"byte_end":69976,"line_start":299,"line_end":299,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":69977,"byte_end":70024,"line_start":300,"line_end":300,"column_start":1,"column_end":48}},{"value":"/    let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70025,"byte_end":70058,"line_start":301,"line_end":301,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70059,"byte_end":70093,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70094,"byte_end":70106,"line_start":303,"line_end":303,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70107,"byte_end":70112,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70113,"byte_end":70120,"line_start":305,"line_end":305,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73792,"byte_end":73795,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> GzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73687,"byte_end":73759,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73764,"byte_end":73780,"line_start":439,"line_end":439,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74742,"byte_end":74748,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream, if it was valid\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream, if it was valid","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74663,"byte_end":74730,"line_start":473,"line_end":473,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74881,"byte_end":74888,"line_start":479,"line_end":479,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74819,"byte_end":74869,"line_start":478,"line_end":478,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75156,"byte_end":75163,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74955,"byte_end":75013,"line_start":483,"line_end":483,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75018,"byte_end":75021,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75026,"byte_end":75098,"line_start":485,"line_end":485,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75103,"byte_end":75144,"line_start":486,"line_end":486,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75309,"byte_end":75319,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75238,"byte_end":75297,"line_start":491,"line_end":491,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81371,"byte_end":81385,"line_start":659,"line_end":659,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::bufread::MultiGzDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":79833,"byte_end":79903,"line_start":618,"line_end":618,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":79904,"byte_end":79907,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":79908,"byte_end":79988,"line_start":620,"line_end":620,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":79989,"byte_end":80070,"line_start":621,"line_end":621,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream. `MultiGzDecoder` will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80071,"byte_end":80142,"line_start":622,"line_end":622,"column_start":1,"column_end":72}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80143,"byte_end":80216,"line_start":623,"line_end":623,"column_start":1,"column_end":74}},{"value":"/ the first gzip member. The multistream format is commonly used in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80217,"byte_end":80286,"line_start":624,"line_end":624,"column_start":1,"column_end":70}},{"value":"/ bioinformatics, for example when using the BGZF compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80287,"byte_end":80355,"line_start":625,"line_end":625,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80356,"byte_end":80359,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will consume all gzip members","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80360,"byte_end":80445,"line_start":627,"line_end":627,"column_start":1,"column_end":86}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80446,"byte_end":80504,"line_start":628,"line_end":628,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80505,"byte_end":80508,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80509,"byte_end":80577,"line_start":630,"line_end":630,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80578,"byte_end":80581,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80582,"byte_end":80596,"line_start":632,"line_end":632,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80597,"byte_end":80600,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80601,"byte_end":80608,"line_start":634,"line_end":634,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80609,"byte_end":80637,"line_start":635,"line_end":635,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80638,"byte_end":80654,"line_start":636,"line_end":636,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80655,"byte_end":80685,"line_start":637,"line_end":637,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80686,"byte_end":80721,"line_start":638,"line_end":638,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::MultiGzDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80722,"byte_end":80762,"line_start":639,"line_end":639,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80763,"byte_end":80766,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80767,"byte_end":80784,"line_start":641,"line_end":641,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80785,"byte_end":80856,"line_start":642,"line_end":642,"column_start":1,"column_end":72}},{"value":"/ #   e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80857,"byte_end":80902,"line_start":643,"line_end":643,"column_start":1,"column_end":46}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80903,"byte_end":80943,"line_start":644,"line_end":644,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80944,"byte_end":80998,"line_start":645,"line_end":645,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":80999,"byte_end":81006,"line_start":646,"line_end":646,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81007,"byte_end":81012,"line_start":647,"line_end":647,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81013,"byte_end":81091,"line_start":648,"line_end":648,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81092,"byte_end":81128,"line_start":649,"line_end":649,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81129,"byte_end":81132,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81133,"byte_end":81193,"line_start":651,"line_end":651,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81194,"byte_end":81246,"line_start":652,"line_end":652,"column_start":1,"column_end":53}},{"value":"/    let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81247,"byte_end":81280,"line_start":653,"line_end":653,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81281,"byte_end":81315,"line_start":654,"line_end":654,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81316,"byte_end":81328,"line_start":655,"line_end":655,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81329,"byte_end":81334,"line_start":656,"line_end":656,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81335,"byte_end":81342,"line_start":657,"line_end":657,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81633,"byte_end":81636,"line_start":665,"line_end":665,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> MultiGzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81446,"byte_end":81518,"line_start":662,"line_end":662,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81523,"byte_end":81601,"line_start":663,"line_end":663,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81606,"byte_end":81621,"line_start":664,"line_end":664,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81846,"byte_end":81852,"line_start":672,"line_end":672,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream, if it's valid\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream, if it's valid","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81761,"byte_end":81834,"line_start":671,"line_end":671,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81980,"byte_end":81987,"line_start":677,"line_end":677,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81918,"byte_end":81968,"line_start":676,"line_end":676,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82240,"byte_end":82247,"line_start":685,"line_end":685,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82039,"byte_end":82097,"line_start":681,"line_end":681,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82102,"byte_end":82105,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82110,"byte_end":82182,"line_start":683,"line_end":683,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82187,"byte_end":82228,"line_start":684,"line_end":684,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82378,"byte_end":82388,"line_start":690,"line_end":690,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82307,"byte_end":82366,"line_start":689,"line_end":689,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88183,"byte_end":88192,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::read::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1230}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87355,"byte_end":87383,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87384,"byte_end":87387,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will read uncompressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87388,"byte_end":87468,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ from the underlying reader and expose the compressed version as a [`Read`]","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87469,"byte_end":87547,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ interface.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87548,"byte_end":87562,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87563,"byte_end":87566,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87567,"byte_end":87629,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87630,"byte_end":87633,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87634,"byte_end":87648,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87649,"byte_end":87652,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87653,"byte_end":87660,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87661,"byte_end":87689,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87690,"byte_end":87706,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87707,"byte_end":87735,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87736,"byte_end":87768,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87769,"byte_end":87772,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Return a vector containing the GZ compressed version of hello world","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87773,"byte_end":87847,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87848,"byte_end":87851,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn gzencode_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87852,"byte_end":87906,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/     let mut ret_vec = [0;100];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87907,"byte_end":87941,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/     let bytestring = b\"hello world\";","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87942,"byte_end":87982,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/     let mut gz = GzEncoder::new(&bytestring[..], Compression::fast());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":87983,"byte_end":88057,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/     let count = gz.read(&mut ret_vec)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88058,"byte_end":88101,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/     Ok(ret_vec[0..count].to_vec())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88102,"byte_end":88140,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88141,"byte_end":88146,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88147,"byte_end":88154,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88733,"byte_end":88736,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88392,"byte_end":88461,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88466,"byte_end":88469,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88474,"byte_end":88545,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88550,"byte_end":88601,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88606,"byte_end":88609,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88614,"byte_end":88684,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88689,"byte_end":88721,"line_start":51,"line_end":51,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88919,"byte_end":88926,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88857,"byte_end":88907,"line_start":58,"line_end":58,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89193,"byte_end":89200,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88992,"byte_end":89050,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89055,"byte_end":89058,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89063,"byte_end":89135,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89140,"byte_end":89181,"line_start":66,"line_end":66,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89343,"byte_end":89353,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89274,"byte_end":89331,"line_start":71,"line_end":71,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90818,"byte_end":90827,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::read::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1236}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89792,"byte_end":89820,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89821,"byte_end":89824,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89825,"byte_end":89901,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89902,"byte_end":89965,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89966,"byte_end":89969,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89970,"byte_end":90032,"line_start":98,"line_end":98,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90033,"byte_end":90036,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90037,"byte_end":90051,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90052,"byte_end":90055,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90056,"byte_end":90063,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90064,"byte_end":90067,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90068,"byte_end":90096,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90097,"byte_end":90113,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90114,"byte_end":90144,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90145,"byte_end":90180,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::GzDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90181,"byte_end":90213,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90214,"byte_end":90217,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90218,"byte_end":90235,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90236,"byte_end":90308,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90309,"byte_end":90355,"line_start":112,"line_end":112,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90356,"byte_end":90397,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90398,"byte_end":90453,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90454,"byte_end":90461,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90462,"byte_end":90467,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90468,"byte_end":90546,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90547,"byte_end":90580,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90581,"byte_end":90584,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90585,"byte_end":90645,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90646,"byte_end":90693,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/    let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90694,"byte_end":90727,"line_start":122,"line_end":122,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90728,"byte_end":90762,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90763,"byte_end":90775,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90776,"byte_end":90781,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90782,"byte_end":90789,"line_start":126,"line_end":126,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91019,"byte_end":91022,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> GzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90914,"byte_end":90986,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90991,"byte_end":91007,"line_start":134,"line_end":134,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91256,"byte_end":91262,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream, if it was valid.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream, if it was valid.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91176,"byte_end":91244,"line_start":143,"line_end":143,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91394,"byte_end":91401,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91332,"byte_end":91382,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91668,"byte_end":91675,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91467,"byte_end":91525,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91530,"byte_end":91533,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91538,"byte_end":91610,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91615,"byte_end":91656,"line_start":156,"line_end":156,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91820,"byte_end":91830,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91749,"byte_end":91808,"line_start":161,"line_end":161,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93797,"byte_end":93811,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::read::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":1242}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92269,"byte_end":92339,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92340,"byte_end":92343,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92344,"byte_end":92424,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92425,"byte_end":92506,"line_start":186,"line_end":186,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream.  `MultiGzDecoder` will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92507,"byte_end":92579,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92580,"byte_end":92657,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/ first gzip member. The multistream format is commonly used in bioinformatics,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92658,"byte_end":92739,"line_start":189,"line_end":189,"column_start":1,"column_end":82}},{"value":"/ for example when using the BGZF compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92740,"byte_end":92792,"line_start":190,"line_end":190,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92793,"byte_end":92796,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume all gzip members","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92797,"byte_end":92879,"line_start":192,"line_end":192,"column_start":1,"column_end":83}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92880,"byte_end":92938,"line_start":193,"line_end":193,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92939,"byte_end":92942,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92943,"byte_end":93005,"line_start":195,"line_end":195,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93006,"byte_end":93009,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93010,"byte_end":93024,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93025,"byte_end":93028,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93029,"byte_end":93036,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93037,"byte_end":93065,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93066,"byte_end":93082,"line_start":201,"line_end":201,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93083,"byte_end":93113,"line_start":202,"line_end":202,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93114,"byte_end":93149,"line_start":203,"line_end":203,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::MultiGzDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93150,"byte_end":93187,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93188,"byte_end":93191,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93192,"byte_end":93209,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93210,"byte_end":93282,"line_start":207,"line_end":207,"column_start":1,"column_end":73}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93283,"byte_end":93329,"line_start":208,"line_end":208,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93330,"byte_end":93371,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93372,"byte_end":93427,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93428,"byte_end":93435,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93436,"byte_end":93441,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93442,"byte_end":93520,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93521,"byte_end":93554,"line_start":214,"line_end":214,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93555,"byte_end":93558,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93559,"byte_end":93619,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93620,"byte_end":93672,"line_start":217,"line_end":217,"column_start":1,"column_end":53}},{"value":"/    let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93673,"byte_end":93706,"line_start":218,"line_end":218,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93707,"byte_end":93741,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93742,"byte_end":93754,"line_start":220,"line_end":220,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93755,"byte_end":93760,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93761,"byte_end":93768,"line_start":222,"line_end":222,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94095,"byte_end":94098,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> MultiGzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93908,"byte_end":93980,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93985,"byte_end":94063,"line_start":230,"line_end":230,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94068,"byte_end":94083,"line_start":231,"line_end":231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94358,"byte_end":94364,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream, if it's valid.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream, if it's valid.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94272,"byte_end":94346,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94496,"byte_end":94503,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94434,"byte_end":94484,"line_start":245,"line_end":245,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94770,"byte_end":94777,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94569,"byte_end":94627,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94632,"byte_end":94635,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94640,"byte_end":94712,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94717,"byte_end":94758,"line_start":253,"line_end":253,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94922,"byte_end":94932,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94851,"byte_end":94910,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96263,"byte_end":96272,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::write::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95622,"byte_end":95650,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95651,"byte_end":95654,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95655,"byte_end":95734,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95735,"byte_end":95768,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95769,"byte_end":95772,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95773,"byte_end":95837,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95838,"byte_end":95841,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95842,"byte_end":95856,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95857,"byte_end":95860,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95861,"byte_end":95868,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95869,"byte_end":95897,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95898,"byte_end":95926,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95927,"byte_end":95960,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95961,"byte_end":95964,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":95965,"byte_end":96043,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96044,"byte_end":96061,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96062,"byte_end":96065,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96066,"byte_end":96133,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96134,"byte_end":96175,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96176,"byte_end":96218,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96219,"byte_end":96226,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96227,"byte_end":96234,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97011,"byte_end":97014,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<W>>::new","value":"pub fn new(W, Compression) -> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96670,"byte_end":96739,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96744,"byte_end":96747,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96752,"byte_end":96823,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96828,"byte_end":96879,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96884,"byte_end":96887,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96892,"byte_end":96964,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ written to the stream `w`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96969,"byte_end":96999,"line_start":57,"line_end":57,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97173,"byte_end":97180,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97111,"byte_end":97161,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97437,"byte_end":97444,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97236,"byte_end":97294,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97299,"byte_end":97302,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97307,"byte_end":97379,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97384,"byte_end":97425,"line_start":70,"line_end":70,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":98123,"byte_end":98133,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97508,"byte_end":97583,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97588,"byte_end":97591,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97596,"byte_end":97669,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97674,"byte_end":97750,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97755,"byte_end":97798,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97803,"byte_end":97806,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97811,"byte_end":97823,"line_start":81,"line_end":81,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97828,"byte_end":97831,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97836,"byte_end":97910,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97915,"byte_end":97938,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97943,"byte_end":97946,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97951,"byte_end":97963,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97968,"byte_end":97971,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":97976,"byte_end":98047,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":98052,"byte_end":98111,"line_start":89,"line_end":89,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99506,"byte_end":99512,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding this stream, returning the underlying writer once the\n encoding is done.","sig":null,"attributes":[{"value":"/ Finish encoding this stream, returning the underlying writer once the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":98846,"byte_end":98919,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ encoding is done.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":98924,"byte_end":98945,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":98950,"byte_end":98953,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":98958,"byte_end":99034,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99039,"byte_end":99114,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99119,"byte_end":99189,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99194,"byte_end":99267,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99272,"byte_end":99321,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99326,"byte_end":99329,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99334,"byte_end":99346,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99351,"byte_end":99354,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99359,"byte_end":99430,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99435,"byte_end":99494,"line_start":125,"line_end":125,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101690,"byte_end":101699,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::write::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100576,"byte_end":100604,"line_start":170,"line_end":170,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100605,"byte_end":100608,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100609,"byte_end":100688,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100689,"byte_end":100722,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100723,"byte_end":100726,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100727,"byte_end":100791,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100792,"byte_end":100795,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100796,"byte_end":100810,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100811,"byte_end":100814,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100815,"byte_end":100822,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100823,"byte_end":100851,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100852,"byte_end":100868,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100869,"byte_end":100897,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::{GzEncoder, GzDecoder};","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100898,"byte_end":100944,"line_start":183,"line_end":183,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100945,"byte_end":100948,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100949,"byte_end":100966,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100967,"byte_end":101039,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101040,"byte_end":101082,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101083,"byte_end":101124,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ #    assert_eq!(\"Hello World\", decode_writer(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101125,"byte_end":101191,"line_start":189,"line_end":189,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101192,"byte_end":101199,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a gzip encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101200,"byte_end":101280,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101281,"byte_end":101317,"line_start":192,"line_end":192,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101318,"byte_end":101378,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101379,"byte_end":101414,"line_start":194,"line_end":194,"column_start":1,"column_end":36}},{"value":"/    let mut decoder = GzDecoder::new(writer);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101415,"byte_end":101463,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/    decoder.write_all(&bytes[..])?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101464,"byte_end":101502,"line_start":196,"line_end":196,"column_start":1,"column_end":39}},{"value":"/    writer = decoder.finish()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101503,"byte_end":101537,"line_start":197,"line_end":197,"column_start":1,"column_end":35}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101538,"byte_end":101622,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101623,"byte_end":101647,"line_start":199,"line_end":199,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101648,"byte_end":101653,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101654,"byte_end":101661,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102106,"byte_end":102109,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<W>>::new","value":"pub fn new(W) -> GzDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101911,"byte_end":101986,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101991,"byte_end":101994,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101999,"byte_end":102074,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102079,"byte_end":102094,"line_start":216,"line_end":216,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102438,"byte_end":102444,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<W>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102375,"byte_end":102426,"line_start":226,"line_end":226,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102577,"byte_end":102584,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102515,"byte_end":102565,"line_start":231,"line_end":231,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102871,"byte_end":102878,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102650,"byte_end":102708,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102713,"byte_end":102716,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102721,"byte_end":102797,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102802,"byte_end":102859,"line_start":239,"line_end":239,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103531,"byte_end":103541,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":102952,"byte_end":103027,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103032,"byte_end":103035,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103040,"byte_end":103113,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103118,"byte_end":103194,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103199,"byte_end":103242,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103247,"byte_end":103250,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103255,"byte_end":103267,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103272,"byte_end":103275,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103280,"byte_end":103354,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103359,"byte_end":103382,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103387,"byte_end":103390,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103395,"byte_end":103407,"line_start":255,"line_end":255,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103412,"byte_end":103415,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103420,"byte_end":103490,"line_start":257,"line_end":257,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103495,"byte_end":103519,"line_start":258,"line_end":258,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104380,"byte_end":104386,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this decoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103637,"byte_end":103691,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103696,"byte_end":103699,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103704,"byte_end":103780,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103785,"byte_end":103819,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103824,"byte_end":103827,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103832,"byte_end":103908,"line_start":269,"line_end":269,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103913,"byte_end":103988,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":103993,"byte_end":104063,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104068,"byte_end":104141,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104146,"byte_end":104195,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104200,"byte_end":104203,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104208,"byte_end":104220,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104225,"byte_end":104228,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104233,"byte_end":104304,"line_start":277,"line_end":277,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":104309,"byte_end":104368,"line_start":278,"line_end":278,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":48950,"byte_end":48958,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"GzHeader","qualname":"::gz::GzHeader","value":"GzHeader {  }","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"decl_id":null,"docs":" A structure representing the header of a gzip stream.","sig":null,"attributes":[{"value":"/ A structure representing the header of a gzip stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":48745,"byte_end":48802,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":48803,"byte_end":48806,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The header can contain metadata about the file that was compressed, if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":48807,"byte_end":48881,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ present.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":48882,"byte_end":48894,"line_start":20,"line_end":20,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49201,"byte_end":49209,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"filename","qualname":"<GzHeader>::filename","value":"pub fn filename(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `filename` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `filename` field of this gzip stream's header, if present.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49115,"byte_end":49189,"line_start":31,"line_end":31,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49377,"byte_end":49382,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"extra","qualname":"<GzHeader>::extra","value":"pub fn extra(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `extra` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `extra` field of this gzip stream's header, if present.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49294,"byte_end":49365,"line_start":36,"line_end":36,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49549,"byte_end":49556,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"comment","qualname":"<GzHeader>::comment","value":"pub fn comment(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `comment` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `comment` field of this gzip stream's header, if present.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49464,"byte_end":49537,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49842,"byte_end":49858,"line_start":50,"line_end":50,"column_start":12,"column_end":28},"name":"operating_system","qualname":"<GzHeader>::operating_system","value":"pub fn operating_system(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the `operating_system` field of this gzip stream's header.","sig":null,"attributes":[{"value":"/ Returns the `operating_system` field of this gzip stream's header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49640,"byte_end":49710,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49715,"byte_end":49718,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ There are predefined values for various operating systems.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49723,"byte_end":49785,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/ 255 means that the value is unknown.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49790,"byte_end":49830,"line_start":49,"line_end":49,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50480,"byte_end":50485,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"mtime","qualname":"<GzHeader>::mtime","value":"pub fn mtime(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" This gives the most recent modification time of the original file being compressed.","sig":null,"attributes":[{"value":"/ This gives the most recent modification time of the original file being compressed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49915,"byte_end":50002,"line_start":54,"line_end":54,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50007,"byte_end":50010,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The time is in Unix format, i.e., seconds since 00:00:00 GMT, Jan. 1, 1970.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50015,"byte_end":50094,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ (Note that this may cause problems for MS-DOS and other systems that use local","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50099,"byte_end":50181,"line_start":57,"line_end":57,"column_start":5,"column_end":87}},{"value":"/ rather than Universal time.) If the compressed data did not come from a file,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50186,"byte_end":50267,"line_start":58,"line_end":58,"column_start":5,"column_end":86}},{"value":"/ `mtime` is set to the time at which compression started.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50272,"byte_end":50332,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/ `mtime` = 0 means no time stamp is available.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50337,"byte_end":50386,"line_start":60,"line_end":60,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50391,"byte_end":50394,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The usage of `mtime` is discouraged because of Year 2038 problem.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50399,"byte_end":50468,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50880,"byte_end":50897,"line_start":74,"line_end":74,"column_start":12,"column_end":29},"name":"mtime_as_datetime","qualname":"<GzHeader>::mtime_as_datetime","value":"pub fn mtime_as_datetime(&Self) -> Option<time::SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most recent modification time represented by a date-time type.\n Returns `None` if the value of the underlying counter is 0,\n indicating no time stamp is available.","sig":null,"attributes":[{"value":"/ Returns the most recent modification time represented by a date-time type.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50532,"byte_end":50610,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ Returns `None` if the value of the underlying counter is 0,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50615,"byte_end":50678,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ indicating no time stamp is available.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50683,"byte_end":50725,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50730,"byte_end":50733,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50738,"byte_end":50741,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The time is measured as seconds since 00:00:00 GMT, Jan. 1 1970.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50746,"byte_end":50814,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ See [`mtime`](#method.mtime) for more detail.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":50819,"byte_end":50868,"line_start":73,"line_end":73,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51970,"byte_end":51979,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"GzBuilder","qualname":"::gz::GzBuilder","value":"GzBuilder {  }","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"decl_id":null,"docs":" A builder structure to create a new gzip Encoder.","sig":null,"attributes":[{"value":"/ A builder structure to create a new gzip Encoder.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51174,"byte_end":51227,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51228,"byte_end":51231,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This structure controls header configuration options such as the filename.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51232,"byte_end":51310,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51311,"byte_end":51314,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51315,"byte_end":51329,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51330,"byte_end":51333,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51334,"byte_end":51341,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51342,"byte_end":51370,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51371,"byte_end":51389,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51390,"byte_end":51412,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/ use flate2::GzBuilder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51413,"byte_end":51439,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51440,"byte_end":51468,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51469,"byte_end":51472,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // GzBuilder opens a file and writes a sample string using GzBuilder pattern","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51473,"byte_end":51553,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51554,"byte_end":51557,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # fn sample_builder() -> Result<(), io::Error> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51558,"byte_end":51610,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ let f = File::create(\"examples/hello_world.gz\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51611,"byte_end":51664,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"/ let mut gz = GzBuilder::new()","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51665,"byte_end":51698,"line_start":102,"line_end":102,"column_start":1,"column_end":34}},{"value":"/                 .filename(\"hello_world.txt\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51699,"byte_end":51747,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/                 .comment(\"test file, please delete\")","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51748,"byte_end":51804,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/                 .write(f, Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51805,"byte_end":51859,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/ gz.write_all(b\"hello world\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51860,"byte_end":51894,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ gz.finish()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51895,"byte_end":51912,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51913,"byte_end":51925,"line_start":108,"line_end":108,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51926,"byte_end":51933,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":51934,"byte_end":51941,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52299,"byte_end":52302,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<GzBuilder>::new","value":"pub fn new() -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank builder with no header by default.\n","sig":null,"attributes":[{"value":"/ Create a new blank builder with no header by default.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52230,"byte_end":52287,"line_start":127,"line_end":127,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52562,"byte_end":52567,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"mtime","qualname":"<GzBuilder>::mtime","value":"pub fn mtime(Self, u32) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `mtime` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `mtime` field in the gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52499,"byte_end":52550,"line_start":138,"line_end":138,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52731,"byte_end":52747,"line_start":145,"line_end":145,"column_start":12,"column_end":28},"name":"operating_system","qualname":"<GzBuilder>::operating_system","value":"pub fn operating_system(Self, u8) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `operating_system` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `operating_system` field in the gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52657,"byte_end":52719,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52910,"byte_end":52915,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"extra","qualname":"<GzBuilder>::extra","value":"pub fn extra<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `extra` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `extra` field in the gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52847,"byte_end":52898,"line_start":150,"line_end":150,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53189,"byte_end":53197,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"filename","qualname":"<GzBuilder>::filename","value":"pub fn filename<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `filename` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `filename` field in the gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53034,"byte_end":53088,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53093,"byte_end":53096,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53101,"byte_end":53113,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53118,"byte_end":53121,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Panics if the `filename` slice contains a zero.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53126,"byte_end":53177,"line_start":160,"line_end":160,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53501,"byte_end":53508,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"comment","qualname":"<GzBuilder>::comment","value":"pub fn comment<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `comment` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `comment` field in the gzip header.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53348,"byte_end":53401,"line_start":166,"line_end":166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53406,"byte_end":53409,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53414,"byte_end":53426,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53431,"byte_end":53434,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Panics if the `comment` slice contains a zero.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53439,"byte_end":53489,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53871,"byte_end":53876,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"write","qualname":"<GzBuilder>::write","value":"pub fn write<W: Write>(Self, W, Compression) -> write::GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a writer encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a writer encoder in the process.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53656,"byte_end":53723,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53728,"byte_end":53731,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53736,"byte_end":53808,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ written out to the supplied parameter `w`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":53813,"byte_end":53859,"line_start":179,"line_end":179,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54220,"byte_end":54224,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"read","qualname":"<GzBuilder>::read","value":"pub fn read<R: Read>(Self, R, Compression) -> read::GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54010,"byte_end":54077,"line_start":184,"line_end":184,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54082,"byte_end":54085,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54090,"byte_end":54163,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54168,"byte_end":54208,"line_start":187,"line_end":187,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54573,"byte_end":54581,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"buf_read","qualname":"<GzBuilder>::buf_read","value":"pub fn buf_read<R>(Self, R, Compression) -> bufread::GzEncoder<R> where\nR: BufRead","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54363,"byte_end":54430,"line_start":192,"line_end":192,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54435,"byte_end":54438,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54443,"byte_end":54516,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":54521,"byte_end":54561,"line_start":195,"line_end":195,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111132,"byte_end":111140,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":1289}],"decl_id":null,"docs":" Raw in-memory compression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory compression stream for blocks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110527,"byte_end":110583,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110584,"byte_end":110587,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110588,"byte_end":110663,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110664,"byte_end":110741,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110742,"byte_end":110818,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110819,"byte_end":110869,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110870,"byte_end":110873,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110874,"byte_end":110952,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110953,"byte_end":110971,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110972,"byte_end":110975,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":110976,"byte_end":111038,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111039,"byte_end":111103,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111773,"byte_end":111783,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":1293}],"decl_id":null,"docs":" Raw in-memory decompression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory decompression stream for blocks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111166,"byte_end":111224,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111225,"byte_end":111228,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111229,"byte_end":111304,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111305,"byte_end":111382,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111383,"byte_end":111459,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111460,"byte_end":111510,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111511,"byte_end":111514,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111515,"byte_end":111593,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111594,"byte_end":111612,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111613,"byte_end":111616,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111617,"byte_end":111679,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111680,"byte_end":111744,"line_start":37,"line_end":37,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112212,"byte_end":112216,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::FlushCompress::None","value":"FlushCompress::None","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111978,"byte_end":112053,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112058,"byte_end":112130,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112135,"byte_end":112207,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112667,"byte_end":112671,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::FlushCompress::Sync","value":"FlushCompress::Sync","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112251,"byte_end":112323,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112328,"byte_end":112401,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112406,"byte_end":112432,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112437,"byte_end":112440,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112445,"byte_end":112520,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112525,"byte_end":112598,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112603,"byte_end":112662,"line_start":58,"line_end":58,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113205,"byte_end":113212,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"Partial","qualname":"::mem::FlushCompress::Partial","value":"FlushCompress::Partial","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer, but the output is\n not aligned to a byte boundary.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer, but the output is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112708,"byte_end":112781,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ not aligned to a byte boundary.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112786,"byte_end":112821,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112826,"byte_end":112829,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ All of the input data so far will be available to the decompressor (as","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112834,"byte_end":112908,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ with `Flush::Sync`. This completes the current deflate block and follows","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112913,"byte_end":112989,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ it with an empty fixed codes block that is 10 bites long, and it assures","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":112994,"byte_end":113070,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ that enough bytes are output in order for the decompressor to finish the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113075,"byte_end":113151,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ block before the empty fixed code block.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113156,"byte_end":113200,"line_start":68,"line_end":68,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113556,"byte_end":113560,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Full","qualname":"::mem::FlushCompress::Full","value":"FlushCompress::Full","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" All output is flushed as with `Flush::Sync` and the compression state is\n reset so decompression can restart from this point if previous\n compressed data has been damaged or if random access is desired.","sig":null,"attributes":[{"value":"/ All output is flushed as with `Flush::Sync` and the compression state is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113252,"byte_end":113328,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ reset so decompression can restart from this point if previous","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113333,"byte_end":113399,"line_start":72,"line_end":72,"column_start":5,"column_end":71}},{"value":"/ compressed data has been damaged or if random access is desired.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113404,"byte_end":113472,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113477,"byte_end":113480,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Using this option too often can seriously degrade compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113485,"byte_end":113551,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113788,"byte_end":113794,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::FlushCompress::Finish","value":"FlushCompress::Finish","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113597,"byte_end":113658,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113663,"byte_end":113666,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113671,"byte_end":113745,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113750,"byte_end":113783,"line_start":81,"line_end":81,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113846,"byte_end":113860,"line_start":85,"line_end":85,"column_start":5,"column_end":19},"name":"_Nonexhaustive","qualname":"::mem::FlushCompress::_Nonexhaustive","value":"FlushCompress::_Nonexhaustive","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111958,"byte_end":111971,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"FlushCompress","qualname":"::mem::FlushCompress","value":"pub enum FlushCompress {\n    None = ,\n    Sync = ,\n    Partial = ,\n    Full = ,\n    Finish = ,\n    _Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when compressing\n in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when compressing","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111854,"byte_end":111928,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ in-memory data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":111929,"byte_end":111948,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114272,"byte_end":114276,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::FlushDecompress::None","value":"FlushDecompress::None","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114038,"byte_end":114113,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114118,"byte_end":114190,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114195,"byte_end":114267,"line_start":94,"line_end":94,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114727,"byte_end":114731,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::FlushDecompress::Sync","value":"FlushDecompress::Sync","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114311,"byte_end":114383,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114388,"byte_end":114461,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114466,"byte_end":114492,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114497,"byte_end":114500,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114505,"byte_end":114580,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114585,"byte_end":114658,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114663,"byte_end":114722,"line_start":103,"line_end":103,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114959,"byte_end":114965,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::FlushDecompress::Finish","value":"FlushDecompress::Finish","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114768,"byte_end":114829,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114834,"byte_end":114837,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114842,"byte_end":114916,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114921,"byte_end":114954,"line_start":109,"line_end":109,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115017,"byte_end":115031,"line_start":113,"line_end":113,"column_start":5,"column_end":19},"name":"_Nonexhaustive","qualname":"::mem::FlushDecompress::_Nonexhaustive","value":"FlushDecompress::_Nonexhaustive","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":114016,"byte_end":114031,"line_start":91,"line_end":91,"column_start":10,"column_end":25},"name":"FlushDecompress","qualname":"::mem::FlushDecompress","value":"pub enum FlushDecompress { None = , Sync = , Finish = , _Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when\n decompressing in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113910,"byte_end":113972,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/ decompressing in-memory data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":113973,"byte_end":114006,"line_start":90,"line_end":90,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115363,"byte_end":115378,"line_start":126,"line_end":126,"column_start":12,"column_end":27},"name":"DecompressError","qualname":"::mem::DecompressError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a decompression object finds that the input stream of\n bytes was not a valid input stream of bytes.\n","sig":null,"attributes":[{"value":"/ Error returned when a decompression object finds that the input stream of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115208,"byte_end":115285,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ bytes was not a valid input stream of bytes.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115286,"byte_end":115334,"line_start":124,"line_end":124,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115625,"byte_end":115641,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"needs_dictionary","qualname":"<DecompressError>::needs_dictionary","value":"pub fn needs_dictionary(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether decompression failed due to requiring a dictionary.","sig":null,"attributes":[{"value":"/ Indicates whether decompression failed due to requiring a dictionary.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115441,"byte_end":115514,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115519,"byte_end":115522,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The resulting integer is the Adler-32 checksum of the dictionary","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115527,"byte_end":115595,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ required.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115600,"byte_end":115613,"line_start":132,"line_end":132,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116278,"byte_end":116291,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"CompressError","qualname":"::mem::CompressError","value":"CompressError {  }","parent":null,"children":[{"krate":0,"index":1362}],"decl_id":null,"docs":" Error returned when a compression object is used incorrectly or otherwise\n generates an error.\n","sig":null,"attributes":[{"value":"/ Error returned when a compression object is used incorrectly or otherwise","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116148,"byte_end":116225,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ generates an error.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116226,"byte_end":116249,"line_start":154,"line_end":154,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116807,"byte_end":116809,"line_start":173,"line_end":173,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Indicates success.","sig":null,"attributes":[{"value":"/ Indicates success.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116628,"byte_end":116650,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116655,"byte_end":116658,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Means that more input may be needed but isn't available","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116663,"byte_end":116722,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/ and/or there's more output to be written but the output buffer is full.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116727,"byte_end":116802,"line_start":172,"line_end":172,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117288,"byte_end":117296,"line_start":184,"line_end":184,"column_start":5,"column_end":13},"name":"BufError","qualname":"::mem::Status::BufError","value":"Status::BufError","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Indicates that forward progress is not possible due to input or output\n buffers being empty.","sig":null,"attributes":[{"value":"/ Indicates that forward progress is not possible due to input or output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116816,"byte_end":116890,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ buffers being empty.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116895,"byte_end":116919,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116924,"byte_end":116927,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ For compression it means the input buffer needs some more data or the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116932,"byte_end":117005,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ output buffer needs to be freed up before trying again.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117010,"byte_end":117069,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117074,"byte_end":117077,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ For decompression this means that more input is needed to continue or","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117082,"byte_end":117155,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the output buffer isn't large enough to contain the result. The function","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117160,"byte_end":117236,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ can be called again after fixing both.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117241,"byte_end":117283,"line_start":183,"line_end":183,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117578,"byte_end":117587,"line_start":191,"line_end":191,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Indicates that all input has been consumed and all output bytes have\n been written. Decompression/compression should not be called again.","sig":null,"attributes":[{"value":"/ Indicates that all input has been consumed and all output bytes have","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117303,"byte_end":117375,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ been written. Decompression/compression should not be called again.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117380,"byte_end":117451,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117456,"byte_end":117459,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ For decompression with zlib streams the adler-32 of the decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117464,"byte_end":117536,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ data has also been verified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117541,"byte_end":117573,"line_start":190,"line_end":190,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116615,"byte_end":116621,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"pub enum Status { Ok, BufError, StreamEnd, }","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370}],"decl_id":null,"docs":" Possible status results of compressing some data or successfully\n decompressing a block of data.\n","sig":null,"attributes":[{"value":"/ Possible status results of compressing some data or successfully","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116457,"byte_end":116525,"line_start":165,"line_end":165,"column_start":1,"column_end":69}},{"value":"/ decompressing a block of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":116526,"byte_end":116560,"line_start":166,"line_end":166,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117911,"byte_end":117914,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"pub fn new(Compression, bool) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117612,"byte_end":117680,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117685,"byte_end":117688,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117693,"byte_end":117767,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ to be performed, and the `zlib_header` argument indicates whether the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117772,"byte_end":117845,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ output data should have a zlib header or not.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117850,"byte_end":117899,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":120307,"byte_end":120315,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":120190,"byte_end":120262,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":120267,"byte_end":120295,"line_start":267,"line_end":267,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":120490,"byte_end":120499,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":120373,"byte_end":120445,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":120450,"byte_end":120478,"line_start":273,"line_end":273,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":121493,"byte_end":121498,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"reset","qualname":"<Compress>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Quickly resets this compressor without having to reallocate anything.","sig":null,"attributes":[{"value":"/ Quickly resets this compressor without having to reallocate anything.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":121320,"byte_end":121393,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":121398,"byte_end":121401,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to dropping this object and then creating a new one.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":121406,"byte_end":121481,"line_start":299,"line_end":299,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123043,"byte_end":123051,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8], FlushCompress)\n-> Result<Status, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the output, consuming only as much","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122642,"byte_end":122711,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122716,"byte_end":122775,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122780,"byte_end":122783,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available `FlushCompress` parameters.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122788,"byte_end":122864,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122869,"byte_end":122872,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122877,"byte_end":122953,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":122958,"byte_end":123031,"line_start":335,"line_end":335,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123752,"byte_end":123764,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8], &mut Vec<u8>, FlushCompress)\n-> Result<Status, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the extra space of the output, consuming\n only as much input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the extra space of the output, consuming","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123253,"byte_end":123328,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ only as much input as needed and writing as much output as possible.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123333,"byte_end":123405,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123410,"byte_end":123413,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `compress`, except that the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123418,"byte_end":123489,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123494,"byte_end":123567,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123572,"byte_end":123647,"line_start":350,"line_end":350,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123652,"byte_end":123722,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":123727,"byte_end":123740,"line_start":352,"line_end":352,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124600,"byte_end":124603,"line_start":380,"line_end":380,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"pub fn new(bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124392,"byte_end":124462,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124467,"byte_end":124470,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The `zlib_header` argument indicates whether the input data is expected","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124475,"byte_end":124550,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ to have a zlib header or not.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124555,"byte_end":124588,"line_start":379,"line_end":379,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126693,"byte_end":126701,"line_start":439,"line_end":439,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126574,"byte_end":126646,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126651,"byte_end":126681,"line_start":438,"line_end":438,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126878,"byte_end":126887,"line_start":445,"line_end":445,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126759,"byte_end":126831,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126836,"byte_end":126866,"line_start":444,"line_end":444,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128086,"byte_end":128096,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8], FlushDecompress)\n-> Result<Status, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the output, consuming only as much","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":126946,"byte_end":127017,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127022,"byte_end":127081,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127086,"byte_end":127089,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available `FlushDecompress` parameters.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127094,"byte_end":127172,"line_start":452,"line_end":452,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127177,"byte_end":127180,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ If the first call passes `FlushDecompress::Finish` it is assumed that","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127185,"byte_end":127258,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ the input and output buffers are both sized large enough to decompress","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127263,"byte_end":127337,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the entire stream in a single call.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127342,"byte_end":127381,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127386,"byte_end":127389,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ A flush value of `FlushDecompress::Finish` indicates that there are no","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127394,"byte_end":127468,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"/ more source bytes available beside what's already in the input buffer,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127473,"byte_end":127547,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ and the output buffer is large enough to hold the rest of the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127552,"byte_end":127617,"line_start":460,"line_end":460,"column_start":5,"column_end":70}},{"value":"/ decompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127622,"byte_end":127644,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127649,"byte_end":127652,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127657,"byte_end":127733,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127738,"byte_end":127811,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127816,"byte_end":127819,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127824,"byte_end":127836,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127841,"byte_end":127844,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127849,"byte_end":127918,"line_start":468,"line_end":468,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127923,"byte_end":127991,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ `DecompressError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":127996,"byte_end":128074,"line_start":470,"line_end":470,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":129020,"byte_end":129034,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8], &mut Vec<u8>, FlushDecompress)\n-> Result<Status, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the extra space in the output vector\n specified by `output`.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the extra space in the output vector","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128304,"byte_end":128377,"line_start":480,"line_end":480,"column_start":5,"column_end":78}},{"value":"/ specified by `output`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128382,"byte_end":128408,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128413,"byte_end":128416,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `decompress`, except that the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128421,"byte_end":128494,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128499,"byte_end":128572,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128577,"byte_end":128652,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128657,"byte_end":128727,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128732,"byte_end":128745,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128750,"byte_end":128753,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128758,"byte_end":128770,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128775,"byte_end":128778,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128783,"byte_end":128852,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128857,"byte_end":128925,"line_start":492,"line_end":492,"column_start":5,"column_end":73}},{"value":"/ `DecompressError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":128930,"byte_end":129008,"line_start":493,"line_end":493,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130808,"byte_end":130813,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"reset","qualname":"<Decompress>::reset","value":"pub fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalent of replacing this decompression state with a\n freshly allocated copy.","sig":null,"attributes":[{"value":"/ Performs the equivalent of replacing this decompression state with a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130428,"byte_end":130500,"line_start":533,"line_end":533,"column_start":5,"column_end":77}},{"value":"/ freshly allocated copy.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130505,"byte_end":130532,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130537,"byte_end":130540,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function may not allocate memory, though, and attempts to reuse any","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130545,"byte_end":130621,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ previously existing resources.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130626,"byte_end":130660,"line_start":537,"line_end":537,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130665,"byte_end":130668,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ The argument provided here indicates whether the reset state will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130673,"byte_end":130742,"line_start":539,"line_end":539,"column_start":5,"column_end":74}},{"value":"/ attempt to decode a zlib header first or not.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130747,"byte_end":130796,"line_start":540,"line_end":540,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131056,"byte_end":131063,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"message","qualname":"<DecompressError>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the implementation's message about why the operation failed, if one exists.\n","sig":null,"attributes":[{"value":"/ Retrieve the implementation's message about why the operation failed, if one exists.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130956,"byte_end":131044,"line_start":549,"line_end":549,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":132006,"byte_end":132013,"line_start":581,"line_end":581,"column_start":12,"column_end":19},"name":"message","qualname":"<CompressError>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the implementation's message about why the operation failed, if one exists.\n","sig":null,"attributes":[{"value":"/ Retrieve the implementation's message about why the operation failed, if one exists.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131906,"byte_end":131994,"line_start":580,"line_end":580,"column_start":5,"column_end":93}}]},{"kind":"Type","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":139376,"byte_end":139381,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Flush","qualname":"::zio::Ops::Flush","value":"type Flush: Flush;","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153089,"byte_end":153100,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::bufread::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152260,"byte_end":152294,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152295,"byte_end":152298,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading uncompressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152299,"byte_end":152377,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader, and emitting compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152378,"byte_end":152439,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152440,"byte_end":152443,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152444,"byte_end":152512,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152513,"byte_end":152516,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152517,"byte_end":152531,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152532,"byte_end":152535,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152536,"byte_end":152543,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152544,"byte_end":152572,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152573,"byte_end":152601,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::ZlibEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152602,"byte_end":152639,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152640,"byte_end":152662,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152663,"byte_end":152690,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152691,"byte_end":152694,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Use a buffered file to compress contents into a Vec<u8>","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152695,"byte_end":152757,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152758,"byte_end":152761,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152762,"byte_end":152819,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152820,"byte_end":152872,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ let b = BufReader::new(f);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152873,"byte_end":152903,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ let mut z = ZlibEncoder::new(b, Compression::fast());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152904,"byte_end":152961,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152962,"byte_end":152994,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ z.read_to_end(&mut buffer)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":152995,"byte_end":153027,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ # Ok(buffer)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153028,"byte_end":153044,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153045,"byte_end":153052,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153053,"byte_end":153060,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153312,"byte_end":153315,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153179,"byte_end":153253,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153258,"byte_end":153300,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153967,"byte_end":153972,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153588,"byte_end":153657,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153662,"byte_end":153685,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153690,"byte_end":153693,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153698,"byte_end":153773,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153778,"byte_end":153850,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153855,"byte_end":153924,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153929,"byte_end":153955,"line_start":63,"line_end":63,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154142,"byte_end":154149,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154081,"byte_end":154130,"line_start":69,"line_end":69,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154394,"byte_end":154401,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154194,"byte_end":154251,"line_start":74,"line_end":74,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154256,"byte_end":154259,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154264,"byte_end":154336,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154341,"byte_end":154382,"line_start":77,"line_end":77,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154529,"byte_end":154539,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154458,"byte_end":154517,"line_start":82,"line_end":82,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154810,"byte_end":154818,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154581,"byte_end":154654,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154659,"byte_end":154662,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154667,"byte_end":154743,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154748,"byte_end":154798,"line_start":90,"line_end":90,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155052,"byte_end":155061,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154875,"byte_end":154940,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154945,"byte_end":154948,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":154953,"byte_end":155022,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155027,"byte_end":155040,"line_start":98,"line_end":98,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156569,"byte_end":156580,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::bufread::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155521,"byte_end":155557,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155558,"byte_end":155561,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155562,"byte_end":155638,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155639,"byte_end":155702,"line_start":123,"line_end":123,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155703,"byte_end":155706,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155707,"byte_end":155775,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155776,"byte_end":155779,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155780,"byte_end":155794,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155795,"byte_end":155798,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155799,"byte_end":155806,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155807,"byte_end":155835,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155836,"byte_end":155852,"line_start":131,"line_end":131,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155853,"byte_end":155883,"line_start":132,"line_end":132,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155884,"byte_end":155921,"line_start":133,"line_end":133,"column_start":1,"column_end":38}},{"value":"/ use flate2::bufread::ZlibDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155922,"byte_end":155959,"line_start":134,"line_end":134,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155960,"byte_end":155963,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155964,"byte_end":155981,"line_start":136,"line_end":136,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155982,"byte_end":156053,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/ # e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156054,"byte_end":156097,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156098,"byte_end":156136,"line_start":139,"line_end":139,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_bufreader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156137,"byte_end":156192,"line_start":140,"line_end":140,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156193,"byte_end":156200,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156201,"byte_end":156206,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156207,"byte_end":156287,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156288,"byte_end":156324,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156325,"byte_end":156328,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ fn decode_bufreader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156329,"byte_end":156392,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156393,"byte_end":156442,"line_start":147,"line_end":147,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156443,"byte_end":156477,"line_start":148,"line_end":148,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156478,"byte_end":156512,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156513,"byte_end":156526,"line_start":150,"line_end":150,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156527,"byte_end":156532,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156533,"byte_end":156540,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156761,"byte_end":156764,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156661,"byte_end":156733,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156738,"byte_end":156749,"line_start":161,"line_end":161,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157394,"byte_end":157399,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157022,"byte_end":157091,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157096,"byte_end":157119,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157124,"byte_end":157127,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157132,"byte_end":157202,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157207,"byte_end":157275,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157280,"byte_end":157351,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157356,"byte_end":157382,"line_start":181,"line_end":181,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157569,"byte_end":157576,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157508,"byte_end":157557,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157821,"byte_end":157828,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157621,"byte_end":157678,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157683,"byte_end":157686,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157691,"byte_end":157763,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157768,"byte_end":157809,"line_start":195,"line_end":195,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157956,"byte_end":157966,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157885,"byte_end":157944,"line_start":200,"line_end":200,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158235,"byte_end":158243,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158008,"byte_end":158075,"line_start":205,"line_end":205,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158080,"byte_end":158083,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158088,"byte_end":158156,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158161,"byte_end":158223,"line_start":208,"line_end":208,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158379,"byte_end":158388,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158300,"byte_end":158367,"line_start":213,"line_end":213,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159753,"byte_end":159764,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::read::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1409}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":158943,"byte_end":158977,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":158978,"byte_end":158981,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":158982,"byte_end":159059,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159060,"byte_end":159132,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159133,"byte_end":159136,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159137,"byte_end":159199,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159200,"byte_end":159203,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159204,"byte_end":159218,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159219,"byte_end":159222,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159223,"byte_end":159230,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159231,"byte_end":159259,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159260,"byte_end":159288,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::ZlibEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159289,"byte_end":159323,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159324,"byte_end":159346,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159347,"byte_end":159350,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Open example file and compress the contents using Read interface","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159351,"byte_end":159422,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159423,"byte_end":159426,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159427,"byte_end":159484,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159485,"byte_end":159537,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ let mut z = ZlibEncoder::new(f, Compression::fast());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159538,"byte_end":159595,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ let mut buffer = [0;50];","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159596,"byte_end":159624,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let byte_count = z.read(&mut buffer)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159625,"byte_end":159667,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ # Ok(buffer[0..byte_count].to_vec())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159668,"byte_end":159708,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159709,"byte_end":159716,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159717,"byte_end":159724,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159988,"byte_end":159991,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159855,"byte_end":159929,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159934,"byte_end":159976,"line_start":39,"line_end":39,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160716,"byte_end":160721,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160187,"byte_end":160256,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160261,"byte_end":160284,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160289,"byte_end":160292,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160297,"byte_end":160372,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160377,"byte_end":160449,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160454,"byte_end":160523,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160528,"byte_end":160554,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160559,"byte_end":160562,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160567,"byte_end":160639,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160644,"byte_end":160704,"line_start":57,"line_end":57,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160917,"byte_end":160924,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160856,"byte_end":160905,"line_start":63,"line_end":63,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161190,"byte_end":161197,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160990,"byte_end":161047,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161052,"byte_end":161055,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161060,"byte_end":161132,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161137,"byte_end":161178,"line_start":71,"line_end":71,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161538,"byte_end":161548,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161271,"byte_end":161330,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161335,"byte_end":161338,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161343,"byte_end":161418,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161423,"byte_end":161496,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161501,"byte_end":161526,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161847,"byte_end":161855,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161618,"byte_end":161691,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161696,"byte_end":161699,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161704,"byte_end":161780,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161785,"byte_end":161835,"line_start":88,"line_end":88,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162090,"byte_end":162099,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161913,"byte_end":161978,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161983,"byte_end":161986,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":161991,"byte_end":162060,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162065,"byte_end":162078,"line_start":96,"line_end":96,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163569,"byte_end":163580,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::read::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1415}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162529,"byte_end":162565,"line_start":118,"line_end":118,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162566,"byte_end":162569,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162570,"byte_end":162642,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162643,"byte_end":162720,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162721,"byte_end":162724,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162725,"byte_end":162787,"line_start":123,"line_end":123,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162788,"byte_end":162791,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162792,"byte_end":162806,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162807,"byte_end":162810,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162811,"byte_end":162818,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162819,"byte_end":162847,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162848,"byte_end":162864,"line_start":129,"line_end":129,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162865,"byte_end":162895,"line_start":130,"line_end":130,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162896,"byte_end":162933,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/ use flate2::read::ZlibDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162934,"byte_end":162968,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162969,"byte_end":162972,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162973,"byte_end":162990,"line_start":134,"line_end":134,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162991,"byte_end":163062,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ # e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163063,"byte_end":163106,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163107,"byte_end":163145,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163146,"byte_end":163198,"line_start":138,"line_end":138,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163199,"byte_end":163206,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163207,"byte_end":163212,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163213,"byte_end":163293,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163294,"byte_end":163327,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163328,"byte_end":163331,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163332,"byte_end":163392,"line_start":144,"line_end":144,"column_start":1,"column_end":61}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163393,"byte_end":163442,"line_start":145,"line_end":145,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163443,"byte_end":163477,"line_start":146,"line_end":146,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163478,"byte_end":163512,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163513,"byte_end":163526,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163527,"byte_end":163532,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163533,"byte_end":163540,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163771,"byte_end":163774,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163671,"byte_end":163743,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163748,"byte_end":163759,"line_start":158,"line_end":158,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164101,"byte_end":164113,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<ZlibDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163869,"byte_end":163938,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163943,"byte_end":163946,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Note that the specified buffer will only be used up to its current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163951,"byte_end":164021,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ length. The buffer's capacity will also not grow over time.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164026,"byte_end":164089,"line_start":166,"line_end":166,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164821,"byte_end":164826,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164299,"byte_end":164368,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164373,"byte_end":164396,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164401,"byte_end":164404,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164409,"byte_end":164479,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164484,"byte_end":164552,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164557,"byte_end":164628,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164633,"byte_end":164659,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164664,"byte_end":164667,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164672,"byte_end":164744,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164749,"byte_end":164809,"line_start":184,"line_end":184,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165022,"byte_end":165029,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164961,"byte_end":165010,"line_start":190,"line_end":190,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165295,"byte_end":165302,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165095,"byte_end":165152,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165157,"byte_end":165160,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165165,"byte_end":165237,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165242,"byte_end":165283,"line_start":198,"line_end":198,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165643,"byte_end":165653,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165376,"byte_end":165435,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165440,"byte_end":165443,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165448,"byte_end":165523,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165528,"byte_end":165601,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165606,"byte_end":165631,"line_start":207,"line_end":207,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165950,"byte_end":165958,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165723,"byte_end":165790,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165795,"byte_end":165798,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165803,"byte_end":165871,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":165876,"byte_end":165938,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":166095,"byte_end":166104,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":166016,"byte_end":166083,"line_start":220,"line_end":220,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167342,"byte_end":167353,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::write::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1421}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166627,"byte_end":166661,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166662,"byte_end":166665,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166666,"byte_end":166739,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166740,"byte_end":166813,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166814,"byte_end":166817,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166818,"byte_end":166882,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166883,"byte_end":166886,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166887,"byte_end":166901,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166902,"byte_end":166905,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166906,"byte_end":166913,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166914,"byte_end":166942,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166943,"byte_end":166971,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":166972,"byte_end":167007,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167008,"byte_end":167011,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write, assigning the compressed bytes of sample string","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167012,"byte_end":167092,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167093,"byte_end":167096,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # fn zlib_encoding() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167097,"byte_end":167146,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/ let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167147,"byte_end":167216,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ e.write_all(b\"Hello World\")?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167217,"byte_end":167250,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ let compressed = e.finish()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167251,"byte_end":167284,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167285,"byte_end":167297,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167298,"byte_end":167305,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167306,"byte_end":167313,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167680,"byte_end":167683,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new(W, crate::Compression) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167442,"byte_end":167514,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167519,"byte_end":167560,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167565,"byte_end":167568,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167573,"byte_end":167648,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167653,"byte_end":167668,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167910,"byte_end":167917,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167848,"byte_end":167898,"line_start":47,"line_end":47,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168194,"byte_end":168201,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167973,"byte_end":168031,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168036,"byte_end":168039,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168044,"byte_end":168120,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168125,"byte_end":168182,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169016,"byte_end":169021,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168265,"byte_end":168335,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168340,"byte_end":168363,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168368,"byte_end":168371,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168376,"byte_end":168450,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168455,"byte_end":168516,"line_start":64,"line_end":64,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168521,"byte_end":168524,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168529,"byte_end":168605,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168610,"byte_end":168678,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168683,"byte_end":168757,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168762,"byte_end":168831,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168836,"byte_end":168839,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168844,"byte_end":168856,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168861,"byte_end":168864,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168869,"byte_end":168940,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":168945,"byte_end":169004,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169781,"byte_end":169791,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169166,"byte_end":169241,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169246,"byte_end":169249,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169254,"byte_end":169327,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169332,"byte_end":169408,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169413,"byte_end":169456,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169461,"byte_end":169464,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169469,"byte_end":169481,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169486,"byte_end":169489,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169494,"byte_end":169568,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169573,"byte_end":169596,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169601,"byte_end":169604,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169609,"byte_end":169621,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169626,"byte_end":169629,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169634,"byte_end":169705,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169710,"byte_end":169769,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170626,"byte_end":170632,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169862,"byte_end":169916,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169921,"byte_end":169924,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":169929,"byte_end":170001,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170006,"byte_end":170065,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170070,"byte_end":170073,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170078,"byte_end":170154,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170159,"byte_end":170234,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170239,"byte_end":170309,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170314,"byte_end":170387,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170392,"byte_end":170441,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170446,"byte_end":170449,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170454,"byte_end":170466,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170471,"byte_end":170474,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170479,"byte_end":170550,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170555,"byte_end":170614,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171317,"byte_end":171329,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<ZlibEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170739,"byte_end":170793,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170798,"byte_end":170801,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170806,"byte_end":170882,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170887,"byte_end":170921,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170926,"byte_end":170990,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":170995,"byte_end":171065,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171070,"byte_end":171132,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171137,"byte_end":171140,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171145,"byte_end":171157,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171162,"byte_end":171165,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171170,"byte_end":171241,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171246,"byte_end":171305,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171656,"byte_end":171664,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171435,"byte_end":171509,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171514,"byte_end":171517,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171522,"byte_end":171594,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171599,"byte_end":171644,"line_start":140,"line_end":140,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171907,"byte_end":171916,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171727,"byte_end":171792,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171797,"byte_end":171800,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171805,"byte_end":171877,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":171882,"byte_end":171895,"line_start":148,"line_end":148,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173502,"byte_end":173513,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::write::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1427}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172348,"byte_end":172384,"line_start":170,"line_end":170,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172385,"byte_end":172388,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172389,"byte_end":172469,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172470,"byte_end":172516,"line_start":173,"line_end":173,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172517,"byte_end":172520,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172521,"byte_end":172585,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172586,"byte_end":172589,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172590,"byte_end":172604,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172605,"byte_end":172608,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172609,"byte_end":172616,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172617,"byte_end":172645,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172646,"byte_end":172662,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172663,"byte_end":172693,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172694,"byte_end":172731,"line_start":183,"line_end":183,"column_start":1,"column_end":38}},{"value":"/ use flate2::write::ZlibDecoder;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172732,"byte_end":172767,"line_start":184,"line_end":184,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172768,"byte_end":172771,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172772,"byte_end":172789,"line_start":186,"line_end":186,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172790,"byte_end":172864,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172865,"byte_end":172911,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172912,"byte_end":172953,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172954,"byte_end":173009,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173010,"byte_end":173017,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173018,"byte_end":173023,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173024,"byte_end":173104,"line_start":193,"line_end":193,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173105,"byte_end":173141,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173142,"byte_end":173145,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173146,"byte_end":173206,"line_start":196,"line_end":196,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173207,"byte_end":173242,"line_start":197,"line_end":197,"column_start":1,"column_end":36}},{"value":"/    let mut z = ZlibDecoder::new(writer);","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173243,"byte_end":173287,"line_start":198,"line_end":198,"column_start":1,"column_end":45}},{"value":"/    z.write_all(&bytes[..])?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173288,"byte_end":173320,"line_start":199,"line_end":199,"column_start":1,"column_end":33}},{"value":"/    writer = z.finish()?;","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173321,"byte_end":173349,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173350,"byte_end":173434,"line_start":201,"line_end":201,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173435,"byte_end":173459,"line_start":202,"line_end":202,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173460,"byte_end":173465,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173466,"byte_end":173473,"line_start":204,"line_end":204,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173799,"byte_end":173802,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<W>>::new","value":"pub fn new(W) -> ZlibDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173604,"byte_end":173679,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173684,"byte_end":173687,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When this decoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173692,"byte_end":173767,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173772,"byte_end":173787,"line_start":214,"line_end":214,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173997,"byte_end":174004,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173935,"byte_end":173985,"line_start":221,"line_end":221,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174281,"byte_end":174288,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174060,"byte_end":174118,"line_start":226,"line_end":226,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174123,"byte_end":174126,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174131,"byte_end":174207,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174212,"byte_end":174269,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174902,"byte_end":174907,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174352,"byte_end":174422,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174427,"byte_end":174450,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174455,"byte_end":174458,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174463,"byte_end":174533,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174538,"byte_end":174608,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174613,"byte_end":174686,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174691,"byte_end":174717,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174722,"byte_end":174725,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174730,"byte_end":174742,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174747,"byte_end":174750,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174755,"byte_end":174826,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":174831,"byte_end":174890,"line_start":245,"line_end":245,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175683,"byte_end":175693,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175068,"byte_end":175143,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175148,"byte_end":175151,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175156,"byte_end":175229,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175234,"byte_end":175310,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175315,"byte_end":175358,"line_start":256,"line_end":256,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175363,"byte_end":175366,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175371,"byte_end":175383,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175388,"byte_end":175391,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175396,"byte_end":175470,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175475,"byte_end":175498,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175503,"byte_end":175506,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175511,"byte_end":175523,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175528,"byte_end":175531,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175536,"byte_end":175607,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175612,"byte_end":175671,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176507,"byte_end":176513,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175764,"byte_end":175818,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175823,"byte_end":175826,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175831,"byte_end":175907,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175912,"byte_end":175946,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175951,"byte_end":175954,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":175959,"byte_end":176035,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176040,"byte_end":176115,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176120,"byte_end":176190,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176195,"byte_end":176268,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176273,"byte_end":176322,"line_start":280,"line_end":280,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176327,"byte_end":176330,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176335,"byte_end":176347,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176352,"byte_end":176355,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176360,"byte_end":176431,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176436,"byte_end":176495,"line_start":285,"line_end":285,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176875,"byte_end":176883,"line_start":296,"line_end":296,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176620,"byte_end":176690,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176695,"byte_end":176713,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176718,"byte_end":176721,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176726,"byte_end":176792,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176797,"byte_end":176863,"line_start":295,"line_end":295,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":177053,"byte_end":177062,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":176946,"byte_end":177018,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":177023,"byte_end":177041,"line_start":301,"line_end":301,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4120,"byte_end":4124,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"name":"read","qualname":"::read","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992}],"decl_id":null,"docs":" Types which operate over [`Read`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Read`] streams, both encoders and decoders for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":3946,"byte_end":4023,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ various formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4024,"byte_end":4044,"line_start":102,"line_end":102,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4045,"byte_end":4048,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4049,"byte_end":4111,"line_start":104,"line_end":104,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4620,"byte_end":4625,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011}],"decl_id":null,"docs":" Types which operate over [`Write`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Write`] streams, both encoders and decoders for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4443,"byte_end":4521,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ various formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4522,"byte_end":4542,"line_start":116,"line_end":116,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4543,"byte_end":4546,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4547,"byte_end":4611,"line_start":118,"line_end":118,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5088,"byte_end":5095,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"name":"bufread","qualname":"::bufread","value":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033}],"decl_id":null,"docs":" Types which operate over [`BufRead`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`BufRead`] streams, both encoders and decoders for","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4905,"byte_end":4985,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/ various formats.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":4986,"byte_end":5006,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5007,"byte_end":5010,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":5011,"byte_end":5079,"line_start":131,"line_end":131,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6375,"byte_end":6386,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"Compression","qualname":"::Compression","value":"","parent":null,"children":[],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"/ When compressing data, the compression level can be specified by a value in","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6224,"byte_end":6303,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ this enum.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6304,"byte_end":6318,"line_start":161,"line_end":161,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6680,"byte_end":6683,"line_start":171,"line_end":171,"column_start":18,"column_end":21},"name":"new","qualname":"<Compression>::new","value":"pub const fn new(u32) -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Creates a new description of the compression level with an explicitly\n specified integer.","sig":null,"attributes":[{"value":"/ Creates a new description of the compression level with an explicitly","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6417,"byte_end":6490,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ specified integer.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6495,"byte_end":6517,"line_start":167,"line_end":167,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6522,"byte_end":6525,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The integer here is typically on a scale of 0-9 where 0 means \"no","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6530,"byte_end":6599,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ compression\" and 9 means \"take as long as you'd like\".","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6604,"byte_end":6662,"line_start":170,"line_end":170,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6870,"byte_end":6874,"line_start":177,"line_end":177,"column_start":18,"column_end":22},"name":"none","qualname":"<Compression>::none","value":"pub const fn none() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" No compression is to be performed, this may actually inflate data\n slightly when encoding.\n","sig":null,"attributes":[{"value":"/ No compression is to be performed, this may actually inflate data","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6751,"byte_end":6820,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ slightly when encoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6825,"byte_end":6852,"line_start":176,"line_end":176,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6990,"byte_end":6994,"line_start":182,"line_end":182,"column_start":18,"column_end":22},"name":"fast","qualname":"<Compression>::fast","value":"pub const fn fast() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[{"value":"/ Optimize for the best speed of encoding.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6928,"byte_end":6972,"line_start":181,"line_end":181,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7114,"byte_end":7118,"line_start":187,"line_end":187,"column_start":18,"column_end":22},"name":"best","qualname":"<Compression>::best","value":"pub const fn best() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[{"value":"/ Optimize for the size of data being encoded.","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7048,"byte_end":7096,"line_start":186,"line_end":186,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7278,"byte_end":7283,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"level","qualname":"<Compression>::level","value":"pub fn level(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns an integer representing the compression level, typically on a\n scale of 0-9\n","sig":null,"attributes":[{"value":"/ Returns an integer representing the compression level, typically on a","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7172,"byte_end":7245,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ scale of 0-9","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7250,"byte_end":7266,"line_start":192,"line_end":192,"column_start":5,"column_end":21}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":8238,"byte_end":8247,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":8633,"byte_end":8642,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":8962,"byte_end":8971,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":9338,"byte_end":9347,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":9888,"byte_end":9897,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10847,"byte_end":10850,"line_start":26,"line_end":26,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10914,"byte_end":10917,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11935,"byte_end":11944,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12119,"byte_end":12128,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12765,"byte_end":12774,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12978,"byte_end":12987,"line_start":116,"line_end":116,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13473,"byte_end":13482,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14111,"byte_end":14120,"line_start":164,"line_end":164,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14312,"byte_end":14321,"line_start":174,"line_end":174,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21914,"byte_end":21928,"line_start":45,"line_end":45,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22337,"byte_end":22351,"line_start":60,"line_end":60,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23916,"byte_end":23930,"line_start":108,"line_end":108,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24096,"byte_end":24110,"line_start":114,"line_end":114,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25547,"byte_end":25561,"line_start":165,"line_end":165,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25818,"byte_end":25832,"line_start":176,"line_end":176,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27537,"byte_end":27551,"line_start":229,"line_end":229,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27719,"byte_end":27733,"line_start":235,"line_end":235,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29030,"byte_end":29044,"line_start":40,"line_end":40,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29374,"byte_end":29388,"line_start":50,"line_end":50,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31390,"byte_end":31404,"line_start":105,"line_end":105,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31542,"byte_end":31556,"line_start":111,"line_end":111,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32903,"byte_end":32917,"line_start":157,"line_end":157,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33534,"byte_end":33548,"line_start":175,"line_end":175,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35443,"byte_end":35457,"line_start":227,"line_end":227,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35597,"byte_end":35611,"line_start":233,"line_end":233,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36668,"byte_end":36682,"line_start":34,"line_end":34,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41323,"byte_end":41337,"line_start":154,"line_end":154,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41550,"byte_end":41564,"line_start":164,"line_end":164,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42946,"byte_end":42960,"line_start":208,"line_end":208,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46654,"byte_end":46668,"line_start":308,"line_end":308,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46881,"byte_end":46895,"line_start":318,"line_end":318,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12652646,"byte_end":12652658,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12652983,"byte_end":12652990,"line_start":43,"line_end":43,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12653259,"byte_end":12653266,"line_start":53,"line_end":53,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12654644,"byte_end":12654651,"line_start":98,"line_end":98,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12654924,"byte_end":12654931,"line_start":116,"line_end":116,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12655200,"byte_end":12655207,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12656691,"byte_end":12656698,"line_start":173,"line_end":173,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","byte_start":48328,"byte_end":48340,"line_start":48,"line_end":48,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66233,"byte_end":66242,"line_start":175,"line_end":175,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67270,"byte_end":67279,"line_start":206,"line_end":206,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":68226,"byte_end":68235,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":68920,"byte_end":68929,"line_start":263,"line_end":263,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70583,"byte_end":70598,"line_start":334,"line_end":334,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":71612,"byte_end":71618,"line_start":376,"line_end":376,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":71870,"byte_end":71876,"line_start":387,"line_end":387,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73175,"byte_end":73181,"line_start":420,"line_end":420,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73668,"byte_end":73677,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74644,"byte_end":74653,"line_start":472,"line_end":472,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75414,"byte_end":75423,"line_start":497,"line_end":497,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":79634,"byte_end":79643,"line_start":608,"line_end":608,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81422,"byte_end":81436,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81737,"byte_end":81751,"line_start":670,"line_end":670,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82465,"byte_end":82479,"line_start":695,"line_end":695,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88373,"byte_end":88382,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88838,"byte_end":88847,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89444,"byte_end":89453,"line_start":77,"line_end":77,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89593,"byte_end":89602,"line_start":83,"line_end":83,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90895,"byte_end":90904,"line_start":132,"line_end":132,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91157,"byte_end":91166,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91921,"byte_end":91930,"line_start":167,"line_end":167,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92070,"byte_end":92079,"line_start":173,"line_end":173,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93884,"byte_end":93898,"line_start":228,"line_end":228,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94248,"byte_end":94262,"line_start":239,"line_end":239,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":95023,"byte_end":95037,"line_start":264,"line_end":264,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":95177,"byte_end":95191,"line_start":270,"line_end":270,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96651,"byte_end":96660,"line_start":50,"line_end":50,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99862,"byte_end":99871,"line_start":140,"line_end":140,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100298,"byte_end":100307,"line_start":156,"line_end":156,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100441,"byte_end":100450,"line_start":162,"line_end":162,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101892,"byte_end":101901,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":105395,"byte_end":105402,"line_start":314,"line_end":314,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":105586,"byte_end":105595,"line_start":322,"line_end":322,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":107237,"byte_end":107246,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49100,"byte_end":49108,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52141,"byte_end":52150,"line_start":120,"line_end":120,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52214,"byte_end":52223,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115419,"byte_end":115434,"line_start":128,"line_end":128,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117597,"byte_end":117605,"line_start":194,"line_end":194,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124375,"byte_end":124385,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130909,"byte_end":130924,"line_start":546,"line_end":546,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130934,"byte_end":130949,"line_start":548,"line_end":548,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131254,"byte_end":131259,"line_start":558,"line_end":558,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131394,"byte_end":131409,"line_start":564,"line_end":564,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131863,"byte_end":131876,"line_start":577,"line_end":577,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131886,"byte_end":131899,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":132104,"byte_end":132109,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":132242,"byte_end":132255,"line_start":592,"line_end":592,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":139776,"byte_end":139784,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":140404,"byte_end":140414,"line_start":58,"line_end":58,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":141112,"byte_end":141125,"line_start":90,"line_end":90,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":141326,"byte_end":141341,"line_start":104,"line_end":104,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":142970,"byte_end":142976,"line_start":161,"line_end":161,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":145929,"byte_end":145935,"line_start":252,"line_end":252,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":146963,"byte_end":146969,"line_start":282,"line_end":282,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153158,"byte_end":153169,"line_start":41,"line_end":41,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153567,"byte_end":153578,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155143,"byte_end":155154,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155320,"byte_end":155331,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156640,"byte_end":156651,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157001,"byte_end":157012,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158470,"byte_end":158481,"line_start":219,"line_end":219,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158649,"byte_end":158660,"line_start":225,"line_end":225,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159834,"byte_end":159845,"line_start":37,"line_end":37,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160166,"byte_end":160177,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162179,"byte_end":162190,"line_start":102,"line_end":102,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162328,"byte_end":162339,"line_start":108,"line_end":108,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163650,"byte_end":163661,"line_start":156,"line_end":156,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164278,"byte_end":164289,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":166184,"byte_end":166195,"line_start":226,"line_end":226,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":166335,"byte_end":166346,"line_start":232,"line_end":232,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167421,"byte_end":167432,"line_start":35,"line_end":35,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172003,"byte_end":172014,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172227,"byte_end":172238,"line_start":164,"line_end":164,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173583,"byte_end":173594,"line_start":210,"line_end":210,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":177149,"byte_end":177160,"line_start":307,"line_end":307,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":177373,"byte_end":177384,"line_start":317,"line_end":317,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6399,"byte_end":6410,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7341,"byte_end":7352,"line_start":198,"line_end":198,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":8238,"byte_end":8247,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":8633,"byte_end":8642,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":8962,"byte_end":8971,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":9338,"byte_end":9347,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\bufreader.rs","byte_start":9888,"byte_end":9897,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":4390}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10847,"byte_end":10850,"line_start":26,"line_end":26,"column_start":18,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":10914,"byte_end":10917,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":11935,"byte_end":11944,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12119,"byte_end":12128,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12765,"byte_end":12774,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1052},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":12978,"byte_end":12987,"line_start":116,"line_end":116,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1052},"to":{"krate":1,"index":4390}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":13473,"byte_end":13482,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14111,"byte_end":14120,"line_start":164,"line_end":164,"column_start":16,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\crc.rs","byte_start":14312,"byte_end":14321,"line_start":174,"line_end":174,"column_start":26,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":21914,"byte_end":21928,"line_start":45,"line_end":45,"column_start":18,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":22337,"byte_end":22351,"line_start":60,"line_end":60,"column_start":9,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":23916,"byte_end":23930,"line_start":108,"line_end":108,"column_start":27,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":24096,"byte_end":24110,"line_start":114,"line_end":114,"column_start":36,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25547,"byte_end":25561,"line_start":165,"line_end":165,"column_start":18,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":25818,"byte_end":25832,"line_start":176,"line_end":176,"column_start":9,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27537,"byte_end":27551,"line_start":229,"line_end":229,"column_start":27,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1073},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\bufread.rs","byte_start":27719,"byte_end":27733,"line_start":235,"line_end":235,"column_start":36,"column_end":50},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1073},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29030,"byte_end":29044,"line_start":40,"line_end":40,"column_start":15,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":29374,"byte_end":29388,"line_start":50,"line_end":50,"column_start":9,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31390,"byte_end":31404,"line_start":105,"line_end":105,"column_start":24,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":31542,"byte_end":31556,"line_start":111,"line_end":111,"column_start":33,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":32903,"byte_end":32917,"line_start":157,"line_end":157,"column_start":15,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":33534,"byte_end":33548,"line_start":175,"line_end":175,"column_start":9,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35443,"byte_end":35457,"line_start":227,"line_end":227,"column_start":24,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\read.rs","byte_start":35597,"byte_end":35611,"line_start":233,"line_end":233,"column_start":33,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":36668,"byte_end":36682,"line_start":34,"line_end":34,"column_start":16,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41323,"byte_end":41337,"line_start":154,"line_end":154,"column_start":26,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1092},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":41550,"byte_end":41564,"line_start":164,"line_end":164,"column_start":32,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1092},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":42946,"byte_end":42960,"line_start":208,"line_end":208,"column_start":16,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46654,"byte_end":46668,"line_start":308,"line_end":308,"column_start":26,"column_end":40},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1098},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\deflate\\write.rs","byte_start":46881,"byte_end":46895,"line_start":318,"line_end":318,"column_start":32,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1098},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","byte_start":47343,"byte_end":47347,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","byte_start":47350,"byte_end":47354,"line_start":10,"line_end":10,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","byte_start":47449,"byte_end":47456,"line_start":15,"line_end":15,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":305},"to":{"krate":0,"index":308}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","byte_start":47750,"byte_end":47757,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":305},"to":{"krate":0,"index":312}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12652646,"byte_end":12652658,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12652983,"byte_end":12652990,"line_start":43,"line_end":43,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12653259,"byte_end":12653266,"line_start":53,"line_end":53,"column_start":25,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1130},"to":{"krate":0,"index":308}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12654644,"byte_end":12654651,"line_start":98,"line_end":98,"column_start":18,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1130},"to":{"krate":0,"index":305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12654924,"byte_end":12654931,"line_start":116,"line_end":116,"column_start":21,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12655200,"byte_end":12655207,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1143},"to":{"krate":0,"index":312}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\rust.rs","byte_start":12656691,"byte_end":12656698,"line_start":173,"line_end":173,"column_start":18,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1143},"to":{"krate":0,"index":305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\ffi\\mod.rs","byte_start":48328,"byte_end":48340,"line_start":48,"line_end":48,"column_start":26,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":66233,"byte_end":66242,"line_start":175,"line_end":175,"column_start":18,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":67270,"byte_end":67279,"line_start":206,"line_end":206,"column_start":9,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":68226,"byte_end":68235,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":68920,"byte_end":68929,"line_start":263,"line_end":263,"column_start":36,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":70583,"byte_end":70598,"line_start":334,"line_end":334,"column_start":6,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":71612,"byte_end":71618,"line_start":376,"line_end":376,"column_start":13,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":71870,"byte_end":71876,"line_start":387,"line_end":387,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":416},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73175,"byte_end":73181,"line_start":420,"line_end":420,"column_start":13,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":73668,"byte_end":73677,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":74644,"byte_end":74653,"line_start":472,"line_end":472,"column_start":9,"column_end":18},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":75414,"byte_end":75423,"line_start":497,"line_end":497,"column_start":27,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1170},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":79634,"byte_end":79643,"line_start":608,"line_end":608,"column_start":36,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1170},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81422,"byte_end":81436,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":81737,"byte_end":81751,"line_start":670,"line_end":670,"column_start":9,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\bufread.rs","byte_start":82465,"byte_end":82479,"line_start":695,"line_end":695,"column_start":27,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1221},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88373,"byte_end":88382,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":88838,"byte_end":88847,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89444,"byte_end":89453,"line_start":77,"line_end":77,"column_start":24,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1228},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":89593,"byte_end":89602,"line_start":83,"line_end":83,"column_start":33,"column_end":42},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1228},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":90895,"byte_end":90904,"line_start":132,"line_end":132,"column_start":15,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91157,"byte_end":91166,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":91921,"byte_end":91930,"line_start":167,"line_end":167,"column_start":24,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1234},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":92070,"byte_end":92079,"line_start":173,"line_end":173,"column_start":33,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1234},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":93884,"byte_end":93898,"line_start":228,"line_end":228,"column_start":15,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":94248,"byte_end":94262,"line_start":239,"line_end":239,"column_start":9,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":95023,"byte_end":95037,"line_start":264,"line_end":264,"column_start":24,"column_end":38},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1240},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\read.rs","byte_start":95177,"byte_end":95191,"line_start":270,"line_end":270,"column_start":33,"column_end":47},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1240},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":96651,"byte_end":96660,"line_start":50,"line_end":50,"column_start":16,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":99862,"byte_end":99871,"line_start":140,"line_end":140,"column_start":26,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1246},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100298,"byte_end":100307,"line_start":156,"line_end":156,"column_start":32,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1246},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":100441,"byte_end":100450,"line_start":162,"line_end":162,"column_start":25,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":101892,"byte_end":101901,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":105395,"byte_end":105402,"line_start":314,"line_end":314,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":105586,"byte_end":105595,"line_start":322,"line_end":322,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1255},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\write.rs","byte_start":107237,"byte_end":107246,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1255},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":49100,"byte_end":49108,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52141,"byte_end":52150,"line_start":120,"line_end":120,"column_start":18,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\gz\\mod.rs","byte_start":52214,"byte_end":52223,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":115419,"byte_end":115434,"line_start":128,"line_end":128,"column_start":6,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":117597,"byte_end":117605,"line_start":194,"line_end":194,"column_start":6,"column_end":14},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":124375,"byte_end":124385,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130909,"byte_end":130924,"line_start":546,"line_end":546,"column_start":16,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1356},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":130934,"byte_end":130949,"line_start":548,"line_end":548,"column_start":6,"column_end":21},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131254,"byte_end":131259,"line_start":558,"line_end":558,"column_start":36,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":1,"index":3767},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131394,"byte_end":131409,"line_start":564,"line_end":564,"column_start":23,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131863,"byte_end":131876,"line_start":577,"line_end":577,"column_start":16,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":2302}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":131886,"byte_end":131899,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":132104,"byte_end":132109,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":1,"index":3767},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\mem.rs","byte_start":132242,"byte_end":132255,"line_start":592,"line_end":592,"column_start":23,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":139776,"byte_end":139784,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1288},"to":{"krate":0,"index":761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":140404,"byte_end":140414,"line_start":58,"line_end":58,"column_start":14,"column_end":24},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1292},"to":{"krate":0,"index":761}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":141112,"byte_end":141125,"line_start":90,"line_end":90,"column_start":16,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1296},"to":{"krate":0,"index":779}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":141326,"byte_end":141341,"line_start":104,"line_end":104,"column_start":16,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1325},"to":{"krate":0,"index":779}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":142970,"byte_end":142976,"line_start":161,"line_end":161,"column_start":24,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":145929,"byte_end":145935,"line_start":252,"line_end":252,"column_start":34,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1383},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zio.rs","byte_start":146963,"byte_end":146969,"line_start":282,"line_end":282,"column_start":33,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153158,"byte_end":153169,"line_start":41,"line_end":41,"column_start":18,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":153567,"byte_end":153578,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155143,"byte_end":155154,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1393},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":155320,"byte_end":155331,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1393},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":156640,"byte_end":156651,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":157001,"byte_end":157012,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158470,"byte_end":158481,"line_start":219,"line_end":219,"column_start":27,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\bufread.rs","byte_start":158649,"byte_end":158660,"line_start":225,"line_end":225,"column_start":36,"column_end":47},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":159834,"byte_end":159845,"line_start":37,"line_end":37,"column_start":15,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":160166,"byte_end":160177,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162179,"byte_end":162190,"line_start":102,"line_end":102,"column_start":24,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1407},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":162328,"byte_end":162339,"line_start":108,"line_end":108,"column_start":33,"column_end":44},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1407},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":163650,"byte_end":163661,"line_start":156,"line_end":156,"column_start":15,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":164278,"byte_end":164289,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":166184,"byte_end":166195,"line_start":226,"line_end":226,"column_start":24,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\read.rs","byte_start":166335,"byte_end":166346,"line_start":232,"line_end":232,"column_start":33,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":167421,"byte_end":167432,"line_start":35,"line_end":35,"column_start":16,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172003,"byte_end":172014,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":172227,"byte_end":172238,"line_start":164,"line_end":164,"column_start":32,"column_end":43},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":173583,"byte_end":173594,"line_start":210,"line_end":210,"column_start":16,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":177149,"byte_end":177160,"line_start":307,"line_end":307,"column_start":26,"column_end":37},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1425},"to":{"krate":1,"index":4365}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\zlib\\write.rs","byte_start":177373,"byte_end":177384,"line_start":317,"line_end":317,"column_start":32,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1425},"to":{"krate":1,"index":4305}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":6399,"byte_end":6410,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Administrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flate2-1.0.23\\src\\lib.rs","byte_start":7341,"byte_end":7352,"line_start":198,"line_end":198,"column_start":18,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1431},"to":{"krate":2,"index":2982}}]}